set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'
Plugin 'Valloric/YouCompleteMe'
Plugin 'SirVer/ultisnips'
Plugin 'honza/vim-snippets'
Plugin 'majutsushi/tagbar'
Plugin 'leafgarland/typescript-vim'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Bundle 'OmniSharp/omnisharp-vim'

call vundle#end()

set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab
"set ai "auto indent
"set si "smart indent
"set wrap "wrap lines

" Colors columns past 79 characters (promotes good practice)
let &colorcolumn="81,".join(range(82,200),",")
highlight ColorColumn ctermbg=235 guibg=lightgrey
highlight LineNr term=bold cterm=NONE ctermfg=DarkGrey ctermbg=NONE gui=NONE guifg=DarkGrey guibg=NONE
colorscheme spacecamp

set number
set showcmd
set wildmenu "visual autocomplete for command menu
set showmatch "highlight matching brackets

set incsearch "search as chars are typed
set hlsearch "highlight matches
set ignorecase "ignore case when searching
"set smartcase "case sensitive searching

set backspace=indent,eol,start
set history=5000
set ruler
set showcmd
set background=dark
set tabpagemax=30

"space key opens/closes in normal mode
nnoremap <space> za
set foldenable "enable folding
set foldlevelstart=10 "0 means all folds closed, 99 means all folds open
set foldnestmax=10 "max number of folds in folds i.e. nested folds
set foldmethod=indent "use indent level to base folds on

set path+=**
set backup
set backupdir=~/.vim/.backup
set undofile
set undodir=~/.vim/.backup
set viminfo+=n~/.vim/viminfo
set writebackup

for prefix in ['i', 'n', 'v']
    for key in ['<Up>', '<Down>', '<Left>', '<Right>']
        exe prefix . "noremap " . key . " <Nop>"
    endfor
endfor

" Open the tagbar toggler
nmap <F3> :TagbarToggle<CR>
" Deletes empty lines
nmap <F4> :g/^$/d<CR>
" Removes trailing whitespaces
nmap <F5> :%s/\s\+$//e<CR>
" Add an empty space after commas
nmap <F6> :%s/,\(\S\)/, \1/g<CR>
" Remove spaces in empty strings
nmap <F7> :%s/' '/''/gc<CR>

if has('autocmd')
    autocmd FileType python nmap <F2> :w\|!python %<cr>
    autocmd FileType python nmap <F8> :w\|!python3 %<cr>
    autocmd FileType sh nmap <F2> :w\|!sh %<cr>
    autocmd FileType cpp nmap <F2> :w\|!g++ -g -c -o %< % && ./%<<cr>
    autocmd FileType cs nmap <F2> :w\|!csc ./%<cr>
    autocmd BufRead *.html nmap <F2> :w\|!brave ./%<cr>

    autocmd BufNewFile *.py 0r ~/.vim/templates/skeleton.py
    autocmd BufNewFile *.sh 0r ~/.vim/templates/skeleton.sh
    autocmd BufNewFile *.js 0r ~/.vim/templates/skeleton.js
    autocmd BufNewFile *.html 0r ~/.vim/templates/skeleton.html

    autocmd VimLeave * call delete('~/.viminfo')
endif

"UtilSnips Config
let g:UltiSnipsExpandTrigger="<c-l>"
let g:UltiSnipsJumpForwardTrigger="<c-j>"
let g:UltiSnipsJumpBackwardTrigger="<c-k>"

" If you want :UltiSnipsEdit to split your window.
let g:UltiSnipsEditSplit="horizontal"

"YouCompleteMe Config
let g:ycm_autoclose_preview_window_after_completion=1

"Airline Config
let g:airline_section_b = '%{strftime("%c")}'
let g:airline_section_y = 'BN: %{bufnr("%")}'
let g:airline_theme = 'simple'
