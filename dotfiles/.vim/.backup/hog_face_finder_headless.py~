import sys
import dlib
from skimage import io
import cv2
import time
from PIL import Image
from datetime import datetime, timedelta
import numpy as np

def fetch_frame(input_source):
    ret, frame = None, None
    if callable(getattr(input_source, 'read')): 
        ret, frame = input_source.read() 
    small_frame = cv2.resize(frame, (0, 0), fx=1.00, fy=1.00)
    return small_frame

def initiate_loop(timeout_seconds=5, timeout_microseconds=0):
    input_source = cv2.VideoCapture(0)
    face_detector = dlib.get_frontal_face_detector()
    previous_timestamp = None
    run_loop = True
    while run_loop:
        timeout = timedelta(seconds=timeout_seconds)
        if not previous_timestamp: previous_timestamp = datetime.now()
        if timeout_microseconds > 0: timeout = timedelta(microseconds=timeout_microseconds)
        if datetime.now() - previous_timestamp > timeout:
            previous_timestamp = datetime.now()
        image = fetch_frame(input_source)
        detected_faces = face_detector(image, 1)
        print("I found {} faces in the frame.".format(len(detected_faces)))
        for i, face_rect in enumerate(detected_faces):
            print("- Face #{} found at Left: {} Top: {} Right: {} Bottom: {}".format(i, face_rect.left(), face_rect.top(), face_rect.right(), face_rect.bottom()))
    input_source.release()

if __name__ == "__main__":
    initiate_loop(timeout_microseconds=5)
