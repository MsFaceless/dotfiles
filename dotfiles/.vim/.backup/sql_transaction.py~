# -*- coding: utf-8 -*-

import os
from datetime import datetime
from hashlib import sha256

from sqlalchemy import Table, ForeignKey, Column
from sqlalchemy.types import Unicode, Integer, DateTime, Boolean
from sqlalchemy.orm import relation, synonym

from rocket.model import DeclarativeBase, metadata, DBSession
from rocket.lib.model_utils import PhatBase, common_columns, get_phat_table, get_type_table

###############################################################################
# All Transaction Related Types
###############################################################################

# ---------------------------- Premium --------------------------------------
PremiumDueSettlementStateType = get_type_table(model_name='PremiumDueSettlementState', table_name='premium_due_settlement_state')  # fully_settled, partially_settled, awaiting_settlement
PremiumDuePaymentType = get_type_table(model_name='PremiumDuePayment', table_name='premium_due_payment')  # final, partial, reversal
PremiumDuePaymentStateType = get_type_table(model_name='PremiumDuePaymentState', table_name='premium_due_payment_state')  # pending, success, failed
PremiumDuePaymentStateFailedType = get_type_table(model_name='PremiumDuePaymentStateFailed', table_name='premium_due_payment_state_failed')  # transaction_failed, transaction_cancelled

# ---------------------------- Transaction --------------------------------------
TransactionType = get_type_table(model_name='Transaction', table_name='transaction')  # reversal, payment_made, payment_received
TransactionStateType = get_type_table(model_name='TransactionState', table_name='transaction_state')  # pending, processed, failed
TransactionDistributionType = get_type_table(model_name='TransactionDistribution', table_name='transaction_distribution')  # premium, claim
PaymentReceivedType = get_type_table(model_name='PaymentReceived', table_name='payment_received')  # debit_order, eft, cash
TransactionStateFailedType = get_type_table(model_name='TransactionStateFailed', table_name='transaction_state_failed')  # incorrect_bank_details

# ---------------------------- Debit Order --------------------------------------
PaymentProviderDocumentationType = get_type_table(model_name='PaymentProviderDocumentation', table_name='payment_provider_documentation')  # TODO need types
DebitOrderRunStateType = get_type_table(model_name='DebitOrderRunState', table_name='debit_order_run_state')  # completed, in_progress
DebitOrderRunFileType = get_type_table(model_name='DebitOrderRunFile', table_name='debit_order_run_file')  # collection_file

###############################################################################
# Premium
###############################################################################

tbl_premium_due = {
    '__tablename__': 'tbl_premium_due',
    'premium_due_date': common_columns.get('date')(),
    'amount': common_columns.get('currency_not_nullable')(),
    'policy_id': common_columns.get('integer_not_nullable')(),
    'premium_due_settlement_state_id': common_columns.get('integer_not_nullable')(),
}
PremiumDue = get_phat_table(model_name='PremiumDue', columndict=tbl_premium_due)

tbl_transaction = {
    '__tablename__': 'tbl_transaction',
    'amount': common_columns.get('currency_not_nullable')(),
    'transaction_state_type_id': common_columns.get('integer_not_nullable')(),
    'payment_received_type_id': common_columns.get('integer_not_nullable')(),
}
Transaction = get_phat_table(model_name='Transaction', columndict=tbl_transaction)

tbl_premium_due_transaction_link = {
    '__tablename__': 'tbl_premium_due_transaction_link',
    'policy_id': common_columns.get('integer_not_nullable')(),
    'premium_due_id': common_columns.get('integer_not_nullable')(),
    'transaction_id': common_columns.get('integer_not_nullable')(),
}
PremiumDueTransactionLink = get_phat_table(model_name='PremiumDueTransactionLink', columndict=tbl_premium_due_transaction_link)
