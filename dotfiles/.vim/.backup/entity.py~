# -*- coding: utf-8 -*-
"""Entity Controller"""

from tg import expose, require, url, lurl
from tg import request, redirect, tmpl_context
from tg import predicates
from tg.exceptions import HTTPFound

from rocket.model import *

from tg.i18n import ugettext as _
from tg.i18n import lazy_ugettext as l_

from sqlalchemy import desc, asc, or_

from rocket.lib.tg_utils import *
from rocket.lib.base import BaseController
from rocket.lib.type_utils import TypeDictionary as TypeDict

from rocket.controllers.common import CommonController

LIMIT = 20
TYPEUTIL = TypeDict()
COMMON = CommonController()
SEARCHKEY_ENTITY = 'Entity_SearchKeyWord'

__all__ = ['EntityController']

class EntityController(BaseController):
    """Docstring for entity."""

    @expose()
    def _default(self, *args, **kwargs):
        return 'This page is not available.'

    @require(predicates.not_anonymous())
    @expose('rocket.templates.generic')
    def index(self, *args, **kwargs):
        html = self.get_active_entity_html(*args, **kwargs)
        javascript = self.get_javascript_entity_onload()
        title = _("Organisations")
        return dict(title=title, html=html, javascript=javascript)

    @expose()
    def get_active_entity_html(self, *args, **kwargs):
        kwargs['searchkey'] = SEARCHKEY_ENTITY
        searchphrase = COMMON.get_searchphrase(**kwargs)
        entitytable = self.get_entity_htmltbl(kwargs)
        html = f"""
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header">
                        <div class="row d-flex">
                            <div class="col-md-6">
                                <h4 class="card-title">{_('Organisations')}</h4>
                            </div>
                            <div class="col-md-6 text-right">
                                <button id="create_new_entity" class="btn btn-primary ml-auto">New Organisation</button>
                            </div>
                        </div>
                        <div class="row d-flex align-items-center">
                            <div class="col-md-4">
                                <input type="text" class="form-control search" name="searchphrase"  id='searchphrase'  value='{searchphrase}' placeholder="Search">
                            </div>
                            <div class="col-md-8">
                                <button class="btn btn-primary" id='action_search'>Search</button>
                                <button class="btn btn-primary" id='btn_reset'>Reset</button>
                            </div>
                        </div>
                        <hr>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive" id= 'div_entity'>
                            {entitytable}
                        </div>
                    </div>
                </div>
            </div>
        </div>
        """
        javascript="""
        <script src=''>
          $("#create_new_entity").click(function(){
                $.redirect('/entity/new_entity');
            });
              $('#action_search').click(function(){
                 var kwargs = 'searchphrase='+$('#searchphrase').val();
                 $('#div_entity').load('/entity/get_entity_htmltbl', kwargs, function(data){
                     return false;
                 });
             })
             $('#btn_reset').click(function(){
              $('#searchphrase').val('').focus();
                 $('#div_entity').load('/entity/get_entity_htmltbl', 'reset=true', function(data){
                     return false;
                 });
             })
        </script>
        """
        return html + javascript

    @expose()
    def get_entity_htmltbl(self, *args, **kwargs):
        dbase_query = self.get_active_entity_organisation_list(**kwargs)
        outputlist = []
        for item in dbase_query:

            role = ''
            sys = EntityOrganisationSystemOwner.by_attr_first('entity_organisation_id', item.id)
            if sys:
                role += 'System Owner, '

            prod = EntityOrganisationProductOwner.by_attr_first('entity_organisation_id', item.id)
            if prod:
                role += 'Product Owner, '

            cli = EntityOrganisationClient.by_attr_first('entity_organisation_id', item.id)
            if cli:
                role += 'Client, '

            ins = EntityOrganisationInsurer.by_attr_first('entity_organisation_id', item.id)
            if ins:
                role += 'Insurer, '

            inter = EntityOrganisationIntermediary.by_attr_first('entity_id', item.entity_id)
            if inter:
                role += 'Intermediary, '

            bra = SystemOwnerBranch.by_attr_first('entity_organisation_branch_id', item.id)
            if bra:
                role += 'Branch, '

            disable_text = 'disable'
            code = f"<div class='edit entity_edit action_link' entity_id='{item.entity_id}'>{item.code}</div>"
            if not item.bln_active:
                disable_text = 'enable'
                code = item.code

            entity_type = TYPEUTIL.get_pretty_name("entity_organisation_type", item.entity_organisation_type_id)
            outputlist.append({
                'code': code,
                'name': item.name,
                'entity_type': entity_type,
                'registration_number': item.registration_number,
                'tax_number': item.tax_number,
                'role': role,
                'remove': f"<div class='organisation_active' active='{item.bln_active}' entity_organisation_id='{item.id}' desc='{item.name}'>{disable_text}</div>",
            })
        theadlist = [
            'Code',
            'Name',
            'Company Type',
            'Tax Number',
            'Registration Number',
            'Role',
            '',
        ]
        dbcolumnlist = [
            'code',
            'name',
            'entity_type',
            'tax_number',
            'registration_number',
            'role',
            'remove',
        ]
        tdclasslist = [
            '',
            '',
            '',
            '',
            '',
            'text-center',
            'action_link text-right',
        ]
        html = build_html_table(outputlist, dbcolumnlist, theadlist, "entity_table", tdclasslist)
        javascript = """
        <script src=''>
            $(".entity_edit").click(function(){
                var data = {entity_id : $(this).attr('entity_id')};
                $.redirect('/entity/edit_organisation', data);
            });
            $(".organisation_active").click(function(){
                var text = $(this).html();
                var desc = $(this).attr('desc');
                var entity_organisation_id = $(this).attr('entity_organisation_id');
                var kwargs = {
                    'text': text,
                    'desc': desc,
                    'entity_organisation_id': entity_organisation_id,
                }
                $('#dialogdiv').load('/entity/get_organisation_enable_disable_modal?', kwargs, function(data){
                    return false;
                });
            });
        </script>
        """
        return  html + javascript

    @expose()
    def get_organisation_enable_disable_modal(self, *args, **kwargs):
        entity_organisation_id = kwargs.get('entity_organisation_id', None)
        if not entity_organisation_id:
            return ''

        org = EntityOrganisation.by_attr_first_ignore_active('id', entity_organisation_id)
        if not org:
            return ''

        text = kwargs.get('text', None)
        desc = kwargs.get('desc', None)

        html = f"""
        <div class="modal fade" id="dialog_organisation_enable_disable_modal" tabindex="-1" role="dialog" aria-labelledby="myorganisation_enable_disableLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="col-md-12">
                            <h4 class="card-title">{str(text).capitalize()}: {desc}?</h4>
                        </div>
                    </div>
                    <div class="modal-body">
                        <form id='form_organisation_enable_disable'>
                            <p>Are you sure that you want to {text} '{desc}'?</p>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-outline-primary organisation_enable_disable_back">No</button>
                        <button class="btn btn-primary organisation_enable_disable_yes" organisation_id='{entity_organisation_id}'>Yes</button>
                    </div>
                </div>
            </div>
        </div>
        """
        javascript = """
        <script src=''>
            setFormValidation('#form_organisation_enable_disable');
            $('.organisation_enable_disable_back').click(function(){
                $('#dialog_organisation_enable_disable_modal').modal('hide');
            });
            $('.organisation_enable_disable_yes').click(function() {
                var organisation_id = $(this).attr('organisation_id');
                var formserial = $('#form_organisation_activate').serialize();
                formserial += '&entity_organisation_id='+organisation_id;
                $.post('/entity/toggle_organisation_active?', formserial, function(data){
                    $.redirect('/entity/index');
                    return false;
                });
            });
            $('#dialog_organisation_enable_disable_modal').modal();
        </script>
        """
        return html + javascript

    @expose()
    def toggle_organisation_active(self, *args, **kwargs):
        entity_organisation_id = kwargs.get('entity_organisation_id', None)
        org = DBSession.query(EntityOrganisation).filter(EntityOrganisation.id == entity_organisation_id).first()
        if not org:
            return 'false'

        if org.bln_active:
            org.bln_active = False
        else:
            org.bln_active = True
        DBSession.flush()
        return 'true'

    @expose()
    def get_javascript_entity_onload(self, *args, **kwargs):
        javascript = """
        """
        return javascript

    @expose()
    def get_active_entity_organisation_list(self, *args, **kwargs):
        usernow = request.identity.get('user')

        dbase_query = EntityOrganisationProductOwner.get_all('id')
        idlist = [x.entity_organisation_id for x in dbase_query]

        dbase_query = EntityOrganisationClient.get_all('id')
        idlist.extend([x.entity_organisation_id for x in dbase_query])

        dbase_query = EntityOrganisationInsurer.get_all('id')
        idlist.extend([x.entity_organisation_id for x in dbase_query])

        dbase_query = EntityOrganisationSystemOwner.get_all('id')
        idlist.extend([x.entity_organisation_id for x in dbase_query])

        idlist = list(set(idlist))

        kwargs['searchkey'] = SEARCHKEY_ENTITY
        searchphrase = COMMON.get_searchphrase(**kwargs).lower()
        if searchphrase:
            searchphrase = "%" + searchphrase + "%"
            dbase_query = DBSession.query(EntityOrganisation). \
                filter(or_(
                    EntityOrganisation.code.ilike(searchphrase),
                    EntityOrganisation.name.ilike(searchphrase),
                    EntityOrganisation.tax_number.ilike(searchphrase),
                    EntityOrganisation.registration_number.ilike(searchphrase),
                    EntityOrganisation.financial_regulatory_number.ilike(searchphrase),
                )). \
                order_by(asc(EntityOrganisation.name)). \
                all()
                #filter(EntityOrganisation.bln_active == True). \
        else:
            dbase_query = DBSession.query(EntityOrganisation). \
                order_by(EntityOrganisation.id.desc()). \
                limit(LIMIT)
                #filter(EntityOrganisation.id.in_(idlist)). \
                #filter(EntityOrganisation.bln_active == True). \
        return dbase_query

    @expose('rocket.templates.generic')
    def new_entity(self, *args, **kwargs):
        redirect_url = kwargs.get('redirect_url', '')
        card_title = _("New Organisation")
        form_id = "form_new_entity"
        extra_form_fields = f"""
        <hr>
        <div class="row">
            <div class="col-md-4 ml-10">
                <div class ="col-md-6">
                    <label class="form-check-label">
                        <input class="form-check-input user_role" name="is_insurer" id="is_insurer" type="checkbox">
                        <span class="form-check-sign">Is Insurer</span>
                    </label>
                </div>
                <div id="is_insurer_fields" class="col-md-12">
                </div>
            </div>
            <div class="col-md-4">
                <div class ="col-md-12">
                    <label class="form-check-label">
                        <input class="form-check-input user_role" name="is_product_owner" id="is_product_owner" type="checkbox">
                        <span class="form-check-sign">Is Product Owner</span>
                    </label>
                </div>
                <div id="is_product_owner_fields"></div>
            </div>
            <div class="col-md-4">
                <div class ="col-md-12">
                    <label class="form-check-label">
                        <input class="form-check-input user_role" name="is_client" id="is_client" type="checkbox">
                        <span class="form-check-sign">Is Client</span>
                    </label>
                </div>
                <div id="is_client_fields"></div>
            </div>
        </div>
        <hr>
        """
        organisation_html = COMMON.new_organisation_html(**{'card_title': card_title, 'form_id': form_id, 'back_button': "", 'extra_form_fields': extra_form_fields})
        html = f"""
        {organisation_html}
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-body">
                        <button id='save_new_entity' class="btn btn-primary" redirect_url='{redirect_url}'>Save</button>
                        <button class="btn btn-outline-primary entity_back">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
        """
        javascript = """
            setFormValidation('#form_new_entity');

            $('#is_insurer').change(function(){
                var is_insurer = $('#is_insurer').val();
                if(this.checked) {
                    $('#is_insurer_fields').load('/entity/get_insurer_fields_html', function(data){
                        return false;
                    });
                } else {
                    $('#is_insurer_fields').empty();
                }
            });

            $('#is_product_owner').change(function(){
                var is_product_owner = $('#is_product_owner').val();
                if(this.checked) {
                    $('#is_product_owner_fields').load('/entity/get_product_owner_fields_html', function(data){
                        return false;
                    });
                } else {
                    $('#is_product_owner_fields').empty();
                }
            });

            $('#is_client').change(function(){
                var is_client = $('#is_client').val();
                if(this.checked) {
                    $('#is_client_fields').load('/entity/get_client_fields_html', function(data){
                        return false;
                    });
                } else {
                    $('#is_client_fields').empty();
                }
            });

            $('#save_new_entity').click(function(){
                var valid = FormIsValid("#form_new_entity");
                if(valid){
                    var redirect_url = $(this).attr('redirect_url');
                    var formserial = $('#form_new_entity').serialize();
                    formserial += '&redirect_url='+redirect_url;

                    $.post('/entity/save_new_entityobj?', formserial, function(data){
                        var result = JSON.parse(data);
                        if(result.success === true){
                            $.redirect(result.redirect, {'entity_id' : result.entity_id});
                        };
                        return false;
                    });
                }
            });
            $('.entity_back').click(function(){
                $.redirect('/entity/index');
            });
        """
        return dict(title=card_title, html=html, javascript=javascript)

    @expose()
    def get_insurer_fields_html(self, *args, **kwargs):
        html = f"""
        """
        return html

    @expose()
    def get_product_owner_fields_html(self, *args, **kwargs):
        html = f"""
        <div class="form-group row">
            <label class="col-md-4 col-form-label" for="">Policy Number Prefix</label>
            <div class="col-md-8">
                <input id="policy_number_prefix" type="text" name="policy_number_prefix" class="form-control">
            </div>
        </div>
        """
        return html

    @expose()
    def get_client_fields_html(self, *args, **kwargs):
        dropdown_billing_frequency = self.get_selectbox_billing_frequency()
        html = f"""
        <div class="form-group row">
            <label class="col-md-4 col-form-label" for="">Billing Frequency</label>
            <div class="col-md-8">
                {dropdown_billing_frequency}
            </div>
        </div>
        """
        return html

    @expose()
    def save_new_entityobj(self, *args, **kwargs):
        dict_entity = {
            'entity_type_id': kwargs.get('entity_type_id'),
        }
        entity_id = COMMON.save_new_entity(**dict_entity)

        dict_entity_organisation = {
            'entity_id': entity_id,
            'entity_organisation_type_id': kwargs.get('entity_organisation_type_id'),
            'code': kwargs.get('code'),
            'name': kwargs.get('name'),
            'tax_number': kwargs.get('tax_number'),
            'registration_number': kwargs.get('registration_number'),
            'financial_regulatory_number': kwargs.get('financial_regulatory_number'),
        }
        entity_organisation_id = COMMON.save_new_entity_organisation(**dict_entity_organisation)

        is_product_owner = kwargs.get('is_product_owner', False)
        if is_product_owner:
            dict_product_owner = {
                'entity_organisation_id': entity_organisation_id,
                'policy_number_prefix': kwargs.get('policy_number_prefix'),
            }
            self.save_new_product_owner(**dict_product_owner)

        is_insurer = kwargs.get('is_insurer', False)
        if is_insurer:
            dict_insurer = {
                'entity_organisation_id': entity_organisation_id,
            }
            self.save_new_insurer(**dict_insurer)

        is_client = kwargs.get('is_client', False)
        if is_client:
            dict_entity_client = {
                'entity_organisation_id': entity_organisation_id,
                'billing_frequency_type_id': kwargs.get('billing_frequency_type_id'),
            }
            COMMON.save_new_entity_organisation_client(**dict_entity_client)

        redirect_url = kwargs.get('redirect_url', None)
        if not redirect_url:
            redirect_url = '/entity/edit_organisation'
        return json.dumps({'success': True, 'entity_id': entity_id, 'redirect': redirect_url})

    @expose()
    def save_new_insurer(self, *args, **kwargs):
        usernow = request.identity.get('user', None)
        this = EntityOrganisationInsurer()
        this.entity_organisation_id = kwargs.get('entity_organisation_id', None)
        this.added_by = usernow.id
        DBSession.add(this)
        DBSession.flush()
        return this.id

    @expose()
    def save_new_product_owner(self, *args, **kwargs):
        usernow = request.identity.get('user', None)
        this = EntityOrganisationProductOwner()
        this.entity_organisation_id = kwargs.get('entity_organisation_id', None)
        this.policy_number_prefix = kwargs.get('policy_number_prefix', None)
        this.added_by = usernow.id
        DBSession.add(this)
        DBSession.flush()
        return this.id

    def get_selectbox_mail_option(self, selected=None, *args, **kwargs):
        kwargs['id'] = 'mail_option_type_id'
        kwargs['selected'] = selected
        kwargs['outputdict'] = TYPEUTIL.get_dict_of_types("mail_option_type")
        return create_selectbox_html(**kwargs)

    def get_selectbox_message_batch(self, selected=None, *args, **kwargs):
        kwargs['id'] = 'message_batch_type_id'
        kwargs['selected'] = selected
        kwargs['outputdict'] = TYPEUTIL.get_dict_of_types("message_batch_type")
        return create_selectbox_html(**kwargs)

    def get_selectbox_billing_frequency(self, selected=None, *args, **kwargs):
        if not selected:
            monthly = TYPEUTIL.get_id_of_name('billing_frequency_type', 'monthly')
            if monthly:
                selected = monthly

        kwargs['id'] = 'billing_frequency_type_id'
        kwargs['selected'] = selected
        kwargs['outputdict'] = TYPEUTIL.get_dict_of_types("billing_frequency_type")
        return create_selectbox_html(**kwargs)

    @require(predicates.not_anonymous())
    @expose('rocket.templates.generic')
    def edit_organisation(self, *args, **kwargs):
        entity_id = kwargs.get('entity_id', None)
        if not entity_id: redirect('/entity/index')
        entity = Entity.by_id(entity_id)
        if not entity: redirect('/entity/index')
        entity_organisation = EntityOrganisation.by_attr_first('entity_id', entity_id)
        if not entity_organisation: redirect('/entity/index')
        kwargs['entity_organisation'] = entity_organisation
        kwargs['entity'] = entity
        html = self.get_edit_organisation_html(**kwargs)
        javascript = self.get_javascript_edit_organisation_onload()
        title = self.get_organisation_title_html(**kwargs)
        return dict(title=title, html=html, javascript=javascript)

    def get_edit_organisation_html(self, *args, **kwargs):
        entity_organisation = kwargs.get('entity_organisation')
        if not entity_organisation: return ''
        kwargs['entity_organisation_id'] = entity_organisation.id
        kwargs['entity_id'] =  entity_organisation.entity_id
        kwargs['redirect_url'] = '/entity/edit_organisation'

        card_header = self.get_edit_organisation_card_title_html(**kwargs)
        card_organisation_details = COMMON.edit_organisation_html(**kwargs)
        card_organisation_address = COMMON.get_edit_organisation_address_html(**kwargs)
        card_organisation_contact = COMMON.get_edit_organisation_contact_html(**kwargs)
        card_organisation_bank = COMMON.get_edit_organisation_bank_html(**kwargs)
        entity_client_card = self.get_entity_client_html(**kwargs)
        product_owner_and_insure_card = self.get_product_owner_and_insurer_html(**kwargs)

        html = f"""
        {card_header}
        <div class="row">
            <div class="col-md-12 ml-auto mr-auto">
                <div class="col-md-12 ml-auto mr-auto">
                    {card_organisation_details}
                    {card_organisation_contact}
                    {card_organisation_address}
                    {card_organisation_bank}

                    <div class="row">
                        <div class="col-md-6">{entity_client_card}</div>
                        <div class="col-md-6">{product_owner_and_insure_card}</div>
                    </div>

                </div>
            </div>
        </div>
        """
        return html

    @expose()
    def get_product_owner_and_insurer_html(self, *args, **kwargs):
        entity_organisation = kwargs.get('entity_organisation')

        product_owner = EntityOrganisationProductOwner.by_attr_first("entity_organisation_id", entity_organisation.id)
        insurer = EntityOrganisationInsurer.by_attr_first("entity_organisation_id", entity_organisation.id)

        product_fields = ''
        insurer_fields = ''
        if product_owner:
            product_fields = f"""
            <input type="hidden" id="product_owner_id" name="product_owner_id" class="form-control" value="{product_owner.id}"/>
            <div class="form-group row">
                <label class="col-md-4 col-form-label" for="">Policy Number Prefix</label>
                <div class="col-md-8">
                    <input id="policy_number_prefix" type="text" name="policy_number_prefix" class="form-control" value="{product_owner.policy_number_prefix}">
                </div>
            </div>
            """

        if insurer:
            checked = 'checked'
            insurer_fields = f"""
            <input  type="hidden" id="insurer_id" name="insurer_id" class="form-control" value="{insurer.id}"/>
            <div class="form-group row">
                <label class="col-md-4 col-form-label" for="active" >Is Insurer</label>
                <div class="col-md-8">
                    <div class="form-check">
                        <label class="form-check-label">
                            <input class="form-check-input" type="checkbox" name="is_insurer" id="is_insurer" {checked}/>
                            <span class="form-check-sign"></span>
                        </label>
                    </div>
                </div>
            </div>
            """
        html = f"""
        <div class="card">
            <div class="card-header">
                <div class="row d-flex">
                    <div class="col-md-6">
                        <h4 class="card-title">{_('Product Owner Details')}</h4>
                    </div>
                    <div class="col-md-6  text-right">
                        <button id='save_product_owner' class="btn btn-primary">Save</button>
                    </div>
                </div>
                <div class="row d-flex">
                    <div class="col-md-12">
                        <hr>
                        <div class="col-md-12">
                            <form id = "form_product_owner" >
                                <input type="hidden" id="entity_id" name="entity_id" class="form-control" value="{entity_organisation.entity_id}"/>
                                <input type="hidden" id="entity_organisation_id" name="entity_organisation_id" class="form-control" value="{entity_organisation.id}"/>
                                {product_fields}
                                {insurer_fields}
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        """
        return html

    @expose()
    def get_entity_client_html(self, *args, **kwargs):
        entity_organisation_client = kwargs.get('entity_organisation_client')
        entity_organisation = kwargs.get('entity_organisation', None)
        dropdown_billing_frequency = self.get_selectbox_billing_frequency()
        html = f"""
        <div class="card">
            <div class="card-header">
                <div class="row d-flex">
                    <div class="col-md-6">
                        <h4 class="card-title">{_('Client Details')}</h4>
                    </div>
                    <div class="col-md-6  text-right">
                        <button id='save_entity_client' class="btn btn-primary">Save</button>
                    </div>
                </div>
                <div class="row d-flex">
                    <div class="col-md-12">
                        <hr>
                        <div class="col-md-12">
                            <form id ="form_entity_client" class="">
                                <input type="hidden" id="entity_organisation_id" name="entity_organisation_id" class="form-control" value="{entity_organisation.id}"/>
                                <input type="hidden" id="entity_id" name="entity_id" class="form-control" value="{entity_organisation.entity_id}"/>
                                <div class="form-group row">
                                    <label class="col-md-4 col-form-label" for="">Billing Frequency</label>
                                    <div class="col-md-8">
                                        {dropdown_billing_frequency}
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        """
        return html

    @expose()
    def get_district_html(self, *args, **kwargs):
        dropdown_district = COMMON.get_selectbox_district(**kwargs)
        html = f"""
        <div class="row">
            <div class="col-md-12">
                <div class="form-group row">
                    <label class="col-md-3 col-form-label">{_('District')}</label>
                    <div class="col-md-9">
                        {dropdown_district}
                    </div>
                </div>
            </div>
        </div>
        """
        javascript = """
        <script src=''>
         $("#district_id").change(function () {
                var district_id = $('#district_id option:selected').val();
                var kwargs ={'district_id': district_id};

               $('#div_centre').load('/entity/get_center_html', kwargs, function(data){
                return false;
               });

             });
        $('#district_id').trigger('change');
        </script>
        """
        return html + javascript

    @expose()
    def get_center_html(self, *args, **kwargs):
        dropdown_center = COMMON.get_selectbox_centre(**kwargs)
        html = f"""
        <div class="row">
            <div class="col-md-12">
                <div class="form-group row">
                    <label class="col-md-3 col-form-label">{_('Center')}</label>
                    <div class="col-md-9">
                         {dropdown_center}
                    </div>
                </div>
            </div>
        </div>
        """
        javascript = """
        <script src=''>
         $("#district_id").change(function () {
                var district_id = $('#district_id option:selected').val();
                var kwargs ={'district_id': district_id};

               $('#div_centre').load('/entity/get_center_html', kwargs, function(data){
                return false;
               });

             });
        </script>
        """
        return html + javascript

    def get_organisation_title_html(self, *args, **kwargs):
        entity_organisation = kwargs.get('entity_organisation')
        if not entity_organisation: return ''
        return f"Edit Organisation: {entity_organisation.name} "

    def get_javascript_edit_organisation_onload(self, *args, **kwargs):
        javascript = """
        $('.organisation_back').click(function(){
            $.redirect('/entity/index');
        });
        createDatepicker('#end_date');
        createDatepicker('#start_date');
        createDatepicker('#last_payment_date');
        createDatepicker('#last_invoice_date');
        createDatepicker('#register_date');

        $('.organisation_back').click(function(){
            $.redirect('/entity/index');
        });

        $("#region_id").change(function () {
            var region_id = $('#region_id option:selected').val();
            var kwargs ={'region_id': region_id};

            $('#div_district').load('/entity/get_district_html', kwargs, function(data){
                // $('#div_district').empty();
                //$('#div_centre').empty();
                return false;
            });

        });
        $("#region_id").trigger('change');

        setFormValidation('#form_entity_organisation');
        setFormValidation('#form_organisation_bank');
        setFormValidation('#form_product_owner');
        setFormValidation('#form_entity_client');
        setFormValidation('#form_postal_address');

        $('#save_organisation').click(function(){
            var valid_organisation = FormIsValid("#form_entity_organisation");
            if(valid_organisation){
                var formserial = new Object;
                formserial = getFormData(form_entity_organisation);
                var data = {data : JSON.stringify(formserial)};
                $.post('/entity/save_edit_entity_organisation?', data, function(data){
                    var result = JSON.parse(data);
                    if(result.success === true){
                        $.redirect(result.redirect, {'entity_id' : result.entity_id});
                    };
                    return false;
                });
            }
        });

        $('#save_entity_client').click(function(){
            var valid = FormIsValid("#form_entity_client");
            if(valid){
                var formserial = new Object;
                formserial = getFormData(form_entity_client);
                var data = {data : JSON.stringify(formserial)};
                $.post('/entity/save_edit_entity_client?', data, function(data){
                    var result = JSON.parse(data);
                    if(result.success === true){
                        $.redirect(result.redirect, {'entity_id' : result.entity_id});
                    };
                    return false;
                });
            }
        });
        $('#save_product_owner').click(function(){
            var valid = FormIsValid("#form_product_owner");
            if(valid){
                var formserial = new Object;
                formserial = getFormData(form_product_owner);
                var data = {data : JSON.stringify(formserial)};
                $.post('/entity/save_edit_product_owner?', data, function(data){
                    var result = JSON.parse(data);
                    if(result.success === true){
                        $.redirect(result.redirect, {'entity_id' : result.entity_id});
                    };
                    return false;
                });
            }
        });
        $('#save_bank').click(function(){
            var valid = FormIsValid("#form_organisation_bank");
            if(valid){
                var formserial = new Object;
                formserial = getFormData(form_organisation_bank);
                var data = {data : JSON.stringify(formserial)};
                $.post('/entity/save_or_edit_bank?', data, function(data){
                    var result = JSON.parse(data);
                    if(result.success === true){
                        $.redirect(result.redirect, {'entity_id' : result.entity_id});
                    };
                    return false;
                });
            }
        });
        $('#save_postal_address').click(function(){
            var valid = FormIsValid("#form_postal_address");
            if(valid){
                var formserial = new Object;
                formserial = getFormData(form_postal_address);
                var data = {data : JSON.stringify(formserial)};
                $.post('/entity/save_or_edit_address?', data, function(data){
                    var result = JSON.parse(data);
                    if(result.success === true){
                        $.redirect(result.redirect, {'entity_id' : result.entity_id});
                    };
                    return false;
                });
            }
        });
        $('#save_street_address').click(function(){
            var valid = FormIsValid("#form_street_address");
            if(valid){
                var formserial = new Object;
                formserial = getFormData(form_street_address);
                var data = {data : JSON.stringify(formserial)};
                $.post('/entity/save_or_edit_address?', data, function(data){
                    var result = JSON.parse(data);
                    if(result.success === true){
                        $.redirect(result.redirect, {'entity_id' : result.entity_id});
                    };
                    return false;
                });
            }
        });
        $("#create_new_contact").click(function(){
            var kwargs = {entity_organisation_id : $(this).attr('entity_organisation_id'), entity_id : $(this).attr('entity_id')};
            $('#dialogdiv').load('/entity/get_modal_new_contact?', kwargs, function(data){
                return false;
            });
        });

        $(".edit_contact").click(function(){
            var kwargs = {contact_id : $(this).attr('contact_id'), entity_organisation_id : $(this).attr('entity_organisation_id') , entity_id : $(this).attr('entity_id')};
            $('#dialogdiv').load('/entity/get_modal_edit_contact?', kwargs, function(data){
                return false;
            });
        });
        """

        return javascript

    def get_edit_organisation_card_title_html(self, *args, **kwargs):
        entity_organisation = kwargs.get('entity_organisation')
        if not entity_organisation: return ''
        html = f"""
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <div class="row d-flex">
                        <div class="col-md-8">
                            <h4 class="card-title">{_('Edit Organisation:')} {entity_organisation.name} </h4>
                        </div>
                        <div class="col-md-4 text-right">
                            <button class="btn btn-primary ml-auto organisation_back">Back to Organisation</button>
                        </div>
                    </div>
                    <div class="row d-flex">
                        <div class="col-md-12">
                            <hr>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        """
        return html

    @expose()
    def save_edit_entity_organisation(self, *args, **kwargs):
        data = json.loads(kwargs.get('data', json.dumps({})))
        result = COMMON.save_edit_entity_organisation(**data)
        redirect_url = '/entity/edit_organisation'
        if result:
            return json.dumps({'success': True, 'entity_id': data.get('entity_id'), 'redirect': redirect_url})
        else:
            return json.dumps({'success': False, 'entity_id': data.get('entity_id'), 'redirect': redirect_url})

    @expose()
    def save_edit_entity_client(self, *args, **kwargs):
        data = json.loads(kwargs.get('data', json.dumps({})))
        usernow = request.identity.get('user', None)
        this = EntityOrganisationClient.by_id(data.get('entity_organisation_id'))
        if not this: return ''
        this.billing_frequency_type_id = data.get('billing_frequency_type_id', None)
        this.added_by = usernow.id
        this.bln_active = True
        DBSession.flush()
        redirect_url = '/entity/edit_organisation'
        return json.dumps({'success': True, 'entity_id': data.get('entity_id'), 'redirect': redirect_url})

    @expose()
    def save_edit_product_owner(self, *args, **kwargs):
        data = json.loads(kwargs.get('data', json.dumps({})))
        usernow = request.identity.get('user', None)

        if data.get('is_insurer'):
            this = EntityOrganisationInsurer.by_id(data.get('insurer_id'))
            if not this: return ''
            this.added_by = usernow.id
            this.bln_active = False
            DBSession.add(this)
            DBSession.flush()

        if data.get('policy_number_prefix'):
            this = EntityOrganisationProductOwner.by_id(data.get('product_owner_id'))
            if not this: return ''
            this.policy_number_prefix = data.get('policy_number_prefix', None)
            this.added_by = usernow.id
            this.bln_active = True
            DBSession.flush()

        redirect_url = '/entity/edit_organisation'
        return json.dumps({'success': True, 'entity_id': data.get('entity_id'), 'redirect': redirect_url})

    @expose()
    def save_or_edit_bank(self, *args, **kwargs):
        data = json.loads(kwargs.get('data', json.dumps({})))
        result = COMMON.save_or_edit_bank(**data)
        redirect_url = '/entity/edit_organisation'
        if result:
            return json.dumps({'success': True, 'entity_id': data.get('entity_id'), 'redirect': redirect_url})
        else:
            return json.dumps({'success': False, 'entity_id': data.get('entity_id'), 'redirect': redirect_url})

    @expose()
    def save_or_edit_address(self, *args, **kwargs):
        data = json.loads(kwargs.get('data', json.dumps({})))
        result = COMMON.save_or_edit_address(**data)
        redirect_url = '/entity/edit_organisation'
        if result:
            return json.dumps({'success': True, 'entity_id': data.get('entity_id'), 'redirect': redirect_url})
        else:
            return json.dumps({'success': False, 'entity_id': data.get('entity_id'), 'redirect': redirect_url})

    @expose()
    def get_modal_new_contact(self, *args, **kwargs):
        html = COMMON.get_modal_new_contact(**kwargs)
        javascript = """
            <script src=''>
            setFormValidation('#form_new_contact');
            $('#save_new_contact').click(function(){
                 var valid = FormIsValid("#form_new_contact");
                 if(valid){

                  var formserial = $('#form_new_contact').serialize();
                    $.post('/entity/save_new_organisation_contact?', formserial, function(data){
                        var result = JSON.parse(data);
                        if(result.success === true){
                               $.redirect(result.redirect, {'entity_id' : result.entity_id});
                        };
                        return false;
                    });
                 }
            });
            $('.contact_back').click(function(){
                $('#dialog_new_contact').modal('hide');
            });
            $('#dialog_new_contact').modal();
            </script>
        """
        return html + javascript

    @expose()
    def save_new_organisation_contact(self, *args, **kwargs):
        COMMON.save_new_organisation_contact(**kwargs)
        entity_id = kwargs.get('entity_id')
        redirect_url = '/entity/edit_organisation'
        return json.dumps({'success': True, 'entity_id': entity_id, 'redirect': redirect_url})

    @expose()
    def get_modal_edit_contact(self, *args, **kwargs):
        html = COMMON.get_modal_edit_contact(**kwargs)
        javascript = """
        <script src=''>
            setFormValidation('#form_edit_contact');
            $('#save_edit_contact').click(function(){
                var valid = FormIsValid("#form_edit_contact");
                if(valid){
                    var formserial = $('#form_edit_contact').serialize();
                    $.post('/entity/save_edit_organisation_contact?', formserial, function(data){
                        var result = JSON.parse(data);
                        if(result.success === true){
                                $.redirect(result.redirect, {'entity_id' : result.entity_id});
                        };
                        return false;
                    });
                }
            });
            $('.contact_edit_back').click(function(){
                $('#dialog_edit_contact').modal('hide');
            });
            $('#dialog_edit_contact').modal();
        </script>
        """
        return html + javascript

    @expose()
    def save_edit_organisation_contact(self, *args, **kwargs):
        entity_id = kwargs.get('entity_id')
        result = COMMON.save_edit_organisation_contact(**kwargs)
        redirect_url = '/entity/edit_organisation'
        if not result:
            return json.dumps({'success': False, 'entity_id': entity_id, 'redirect': redirect_url})
        return json.dumps({'success': True, 'entity_id': entity_id, 'redirect': redirect_url})
