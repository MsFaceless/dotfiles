# -*- coding: utf-8 -*-

"""Search controller module"""

import math
import string

from datetime import datetime, date, timedelta
from tg import expose, require, redirect, flash, request, response

from eiffel_front.model import *
from eiffel_front.lib.tg_utils import *
from eiffel_front.lib.tg_decorators import *
from eiffel_front.lib.base import BaseController
from eiffel_front.lib.email_creator import EiffelFrontEmailCreator

from eiffel_front.controllers.chat import ChatController
from eiffel_front.controllers.common import CommonController
from eiffel_front.controllers.my_account import AccountController

CHAT = ChatController()
COMMON = CommonController()
ACCOUNT = AccountController()

FILENAME = os.path.abspath(resource_filename('eiffel_front', 'public'))
PUBLIC_DIRNAME = os.path.join(FILENAME)
IMAGES_DIRNAME = os.path.join(PUBLIC_DIRNAME, 'img')
PROFILE_IMAGES_DIRNAME = os.path.join(IMAGES_DIRNAME, 'students')

PAGINATION_MAX = 5
MIN_SEARCH_WORD_LEN = 3
SMALL_DBASE_QUERY_LIMIT = 20
LARGE_DBASE_QUERY_LIMIT = 50

CAROUSEL_PAGES = 4
CAROUSEL_COUNT = 8
CAROUSEL_LIMIT = CAROUSEL_PAGES * CAROUSEL_COUNT

POST_EXPIRY_IN_DAYS = 14
EXPIRY_REMINDER_IN_DAYS = 2
PREMIUM_EXPIRY_IN_DAYS = 7

LOGGER = logging.getLogger(__name__)

class SearchController(BaseController):
    # Uncomment this line if your controller requires an authenticated user
    # allow_only = CustomNotAnonymous()


    # This needs to be removed
    @expose()
    def get_search_input_card(self, *args, **kwargs):
        start = kwargs.get('start', None)
        student_id = kwargs.get('student_id', None)
        category_id = kwargs.get('category_id', None)
        search_string = kwargs.get('search_string', "")
        subcategory_id = kwargs.get('subcategory_id', None)

        button_attrs = ""
        if category_id:
            button_attrs += f"category_id='{category_id}'"
        if subcategory_id:
            button_attrs += f" subcategory_id='{subcategory_id}'"
        if start:
            button_attrs += f" start='{start}'"
        if student_id:
            button_attrs += f" student_id='{student_id}'"

        html = f"""
        <div id="backdrop"></div>
        <div id='search_container' class="search_container d-flex">
            <input class="form-control mr-sm-2 mb-sm-0" id="search" placeholder="Search Ads"
                   type="text" value="{search_string}" />
            <button id="btn_search_posts" {button_attrs} class="btn btn-primary">SEARCH</button>
        </div>
        """
        javascript = """
        <script>
            $('#btn_search_posts').click(function(event, query_limit){

                var start = $(this).attr('start');
                var search_string = $('#search').val();
                var student_id = $(this).attr('student_id');
                var category_id = $(this).attr('category_id');
                var subcategory_id = $(this).attr('subcategory_id');
                var postsortby_id = $('#postsortby_id option:selected').val();
                query_limit = query_limit ? query_limit : $('.btn_set_query_limit.active').data('val');
                var kwargs = {
                    start : start,
                    student_id : student_id,
                    category_id : category_id,
                    subcategory_id : subcategory_id,
                    search_string : search_string,
                    postsortby_id : postsortby_id,
                    query_limit : query_limit,
                };
                console.log(kwargs);

                if(category_id == undefined || category_id == ''){

                    if(search_string.length > 1 || student_id){
                        $.redirect('/search', kwargs);

                    }else{
                        $.redirect('/categories');

                    };

                }else{
                    $.redirect('/search', kwargs);

                };
            });
            $('#search').keypress(function(event){
                if(event.keyCode == 13){
                    $('#btn_search_posts').trigger('click');

                }
            });
        </script>
        """
        return html + javascript
    # This needs to be removed

    @expose('eiffel_front.templates.generic')
    def index(self, *args, **kwargs):
        # self.make_fake_ads()

        print()
        print()
        print('Search index kwargs', kwargs)
        print()
        print()

        search_card = self.get_search_input_card(**kwargs)
        jumbotron_sml = COMMON.get_jumbo_particle_html()

        posts_html, page = self.get_paginated_posts_html(**kwargs)

        kwargs['page'] = page
        sidebar_html = self.get_search_sidebar_html(**kwargs)

        html = f"""
        {jumbotron_sml}
        <div class="container position-relative">
            {search_card}
        </div>
        <div class="container mt-5 mb-5">
            <div class="row">
                <div class="col-md-4">
                    <div id='categories' class='sticky'>
                        {sidebar_html}
                    </div>
                </div>
                <div class="col-md-8 pl-3">
                    <div id='search_results' data-page_size="9">
                        {posts_html}
                    </div>
                </div>
            </div>
        </div>
        """
        javascript = """
        """
        return dict(title='Search', html=html, javascript=javascript)

    @expose()
    def get_search_sidebar_html(self, *args, **kwargs):
        filters_html = self.get_filters_html(**kwargs)

        postsortby_id = kwargs.get('postsortby_id', 1)
        selectbox_sortby = self.get_selectbox_search_sort_by(**{'selected' : int(postsortby_id)})
        html = f"""
        <div class="category-sidebar">
            <div class="widget">
                <h4 class="widget-header">Filters</h4>
                {filters_html}
            </div>
            <div class="widget">
                <h4 class="widget-header">Items</h4>
                <div id="searchPageSize"></div>
            </div>
            <div class="widget">
                <h4 class="widget-header">Sort By</h4>
                {selectbox_sortby}
            </div>
        </div>
        """
        # <div class="widget category-list">
        #     <h4 class="widget-header">Categories</h4>
        #     <ul class="category-list">
        #     </ul>
        # </div>
        javascript = """
        <script>
        $('#mainNav .nav-item').removeClass('active');
        $('#postsortby_id').change(function(){
            $('#btn_search_posts').attr('start', '');
            $('#btn_search_posts').trigger('click');
        });
        $('.btn_paginate_my_search').click(function(){
            var start = $(this).attr('start');
            $('#btn_search_posts').attr('start', start);
            $('#btn_search_posts').trigger('click');
        });
        </script>
        """
        return html + javascript

    @expose()
    def get_selectbox_search_sort_by(self, *args, **kwargs):
        kwargs['id'] = 'postsortby_id'
        kwargs['outputlist'] = [{'name': m.label, 'id': m.id} for m in PostSortBy.get_all()]
        return create_selectbox_html(**kwargs)


    @expose()
    def get_paginated_posts_html(self, *args, **kwargs):

        page = self.get_paginated_post_data(**kwargs)

        post_items = ''
        for post in page.get('items', []):
            post_html = COMMON.get_post_item(post)
            post_items += f"""<div class="col-md-4">{post_html}</div>"""
        html = f"""
        <div class="product-grid-list">
            <div id="post_list" class="row mt-30">
                {post_items}
            </div>
        </div>
        """
        kwargs['page_size_div'] = '#searchPageSize'
        kwargs['table_wrapper_id'] = '#search_results'
        kwargs['refresh_target'] = '/search/get_paginated_posts_html'
        kwargs['page'] = page
        kwargs['size_list'] = '9, 21, 36, 56, 90'
        pagination = set_pagination_html(**kwargs)
        return html + pagination, page

    def get_paginated_post_data(self, *args, **kwargs):
        status_active = COMMON.get_post_status_id('active')
        status_reported = COMMON.get_post_status_id('reported')

        student_id = kwargs.get('student_id', None)
        category_id = kwargs.get('category_id', None)
        subcategory_id = kwargs.get('subcategory_id', None)

        postsortby_id = kwargs.get('postsortby_id', None)
        postsort = PostSortBy.by_id(postsortby_id)

        search_string = kwargs.get('search_string', '')
        searchlist, intlist = self.get_searchterm_list(search_string)

        dbase_query = DBSession.query(Post).\
            filter(or_(
                    Post.post_status_id == status_active,
                    Post.post_status_id == status_reported,
                )). \
            filter(Post.active == True).\
            order_by(Post.bln_featured_ad.desc())

        if intlist:
            dbase_query = dbase_query.filter(Post.id.in_(intlist))

        if postsort:
            if postsort.col_to_sort == 'added' and postsort.bln_desc:
                dbase_query = dbase_query. \
                    order_by(Post.added.desc())

            elif postsort.col_to_sort == 'added' and not postsort.bln_desc:
                dbase_query = dbase_query. \
                    order_by(Post.added.asc())

            if postsort.col_to_sort == 'price' and postsort.bln_desc:
                dbase_query = dbase_query. \
                    order_by(Post.price.desc())

            elif postsort.col_to_sort == 'price' and not postsort.bln_desc:
                dbase_query = dbase_query. \
                    order_by(Post.price.asc())
        else:
            dbase_query = dbase_query. \
                order_by(Post.bln_featured_ad.desc()). \
                order_by(Post.added.desc())

        # CAMILLA STARTS HERE
        for term in searchlist:
            searchphrase = f'%{term}%'
            dbase_query = dbase_query.filter(or_(
                Post.desc.ilike(searchphrase),
            ))
                # Post.title.ilike(searchphrase),
                # Category.title.ilike(searchphrase),
                # Subcategory.title.ilike(searchphrase),

        if category_id:
            dbase_query = dbase_query. \
                filter(Category.id==category_id)

        if subcategory_id:
            dbase_query = dbase_query. \
                filter(Subcategory.id==subcategory_id)

        if student_id:
            dbase_query = dbase_query. \
                filter(Post.added_by==student_id)

        page_size = kwargs.get('page_size', 9)

        current_page = str_to_int(kwargs.get('page', 1))

        return paginate(**{'query': dbase_query, 'page': current_page, 'page_size': page_size})

    def get_searchterm_list(self, search_string='', *args, **kwargs):
        searchlist = search_string.split()
        outputlist = [search_string.strip()]
        intlist = []
        for term in searchlist:
            term = term.strip()

            try:
                int_term = int(term)
                intlist.append(int_term)
            except:
                pass

            if len(term) <= MIN_SEARCH_WORD_LEN:
                continue

            if term not in outputlist:
                outputlist.append(term)
        return outputlist, intlist

    def get_filters_html(self, *args, **kwargs):
        print()
        print('get_filters_html')
        print(kwargs)
        print()
        search_string = kwargs.get('search_string', '')
        if not search_string:
            return ''

        page = kwargs.get('page', {})
        items = page.get('items', [])

        subcategory_list = set([x.subcategory_id for x in items])
        category_list = set([x.category_id for x in items])
        student_list = set([x.added_by for x in items])

        filters_html = ""
        title = "Search Ads"

        for student_id in student_list:
            student = Student.by_id(student_id)
            if student:
                filters_html += f"""
                <div class="d-flex align-items-center">
                    <h6 class="mb-0">Member: {student.display_name}</h6>
                    <i id="reset_student_id" class="fa fa-times text-danger cursor_pointer ml-3" aria-hidden="true"></i>
                </div>
                """

        if search_string:
            filters_html += f"""
            <div class="d-flex align-items-center">
                <h6 class="mb-0">Text: {search_string}</h6>
                <i id="reset_search_string" class="fa fa-times text-danger cursor_pointer ml-3" aria-hidden="true"></i>
            </div>
            """

        for subcategory_id in subcategory_list:
            subcategory = Subcategory.by_id(subcategory_id)
            if subcategory:
                filters_html += f"""
                <div class="d-flex align-items-center">
                    <h6 class="mb-0">Subcategory: {subcategory.title}</h6>
                    <i id="reset_subcategory_id" class="fa fa-times text-danger cursor_pointer ml-3" aria-hidden="true"></i>
                </div>
                """

        for category_id in category_list:
            category = Category.by_id(category_id)
            if category:
                title = f"Search: {category.title}"
                filters_html += f"""
                <div class="d-flex align-items-center">
                    <h6 class="mb-0">Category: {category.title}</h6>
                    <i id="reset_category_id" class="fa fa-times text-danger cursor_pointer ml-3" aria-hidden="true"></i>
                </div>
                """

        javascript = """
        <script>
        $('#reset_search_string').click(function(){
            $('#search').val('');
            $('#btn_search_posts').trigger('click');
        });
        $('#reset_student_id').click(function(){
            $('#btn_search_posts').attr('student_id', '');
            $('#btn_search_posts').trigger('click');
        });
        $('#reset_subcategory_id').click(function(){
            $('#btn_search_posts').attr('subcategory_id', '');
            $('#btn_search_posts').trigger('click');
        });
        $('#reset_category_id').click(function(){
            $('#btn_search_posts').attr('category_id', '');
            $('#btn_search_posts').trigger('click');
        });
        </script>
        """
        return filters_html + javascript
