# -*- coding: utf-8 -*-
"""Intermediary controller module"""

import logging
from webob.static import FileApp
from reportlab.platypus import Paragraph

from tg import predicates, require, response, use_wsgi_app, \
        expose, redirect, validate, url, request, redirect

from tg.i18n import ugettext as _
from tg.i18n import lazy_ugettext as l_

from rocket.model import *

from rocket.lib.tg_utils import *
import rocket.lib.gateway_utils as GATEWAY

from rocket.lib.base import BaseController
from rocket.lib.tg_generic_reportlab import PDFCreator
from rocket.lib.type_utils import TypeDictionary as TypeDict

from rocket.controllers.common import CommonController

from sqlalchemy import func, desc, asc, or_

log = logging.getLogger(__name__)

LIMIT = 20
FILENAME = os.path.abspath(resource_filename('rocket', 'public'))
PUBLIC_DIRNAME = os.path.join(FILENAME)
PDF_DIRNAME = os.path.join(PUBLIC_DIRNAME, 'pdf')

SEARCHKEY_INTERMEDIARY = 'Intermediary_SearchKeyword'
SEARCHKEY_INTERMEDIARYDISCLOSURE = 'IntermediaryDisclosure_SearchKeyword'

TYPEUTIL = TypeDict()
COMMON = CommonController()

class IntermediaryController(BaseController):

    @expose()
    def _default(self, *args, **kwargs):
        return 'This page is not available.'

    def __init__(self, *args, **kwargs):
        pass

###############################################################################
# List Screen
###############################################################################

    @require(predicates.not_anonymous())
    @expose('rocket.templates.generic')
    def index(self, *args, **kwargs):
        title = _("Intermediaries")
        html = self.get_active_intermediaries_html(*args, **kwargs)
        javascript = self.get_javascript_intermediaries_onload()
        return dict(title=title, html=html, javascript=javascript)

    @expose()
    def get_active_intermediaries_html(self, *args, **kwargs):
        kwargs['searchkey'] = SEARCHKEY_INTERMEDIARY
        searchphrase = COMMON.get_searchphrase(**kwargs)
        htmltbl = self.get_active_intermediaries_htmltbl(**kwargs)
        html = f"""
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header">
                        <div class="row d-flex">
                            <div class="col-md-6">
                                <h4 class="card-title">Intermediaries</h4>
                            </div>
                            <div class="col-md-6 text-right">
                                <button id="create_new_intermediary" class="btn btn-primary ml-auto">Create New Intermediary</button>
                            </div>
                        </div>
                        <div class="row d-flex align-items-center">
                            <div class="col-md-4">
                                <input type="text" class="form-control search" name="searchphrase" id="searchphrase" value='{searchphrase}' placeholder="Search">
                            </div>
                            <div class="col-md-8">
                                <button class="btn btn-primary" id='action_search'>Search</button>
                                <button class="btn btn-primary" id='btn_reset'>Reset</button>
                            </div>
                        </div>
                        <hr>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive" id='div_intermediary_table'>
                            {htmltbl}
                        </div>
                    </div>
                </div>
            </div>
        </div>
        """
        return html

    def get_entity_intermediary_name(self, *args, **kwargs):
        entity_intermediary = kwargs.get('entity_intermediary', None)
        if not entity_intermediary: return ''
        if not entity_intermediary.entity_id: return ''
        entity = Entity.by_id(entity_intermediary.entity_id)
        if not entity: return ''
        person = TYPEUTIL.get_id_of_name('entity_type', 'person')
        organisation = TYPEUTIL.get_id_of_name('entity_type', 'organisation')
        if entity.entity_type_id == person:
            entity_person = EntityPerson.by_attr_first('entity_id', entity_intermediary.entity_id)
            if not entity_person: return ''
            personobj = GATEWAY.get_entity_person_object_by_id(entity_person.id)
            if not personobj: return ''
            person = personobj.get('person', None)
            if not person: return ''
            firstname = person.get('firstname', None)
            surname = person.get('surname', None)
            return f'{firstname} {surname}'
        if entity.entity_type_id == organisation:
            entity_organisation = EntityOrganisation.by_attr_first('entity_id', entity_intermediary.entity_id)
            if not entity_organisation: return ''
            return entity_organisation.name
        return ''

    @expose()
    def get_active_intermediaries_htmltbl(self, *args, **kwargs):
        outputlist = []
        img_active = "<img src='/images/icon_check.png' />"
        img_inactive = "<img src='/images/icon_cross.png' />"
        dbase_query = self.get_active_intermediary_list(**kwargs)
        for item in dbase_query:
            name = self.get_entity_intermediary_name(**{'entity_intermediary' : item})

            manager_name = 'Not Set'
            if item.manager_entity_intermediary_id:
                inter = EntityOrganisationIntermediary.by_id(item.manager_entity_intermediary_id)
                if inter:
                    manager_name = self.get_entity_intermediary_name(**{'entity_intermediary' : inter})

            outputlist.append({
                'code': f"<div class='edit edit_intermediary' entity_id='{item.entity_id}'>{item.code}</div>",
                'name' : name,
                'financial_regulatory_number' : item.financial_regulatory_number,
                'manager_name' : manager_name,
                'pay_level' : img_active if item.pay_level else img_inactive,
            })
        dbcolumnlist = [
            'code',
            'name',
            'financial_regulatory_number',
            'manager_name',
            'pay_level'
        ]
        theadlist = [
            'Code',
            'Name',
            'Fin Reg Number',
            'Manager Name',
            'Pay Level',
        ]
        tdclasslist = [
            'action_link',
            '',
            '',
            '',
            'text-center',
        ]
        return build_html_table(outputlist, dbcolumnlist, theadlist, "intermediaries_table", tdclasslist)

    @expose()
    def get_active_intermediary_list(self, *args, **kwargs):
        kwargs['searchkey'] = SEARCHKEY_INTERMEDIARY
        searchphrase = COMMON.get_searchphrase(**kwargs).lower()
        if searchphrase:
            searchphrase = "%" + searchphrase + "%"
            dbase_query = DBSession.query(EntityOrganisationIntermediary).\
                filter(EntityOrganisationIntermediary.code.like(searchphrase)).\
                order_by(asc(EntityOrganisationIntermediary.code)).\
                limit(LIMIT)
        else:
            dbase_query = DBSession.query(EntityOrganisationIntermediary). \
                filter(EntityOrganisationIntermediary.bln_active == True). \
                order_by(asc(EntityOrganisationIntermediary.code)).\
                limit(LIMIT)
        return dbase_query

    @expose()
    def get_javascript_intermediaries_onload(self, *args, **kwargs):
        javascript = """
        $("#create_new_intermediary").click(function(){
            $.redirect('/intermediary/new_intermediary');
        });
        $(".edit_intermediary").click(function(){
            var data = {entity_id : $(this).attr('entity_id')};
            $.redirect('/intermediary/edit_intermediary', data);
        });
        $('#action_search').click(function(){
            var kwargs = 'searchphrase='+$('#searchphrase').val();
            $('#div_intermediary_table').load('/intermediary/get_active_intermediaries_htmltbl', kwargs, function(data){
                return false;
            });
        })
        $('#btn_reset').click(function(){
            $('#searchphrase').val('').focus();
            $('#div_intermediary_table').load('/intermediary/get_active_intermediaries_htmltbl', 'reset=true', function(data){
                return false;
            });
        })
        """
        return javascript

###############################################################################
# New Intermediary
###############################################################################

    @expose('rocket.templates.generic')
    def new_intermediary(self, *args, **kwargs):
        card_title = _("New Intermediary")

        selected = TYPEUTIL.get_id_of_name('entity_type', 'person')
        dropdown_entity_type = COMMON.get_selectbox_entity_type(selected)

        html = f"""
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header d-flex">
                        <div class="col-md-6">
                            <h4 class="card-title">{card_title}</h4>
                        </div>
                        <div class="col-md-6 text-right">
                            <button class="btn btn-primary ml-auto action_back intermediary_back">{_('Back to Intermediary List')}</button>
                        </div>
                    </div>
                    <div class="card-body">
                        <form id='form_new_intermediary' class="d-flex flex-wrap">
                            <div class="col-md-12">
                                <div class="form-group row">
                                    <label class="col-md-3 col-form-label" required for="">{_('Intermediary Type')}</label>
                                    <div class="col-md-9">
                                        {dropdown_entity_type}
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            <div id="intermediary_div" class="col-md-12">
            </div>
        </div>
        """
        javascript = """
        setFormValidation('#form_new_intermediary');
        $('.intermediary_back').click(function(){
            $.redirect('/intermediary/index');
        });
        $('#entity_type_id').change(function(){
            var kwargs = 'entity_type_id='+$('#entity_type_id option:selected').val();
            $('#intermediary_div').load('/intermediary/get_new_intermediary_html?'+kwargs, function(data){
                return false;
            });
        });
        $('#entity_type_id').trigger('change');
        """
        return dict(title=card_title, html=html, javascript=javascript)

    @expose()
    def get_new_intermediary_html(self, *args, **kwargs):
        entity_type_id = kwargs.get('entity_type_id', None)
        if not entity_type_id: return ''
        if entity_type_id == '0': return ''

        person = TYPEUTIL.get_id_of_name('entity_type', 'person')
        if int(entity_type_id) == person:
            kwargs['intermediary_role_id'] = 1  # Hard coded for now..
            return self.get_new_person_intermediary_html(**kwargs)

        organisation = TYPEUTIL.get_id_of_name('entity_type', 'organisation')
        if int(entity_type_id) == organisation:
            kwargs['intermediary_role_id'] = 2 # Hard coded for now..
            return self.get_new_organisation_intermediary_html(**kwargs)
        return ''

    @expose()
    def get_new_person_intermediary_html(self, *args, **kwargs):
        card_title = _("Person Details")
        add_title = _("Intermediary Details")
        form_id = 'form_new_person'
        back_button = ''
        intermediary_role_id = kwargs.get('intermediary_role_id', 1)

        extra_form_fields = f"""
            <div class='row'>
                <!--
                <div class="col-md-12">
                    <h4 class="card-title">{add_title}</h4>
                </div>
                -->
                <div class ="col-md-6">
                    <div class="col-md-12">
                        <div class="form-group row">
                            <label class="col-md-3 col-form-label" required for="code">Code</label>
                            <div class="col-md-9">
                                <input id="code" type="text" name="code" class="form-control" required='true'>
                            </div>
                        </div>
                    </div>
                </div>
                <div class='col-md-6'>
                    <div class="col-md-12">
                        <div class="form-group row">
                            <label class="col-md-3 col-form-label" for="financial_regulatory_number">Financial Reg</label>
                            <div class="col-md-9">
                                <input id="financial_regulatory_number" type="text" name="financial_regulatory_number" class="form-control">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        """

        html = COMMON.get_new_person_html(**{'card_title': card_title, 'form_id': form_id, 'back_button': back_button, \
                                             'extra_form_fields': extra_form_fields, 'intermediary_role_id': intermediary_role_id})
        html += f"""
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-body">
                        <button id="btn_save_new_person" class="btn btn-primary">Save</button>
                        <button class="btn btn-outline-primary intermediary_back">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
        """
        javascript = """
        <script src=''>
            createDatepicker('#date_of_birth');
            setFormValidation('#form_new_person');
            $('#btn_save_new_person').click(function(){
                var valid = FormIsValid("#form_new_person");
                if(valid){
                    var formserial = $('#form_new_person').serialize();
                    $.post('/intermediary/save_new_intermediary_person?', formserial, function(data){
                        var result = JSON.parse(data);
                        if(result.success === true){
                            $.redirect(result.redirect, {'entity_id' : result.entity_id});
                        };
                        showNotification(result.status, result.message);
                        return false;
                    });
                }
            });
            $('.intermediary_back').click(function(){
                $.redirect('/intermediary/index');
            });
        </script>
        """
        return html + javascript

    @expose()
    def get_new_organisation_intermediary_html(self, *args, **kwargs):
        card_title = _("Organisation Details")
        add_title = _("Intermediary Details")
        form_id = 'form_new_organisation'
        intermediary_role_id = kwargs.get('intermediary_role_id', 1)
        html = COMMON.new_organisation_html(**{'card_title': card_title, 'form_id': form_id, 'back_button': '', \
                                               'extra_form_fields': '', 'intermediary_role_id': intermediary_role_id })
        html += f"""
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-body">
                        <button id='save_new_organisation' class="btn btn-primary">Save</button>
                        <button class="btn btn-outline-primary entity_back">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
        """
        javascript = """
        <script src=''>
            setFormValidation('#form_new_organisation');
            $('#save_new_organisation').click(function(){
                var valid = FormIsValid("#form_new_organisation");
                if(valid){
                    var formserial = $('#form_new_organisation').serialize();
                    $.post('/intermediary/save_new_intermediary_organisation?', formserial, function(data){
                        var result = JSON.parse(data);
                        if(result.success === true){
                            $.redirect(result.redirect, {'entity_id' : result.entity_id});
                        };
                        return false;
                    });
                }
            });
            $('.entity_back').click(function(){
                $.redirect('/intermediary/index');
            });
        </script>
        """
        return html + javascript

###############################################################################
# Edit Intermediaries
###############################################################################

    @expose('rocket.templates.generic')
    def edit_intermediary(self, *args, **kwargs):
        entity_id = kwargs.get('entity_id', None)
        if not entity_id:
            return redirect('/intermediary/index')
        title = self.get_intermediary_title_html(entity_id)
        html = self.get_edit_intermediary_html(entity_id)
        javascript = self.get_javascript_edit_intermediary_onload()
        return dict(title=title, html=html, javascript=javascript)

    def get_intermediary_title_html(self, entity_id=None, *args, **kwargs):
        if not entity_id: return ''
        entity = Entity.by_id(entity_id)
        if not entity: return ''
        if not entity.entity_type_id: return ''
        person = TYPEUTIL.get_id_of_name('entity_type', 'person')
        if entity.entity_type_id == person:
            intermediary_type = 'Person'
        organisation = TYPEUTIL.get_id_of_name('entity_type', 'organisation')
        if entity.entity_type_id == organisation:
            intermediary_type = 'Organisation'
        entity_intermediary = EntityOrganisationIntermediary.by_attr_first('entity_id', entity.id)
        return f"Edit Intermediary: {intermediary_type} - {entity_intermediary.code}"

    def get_edit_intermediary_html(self, entity_id=None, *args, **kwargs):
        if not entity_id: return ''
        entity = Entity.by_id(entity_id)
        if not entity: return ''
        if not entity.entity_type_id: return ''

        person = TYPEUTIL.get_id_of_name('entity_type', 'person')
        if entity.entity_type_id == person:
            return self.get_edit_intermediary_person_html(entity_id)

        organisation = TYPEUTIL.get_id_of_name('entity_type', 'organisation')
        if entity.entity_type_id == organisation:
            return self.get_edit_intermediary_organisation_html(entity_id)
        return ''

    @expose()
    def get_javascript_edit_intermediary_onload(self, *args, **kwargs):
        javascript = """
            createDatepicker('#date_of_birth');
            setFormValidation('#form_edit_person');
            $('#btn_save_edit_person').click(function(){
                var valid = FormIsValid("#form_edit_person");
                if(valid){
                    var formserial = $('#form_edit_person').serialize();
                    $.post('/intermediary/save_edit_intermediary_person?', formserial, function(data){
                        var result = JSON.parse(data);
                        if(result.success === true){
                            $.redirect(result.redirect, {'entity_id' : result.entity_id});
                        };
                        showNotification(result.status, result.data);
                        return false;
                    });
                }
            });
            $('#btn_save_edit_organisation').click(function(){
                var valid = FormIsValid("#form_edit_organisation");
                if(valid){
                    var formserial = $('#form_edit_organisation').serialize();
                    $.post('/intermediary/save_edit_intermediary_organisation?', formserial, function(data){
                        var result = JSON.parse(data);
                        if(result.success === true){
                            $.redirect(result.redirect, {'entity_id' : result.entity_id});
                        };
                        showNotification(result.status, result.data);
                        return false;
                    });
                }
            });
            $("#region_id").change(function () {
                var region_id = $('#region_id option:selected').val();
                var kwargs ={'region_id': region_id, };
                $('#div_district').load('/intermediary/get_district_html?', kwargs, function(data){
                    return false;
                });
            });
            $("#region_id").trigger('change');
            $('.intermediary_back').click(function(){
                $.redirect('/intermediary/index');
            });
            $('#save_bank').click(function(){
                var valid = FormIsValid("#form_organisation_bank");
                if(valid){
                    var formserial = new Object;
                    formserial = getFormData(form_organisation_bank);
                    var data = {data : JSON.stringify(formserial)};
                    $.post('/intermediary/save_or_edit_bank?', data, function(data){
                        var result = JSON.parse(data);
                        if(result.success === true){
                            $.redirect(result.redirect, {'entity_id' : result.entity_id});
                        };
                        return false;
                    });
                }
            });
            $('#save_postal_address').click(function(){
                var valid = FormIsValid("#form_postal_address");
                if(valid){
                    var formserial = new Object;
                    formserial = getFormData(form_postal_address);
                    var data = {data : JSON.stringify(formserial)};
                    $.post('/intermediary/save_or_edit_address?', data, function(data){
                        var result = JSON.parse(data);
                        if(result.success === true){
                            $.redirect(result.redirect, {'entity_id' : result.entity_id});
                        };
                        return false;
                    });
                }
            });
            $('#save_street_address').click(function(){
                var valid = FormIsValid("#form_street_address");
                if(valid){
                    var formserial = new Object;
                    formserial = getFormData(form_street_address);
                    var data = {data : JSON.stringify(formserial)};
                    $.post('/intermediary/save_or_edit_address?', data, function(data){
                        var result = JSON.parse(data);
                        if(result.success === true){
                            $.redirect(result.redirect, {'entity_id' : result.entity_id});
                        };
                        return false;
                    });
                }
            });

            $("#create_new_contact").click(function(){
                var kwargs = {entity_organisation_id : $(this).attr('entity_organisation_id'), entity_id : $(this).attr('entity_id')};
                $('#dialogdiv').load('/intermediary/get_modal_new_contact?', kwargs, function(data){
                    return false;
                });
            });

            $(".edit_contact").click(function(){
                var kwargs = {contact_id : $(this).attr('contact_id'), entity_organisation_id : $(this).attr('entity_organisation_id') , entity_id : $(this).attr('entity_id')};
                $('#dialogdiv').load('/intermediary/get_modal_edit_contact?', kwargs, function(data){
                    return false;
                });
            });
        """
        return javascript

    @expose()
    def get_district_html(self, *args, **kwargs):
        return COMMON.get_district_html(**kwargs)

###############################################################################
# Edit Intermediaries - Person
###############################################################################

    def get_edit_intermediary_person_html(self, entity_id=None, *args, **kwargs):
        if not entity_id: return ''

        entity = Entity.by_id(entity_id)
        if not entity: return ''

        entity_intermediary = EntityOrganisationIntermediary.by_attr_first('entity_id', entity.id)
        if not entity_intermediary: return ''

        entity_person = EntityPerson.by_attr_first('entity_id', entity.id)
        if not entity_person: return ''
        personobj = GATEWAY.get_entity_person_object_by_id(entity_person.id)
        if not personobj: return ''

        hidden_entity_intermediary_id = get_hidden_input(**{'id': 'entity_intermediary_id', 'value': entity_intermediary.id})
        hidden_entity_id = get_hidden_input(**{'id': 'entity_id', 'value': entity_id})
        hidden_entity_organisation_id = get_hidden_input(**{'id': 'entity_organisation_id', 'value': None})

        extra_form_fields = f"""
        <div class='row'>
            <!--
            <div class="col-md-12">
                <h4 class="card-title">{_("Additional Details")}</h4>
            </div>
            -->
            {hidden_entity_intermediary_id}
            {hidden_entity_id}
            {hidden_entity_organisation_id}
            <div class ="col-md-6">
                <div class="col-md-12">
                    <div class="form-group row">
                        <label class="col-md-3 col-form-label" required for="code">Code</label>
                        <div class="col-md-9">
                            <input type="text" name='code' class="form-control" required="true" maxlength='10' value="{entity_intermediary.code}">
                        </div>
                    </div>
                </div>
            </div>
            <div class='col-md-6'>
                <div class="col-md-12">
                    <div class="form-group row">
                        <label class="col-md-3 col-form-label" for="financial_regulatory_number">Financial Reg</label>
                        <div class="col-md-9">
                            <input type="text" name='financial_regulatory_number' class="form-control" required="true" maxlength='50' value="{entity_intermediary.financial_regulatory_number}">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        """
        card_member_details = COMMON.get_edit_person_form(**{
            'person_vault': personobj,
            'form_id': 'form_edit_person',
            'entity_person_id': entity_person.id,
            'save_button_id': 'btn_save_edit_person',
            'extra_form_fields': extra_form_fields,
            'card_title': _('Edit Person'),
            })

        card_member_contact = COMMON.get_edit_member_contact_html(**{
            'entity_person_id': entity_person.id,
            'person_vault': personobj,
            })

        card_member_address = COMMON.get_person_address_html(**{
            'entity_person_id': entity_person.id,
            })

        card_member_bank = COMMON.get_edit_member_bank_html(**{
            'entity_person_id': entity_person.id,
            'person_vault': personobj,
            })

        html = f"""
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <div class="row d-flex">
                        <div class="col-md-8">
                            <h4 class="card-title">Edit Intermediary: {entity_intermediary.code} </h4>
                        </div>
                        <div class="col-md-4 text-right">
                            <button class="btn btn-primary ml-auto action_back intermediary_back">{_('Back to Intermediary List')}</button>
                        </div>
                    </div>
                    <div class="row d-flex">
                        <div class="col-md-12">
                            <hr>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12 ml-auto mr-auto">
                <div class="col-md-12 ml-auto mr-auto">
                    {card_member_details}
                    {card_member_contact}
                    {card_member_address}
                    {card_member_bank}
                </div>
            </div>
        </div>
        """
        return html

###############################################################################
# Edit Intermediaries - Organisation
###############################################################################

    def get_edit_intermediary_organisation_html(self, entity_id=None, *args, **kwargs):
        if not entity_id: return ''

        entity_intermediary = EntityOrganisationIntermediary.by_attr_first('entity_id', entity_id)
        entity_organisation = EntityOrganisation.by_attr_first('entity_id', entity_id)

        kwargs['entity_intermediary'] = entity_intermediary
        kwargs['entity_organisation'] = entity_organisation
        kwargs['form_id'] =  'form_edit_organisation'
        kwargs['card_title'] =  'Intermediary Details'
        kwargs['save_button_id'] =  'btn_save_edit_organisation'
        kwargs['entity_id'] =  entity_id
        kwargs['entity_organisation_id'] =  entity_organisation.id
        kwargs['entity_intermediary_id'] =  entity_intermediary.id

        card_header = self.get_edit_intermediary_organisation_card_title_html(**kwargs)
        card_organisation_details = COMMON.edit_organisation_html(**kwargs)
        card_organisation_address = COMMON.get_edit_organisation_address_html(**kwargs)
        card_organisation_contact = COMMON.get_edit_organisation_contact_html(**kwargs)
        card_organisation_bank = COMMON.get_edit_organisation_bank_html(**kwargs)

        html = f"""
        {card_header}
        <div class="row">
            <div class="col-md-12 ml-auto mr-auto">
                <div class="col-md-12 ml-auto mr-auto">
                    {card_organisation_details}
                    {card_organisation_contact}
                    {card_organisation_address}
                    {card_organisation_bank}
                </div>
            </div>
        </div>
        """
        return html

    def get_edit_intermediary_organisation_card_title_html(self, *args, **kwargs):
        entity_organisation = kwargs.get('entity_organisation', None)
        if not entity_organisation: return ''
        card_title = _(f'Edit Intermediary: {entity_organisation.name} ')
        html = f"""
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header">
                        <div class="row d-flex">
                            <div class="col-md-8">
                                <h4 class="card-title">{card_title}</h4>
                            </div>
                            <div class="col-md-4 text-right">
                            <button class="btn btn-primary ml-auto action_back intermediary_back">{_('Back to Intermediary List')}</button>
                            </div>
                        </div>
                        <div class="row d-flex">
                            <div class="col-md-12">
                                <hr>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        """
        return html

###############################################################################
# Save New EntityOrganisationIntermediary
###############################################################################

    @expose()
    def save_new_intermediary_person(self, *args, **kwargs):
        entity_id = COMMON.save_new_personobj(**kwargs)
        if not entity_id:
            return json.dumps({'success': False, 'message': 'Member record creation failed.'})

        kwargs['entity_id'] = entity_id
        entity_intermediary_id = self.save_entity_intermediary(**kwargs)
        if not entity_intermediary_id:
            return json.dumps({'success': False, 'message': 'Intermediary record creation failed.'})

        return json.dumps({'success': True, 'entity_id': entity_id, 'redirect': '/intermediary/edit_intermediary'})

    @expose()
    def save_new_intermediary_organisation(self, *args, **kwargs):
        organisation = TYPEUTIL.get_id_of_name('entity_type', 'organisation')
        entity_id = COMMON.save_new_entity(**{'entity_type_id' : organisation})
        if not entity_id:
            return json.dumps({'success': False, 'message': 'Entity record creation failed.'})

        kwargs['entity_id'] = entity_id
        entity_organisation_id = COMMON.save_new_entity_organisation(**kwargs)
        if not entity_organisation_id:
            return json.dumps({'success': False, 'message': 'Organisation record creation failed.'})

        entity_intermediary_id = self.save_entity_intermediary(**kwargs)
        if not entity_intermediary_id:
            return json.dumps({'success': False, 'message': 'Intermediary record creation failed.'})

        return json.dumps({'success': True, 'entity_id': entity_id, 'redirect': '/intermediary/edit_intermediary'})

    def save_entity_intermediary(self, *args, **kwargs):
        usernow = request.identity.get('user', None)
        this = EntityOrganisationIntermediary()
        this.entity_id = kwargs.get('entity_id', None)
        this.from_date = datetime.now()
        this.code = kwargs.get('code', None)
        this.financial_regulatory_number = kwargs.get('financial_regulatory_number', None)
        this.intermediary_role_id = kwargs.get('intermediary_role_id', 1)
        this.pay_level = False
        this.added_by = usernow.id
        DBSession.add(this)
        DBSession.flush()
        return this.id

###############################################################################
# Save Edit EntityOrganisationIntermediary
###############################################################################

    @expose()
    def save_edit_intermediary_person(self, *args, **kwargs):
        success = COMMON.save_edit_personobj(**kwargs)
        if not success:
            return json.dumps({'success': False, 'data': 'Updating Person Failed', 'status': 'danger'})

        entity_intermediary_id = kwargs.get('entity_intermediary_id', None)
        if not entity_intermediary_id:
            return json.dumps({'success': False, 'data': 'Missing entity_intermediary_id', 'status': 'danger'})

        entity_intermediary = EntityOrganisationIntermediary.by_id(entity_intermediary_id)
        entity_intermediary.code = kwargs.get('code', None)
        entity_intermediary.financial_regulatory_number = kwargs.get('financial_regulatory_number', None)
        DBSession.flush()
        return json.dumps({'success': True, 'entity_id': entity_intermediary.entity_id, \
                'redirect': '/intermediary/index', 'data': \
                'Member saved successsfully.', 'status': 'success'})

    @expose()
    def save_edit_intermediary_organisation(self, *args, **kwargs):
        result = COMMON.save_edit_entity_organisation(**kwargs)
        redirect_url = '/intermediary/edit_intermediary'
        if result:
            return json.dumps({'success': True, 'entity_id': kwargs.get('entity_id'), 'redirect': redirect_url})
        else:
            return json.dumps({'success': False, 'entity_id': kwargs.get('entity_id'), 'redirect': redirect_url, \
                'data': 'Inable to save intermediary.', 'status':'danger'})

    @expose()
    def save_or_edit_bank(self, *args, **kwargs):
        data = json.loads(kwargs.get('data', json.dumps({})))
        result = COMMON.save_or_edit_bank(**data)
        redirect_url = '/intermediary/edit_intermediary'
        if result:
            return json.dumps({'success': True, 'entity_id': data.get('entity_id'), 'redirect': redirect_url})
        else:
            return json.dumps({'success': False, 'entity_id': data.get('entity_id'), 'redirect': redirect_url})

    @expose()
    def save_or_edit_address(self, *args, **kwargs):
        data = json.loads(kwargs.get('data', json.dumps({})))
        result = COMMON.save_or_edit_address(**data)
        redirect_url = '/intermediary/edit_intermediary'
        if result:
            return json.dumps({'success': True, 'entity_id': data.get('entity_id'), 'redirect': redirect_url})
        return json.dumps({'success': False, 'entity_id': data.get('entity_id'), 'redirect': redirect_url})

    @expose()
    def get_modal_new_contact(self, *args, **kwargs):
        html = COMMON.get_modal_new_contact(**kwargs)
        javascript = """
            <script src=''>
            setFormValidation('#form_new_contact');
            $('#save_new_contact').click(function(){
                 var valid = FormIsValid("#form_new_contact");
                 if(valid){

                  var formserial = $('#form_new_contact').serialize();
                    $.post('/intermediary/save_new_intermediary_contact?', formserial, function(data){
                        var result = JSON.parse(data);
                        if(result.success === true){
                               $.redirect(result.redirect, {'entity_id' : result.entity_id});
                        };
                        return false;
                    });
                 }
            });
            $('.contact_back').click(function(){
                $('#dialog_new_contact').modal('hide');
            });
            $('#dialog_new_contact').modal();
            </script>
        """
        return html + javascript

    @expose()
    def save_new_intermediary_contact(self, *args, **kwargs):
        entity_id = kwargs.get('entity_id', None)
        entity = Entity.by_id(entity_id)
        if not entity: return ''

        person = TYPEUTIL.get_id_of_name('entity_type', 'person')
        if entity.entity_type_id == person:
            entity_person = EntityPerson.by_attr_first('entity_id', entity_id)
            kwargs['entity_person_id'] = entity_person.id
            self.save_new_person_contact(**kwargs)

        organisation = TYPEUTIL.get_id_of_name('entity_type', 'organisation')
        if entity.entity_type_id == organisation:
            self.save_new_organisation_contact(**kwargs)

        redirect_url = '/intermediary/edit_intermediary'
        return json.dumps({'success': True, 'entity_id': entity_id, 'redirect': redirect_url})

    @expose()
    def save_new_organisation_contact(self, *args, **kwargs):
        return COMMON.save_new_organisation_contact(**kwargs)

    @expose()
    def save_new_person_contact(self, *args, **kwargs):
        return COMMON.save_new_member_contact(**kwargs)

    @expose()
    def get_modal_edit_contact(self, *args, **kwargs):
        html = COMMON.get_modal_edit_contact(**kwargs)
        javascript = """
        <script src=''>
            setFormValidation('#form_edit_contact');
            $('#save_edit_contact').click(function(){
                var valid = FormIsValid("#form_edit_contact");
                if(valid){
                    var formserial = $('#form_edit_contact').serialize();
                    $.post('/intermediary/save_edit_organisation_contact?', formserial, function(data){
                        var result = JSON.parse(data);
                        if(result.success === true){
                                $.redirect(result.redirect, {'entity_id' : result.entity_id});
                        };
                        return false;
                    });
                }
            });
            $('.contact_edit_back').click(function(){
                $('#dialog_edit_contact').modal('hide');
            });
            $('#dialog_edit_contact').modal();
        </script>
        """
        return html + javascript

    @expose()
    def save_edit_organisation_contact(self, *args, **kwargs):
        entity_id = kwargs.get('entity_id')
        result = COMMON.save_edit_organisation_contact(**kwargs)
        redirect_url = '/intermediary/edit_intermediary'
        if not result:
            return json.dumps({'success': False, 'entity_id': entity_id, 'redirect': redirect_url})
        return json.dumps({'success': True, 'entity_id': entity_id, 'redirect': redirect_url})
