# -*- coding: utf-8 -*-
"""CategoryController controller module"""

import os
import json
from datetime import datetime
from sqlalchemy import func, desc, asc
from pkg_resources import resource_filename
from tg import expose, require, redirect, validate, flash, url, request, response, predicates

from eiffel_back.model import *
from eiffel_back.lib.tg_utils import *
from eiffel_back.lib.base import BaseController
from eiffel_back.lib.tg_decorators import *
from eiffel_back.lib.tgfileuploader import FileUploader
from eiffel_back.lib.tg_generic_reportlab import PDFCreator, Paragraph
from eiffel_back.controllers.common import CommonController

COMMON = CommonController()

FILENAME = os.path.abspath(resource_filename('eiffel_back', 'public'))
PUBLIC_DIRNAME = os.path.join(FILENAME)
PDF_DIRNAME = os.path.join(PUBLIC_DIRNAME, 'pdf')
IMAGES_DIRNAME = os.path.join(PUBLIC_DIRNAME, 'images')
CATALOG_DIRNAME = os.path.join(IMAGES_DIRNAME, 'catalog_pictures')

NUM = 5

__all__ = ['CategoryController']

class CategoryController(BaseController):

    @require(CustomNotAnonymous())
    @expose('eiffel_back.templates.generic')
    def index(self, *args, **kwargs):
        usernow = request.identity.get('user', {})
        htmltbl = self.get_category_htmltbl(**kwargs)
        html = f"""
        <div class="row">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header card-header-primary card-header-icon">
                        <div class="card-icon">
                            <i class="material-icons">category</i>
                        </div>
                        <h4 class="card-title">All Categories</h4>
                    </div>
                    <div class="card-body pt-0">
                        <div class="toolbar text-right">
                            <button id='create' class="btn btn-primary">Create</button>
                        </div>
                        <div class="material-datatables">
                            {htmltbl}
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-6 divSubcategory">
            </div>
        </div>
        """
        javascript = """
        $('#create').click(function(){
            $('#dialogdiv').load('/category/get_modal_category?', function(data){
                return false;
            });
        });
        $('.edit').click(function(){
            var kwargs = 'category_id='+$(this).data('category-id');
            $('#dialogdiv').load('/category/get_modal_category?', kwargs, function(data){
                return false;
            });
        });
        $('.remove').click(function(){
            var kwargs = 'category_id='+$(this).data('category-id');
            console.log('remove', kwargs);
        });
        $('.allcategories_row').click(function(){
            var my_id = $(this).attr('my_id');
            var kwargs = 'category_id='+my_id;
            $('.divSubcategory').load('/category/get_subcategory_html', kwargs, function(data){
                return false;
            });
            return false;
        });
        $('.allcategories_row').first().trigger('click');
        """
        return dict(title="All Categories", html=html, javascript=javascript)

    @expose()
    def get_dashboard_top_selling_categories(self, *args, **kwargs):
        dbase_query = DBSession.query(Category). \
                filter(Category.count > 0). \
                filter(Category.active == True). \
                order_by(Category.count.desc()). \
                limit(5)
        category_list =[]
        for item in dbase_query:
            category_list.append({'name': item.title, 'y': item.count})
        return json.dumps(category_list)

    @expose()
    def get_dashboard_top_selling_subcategories(self, *args, **kwargs):
        dbase_query = DBSession.query(Subcategory). \
                filter(Subcategory.count > 0). \
                filter(Subcategory.active == True). \
                order_by(Subcategory.count.desc()). \
                limit(5)
        category_list =[]
        for item in dbase_query:
            cat = Category.by_id(item.category_id)
            name = f"{cat.title}: {item.title}"
            category_list.append({'name': name, 'y': item.count})
        return json.dumps(category_list)

    def get_category_htmltbl(self, *args, **kwargs):
        outputlist = []
        dbase_query = Category.get_all('title')
        for item in dbase_query:
            data = f'data-category-id="{item.id}"'
            actions = f"""
            <div {data} class="btn btn-link btn-warning btn-just-icon edit"><i class="material-icons">dvr</i></div>
            <div {data} class="btn btn-link btn-danger btn-just-icon remove"><i class="material-icons">close</i></div>
            <div id="open_{item.id}" {data} class="btn btn-link btn-primary btn-just-icon open"><i class="material-icons">chevron_right</i></div>
            """
            outputlist.append({
                'icon' : f'<span class="mdi mdi-24px {item.icon}"></span>',
                'title': item.title,
                'count': item.count,
                'actions': actions,
                'my_id':item.id,
                             })
        dbcolumnlist=[
                'icon',
                'title',
                'count',
                'actions',
                    ]
        theadlist=[
                'Icon',
                'Name',
                'Ad Count',
                'Actions'
                ]
        tdclasslist = [
                '',
                '',
                'text-center',
                'text-right',
                ]
        return build_html_table_material(outputlist, dbcolumnlist, theadlist, "allcategories", tdclasslist)

    @expose()
    def get_modal_category(self, *args, **kwargs):
        category_id = kwargs.get('category_id', None)
        this = Category.by_id(category_id)
        icon = this.icon if this else ''
        title = this.title if this else ''
        count = this.count if this else ''
        hidden_input = COMMON.get_hidden_input(**{'id': 'category_id', 'value': this.id}) if this else ''
        card_title = f"Edit '{this.title}'" if this else 'New Category'
        icon = COMMON.get_form_input(12, 'Icon', 'icon', icon)
        title = COMMON.get_form_input(12, 'Title', 'title', title)
        icon_link = f"<a href='https://cdn.materialdesignicons.com/4.4.95/' target='_blank'>Find Icons Here</a>"
        html = f"""
        <div class="modal fade" id="modal_category" tabindex="-1" role="dialog" aria-labelledby="mycategoryLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="card-title">{card_title}</h4>
                    </div>
                    <div class="modal-body">
                        <label class="bmd-label-floating"> {icon_link} </label>
                        <form id='form_category'>
                            {hidden_input}
                            {icon}
                            {title}
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button id='save_new_category' class="btn btn-primary">Save</button>
                        <button id='categoryBack' class="btn btn-outline-primary">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
        """
        javascript = """
        <script>
        $('#save_new_category').click(function(){
            var category_id = $('#category_id').val();
            var data = $('#form_category').serialize();
            if(category_id){
                var link = 'save_edit_category'
            }else{
                var link = 'save_create_category'
            };
            $.post('/category/'+link+'?', data, function(data){
                if(data == 'true'){
                    $.redirect('/all_categories');
                };
                return false;
            });
        });
        $('#categoryBack').click(function(){
            $('#modal_category').modal('hide');
        });
        $('#modal_category').modal();
        </script>
     	"""
        return html + javascript

    def get_category_form_html(self, *args, **kwargs):
        id = kwargs.get('id', '')
        name = kwargs.get('name', '')
        about = kwargs.get('about', '')
        email = kwargs.get('email', '')
        surname = kwargs.get('surname', '')
        username = kwargs.get('username', '')
        userabout = kwargs.get('userabout', '')

        hidden_input = COMMON.get_hidden_input(**{'id': 'category_id', 'value': id}) if id else ''
        display = COMMON.get_form_input(6, 'Display Name', 'username', username)
        name = COMMON.get_form_input(6, 'First Name', 'name', name)
        surname = COMMON.get_form_input(6, 'Last Name', 'surname', surname)
        email = COMMON.get_form_input(6, 'Email Address', 'email', email, input_type='email')
        addressline1 = COMMON.get_form_input(12, 'Address', 'addressline1', '')
        addressline2 = COMMON.get_form_input(4, 'City', 'addressline2', '')
        addressline3 = COMMON.get_form_input(4, 'Country', 'addressline3', '')
        postal_code = COMMON.get_form_input(4, 'Postal Code', 'postal_code', '')

        card_title = 'Edit' if id else 'Create'
        return f"""
        <div class="row">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header card-header-icon card-header-primary">
                        <div class="card-icon">
                            <i class="material-icons">person</i>
                        </div>
                        <h4 class="card-title">{card_title} Admin</h4>
                    </div>
                    <div class="card-body">
                        <form id='form_category'>
                            {hidden_input}
                            <div class="row">
                                {name}
                                {surname}
                            </div>
                            <div class="row">
                                {display}
                                {email}
                            </div>
                            <div class="row">
                                {addressline1}
                            </div>
                            <div class="row">
                                {addressline2}
                                {addressline3}
                                {postal_code}
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <label>About Me</label>
                                        <div class="form-group">
                                            <label class="bmd-label-floating"> {about} </label>
                                            <textarea class="form-control" rows="5" maxlength="200" id="about" name="about"></textarea>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <button class="btn btn-primary pull-right save">Save</button>
                            <div class="clearfix"></div>
                        </form>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card card-profile">
                    <div class="card-avatar">
                        <a href="#pablo">
                            <img class="img" src="images/faces/1.png" />
                        </a>
                    </div>
                    <div class="card-body">
                        <h6 class="card-category text-gray">{id}</h6>
                        <h4 class="card-title">{username}</h4>
                        <p class="card-description">
                            {userabout}
                        </p>
                    </div>
                </div>
            </div>
        </div>
        """

    def get_form_input(self, width, label, label_id, value, input_type='text'):
        return f"""
        <div class="col-md-{width}">
            <div class="form-group">
                <label class="bmd-label-floating">{label}</label>
                <input id="{label_id}" name="{label_id}" type="{input_type}" class="form-control" value="{value}">
            </div>
        </div>
        """

    def get_hidden_input(self, *args, **kwargs):
        input_id = kwargs.get('id', 'id')
        input_value = kwargs.get('value', None)
        return f"""<input style='display:none;' type="text" id="{input_id}" name="{input_id}" class="form-control" value="{input_value}"/>"""

    @expose()
    def save_edit_category(self, *args, **kwargs):
        this = Category.by_id(kwargs.get('category_id', None))
        if not this: return 'false'
        this.title = kwargs.get('title', None)
        this.count = kwargs.get('count', 0)
        this.icon = kwargs.get('icon', None)
        DBSession.flush()
        return 'true'

    @expose()
    def save_create_category(self, *args, **kwargs):
        usernow = request.identity.get('user', {})
        this = Category()
        this.title = kwargs.get('title', None)
        this.count = kwargs.get('count', 0)
        this.icon = kwargs.get('icon', None)
        this.added_by = usernow.id
        DBSession.add(this)
        DBSession.flush()
        return 'true'

    @expose()
    def get_subcategory_html(self, *args, **kwargs):
        this = Category.by_id(kwargs.get('category_id', None))
        if not this: return ''
        htmltbl = self.get_subcategory_htmltbl(**kwargs)
        html = f"""
        <div class="card">
            <div class="card-header card-header-primary card-header-icon">
                <div class="card-icon">
                    <i class="material-icons">category</i>
                </div>
                <h4 class="card-title">Selected: {this.title}</h4>
            </div>
            <div class="card-body pt-0">
                <div class="toolbar text-right">
                    <button id='createSubcategory' data-category-id="{this.id}" class="btn btn-primary">Create</button>
                </div>
                <div class="material-datatables">
                    {htmltbl}
                </div>
            </div>
        </div>
        """
        javascript = """
        <script>
        $('#createSubcategory').click(function(){
            var kwargs = 'category_id='+$(this).data('category-id');
            $('#dialogdiv').load('/category/get_modal_subcategory?', kwargs, function(data){
                return false;
            });
        });
        $('.editSubcategory').click(function(){
            var kwargs = 'subcategory_id='+$(this).data('subcategory-id');
            $('#dialogdiv').load('/category/get_modal_subcategory?', kwargs, function(data){
                return false;
            });
        });
        $('.remove').click(function(){
            var kwargs = 'subcategory_id='+$(this).data('subcategory-id');
            console.log('remove', kwargs);
        });
        </script>
        """
        return html + javascript

    def get_subcategory_htmltbl(self, *args, **kwargs):
        category_id = kwargs.get('category_id', None)
        if not category_id: return ''
        outputlist = []
        dbase_query = Subcategory.by_attr_all('category_id', category_id)
        for item in dbase_query:
            data = f'data-subcategory-id="{item.id}"'
            actions = f"""
            <div {data} class="btn btn-link btn-warning btn-just-icon editSubcategory"><i class="material-icons">dvr</i></div>
            <div {data} class="btn btn-link btn-danger btn-just-icon remove"><i class="material-icons">close</i></div>
            """
            outputlist.append({
                'icon' : f'<span class="mdi mdi-24px {item.icon}"></span>',
                'title': item.title,
                'count': item.count,
                'actions': actions,
                             })
        dbcolumnlist=[
                'icon',
                'title',
                'count',
                'actions',
                    ]
        theadlist=[
                'Icon',
                'Name',
                'Ad Count',
                'Actions'
                ]
        tdclasslist = [
                '',
                '',
                'text-center',
                'text-right',
                ]
        return build_html_table_material(outputlist, dbcolumnlist, theadlist, "allsubcategories", tdclasslist)

    @expose()
    def get_modal_subcategory(self, *args, **kwargs):
        category_id = kwargs.get('category_id', None)
        subcategory_id = kwargs.get('subcategory_id', None)
        this = Subcategory.by_id(subcategory_id)
        icon = this.icon if this else ''
        title = this.title if this else ''
        count = this.count if this else ''
        hidden_input = ''
        if this: hidden_input = COMMON.get_hidden_input(**{'id': 'subcategory_id', 'value': this.id})
        if category_id: hidden_input = COMMON.get_hidden_input(**{'id': 'category_id', 'value': category_id})
        card_title = f"Edit '{this.title}'" if this else 'New Subcategory'
        icon = COMMON.get_form_input(12, 'Icon', 'icon', icon)
        title = COMMON.get_form_input(12, 'Title', 'title', title)
        icon_link = f"<a href='https://material.io/resources/icons/?style=baseline' target='_blank'>Find Icons Here</a>"
        html = f"""
        <div class="modal fade" id="modalSubcategory" tabindex="-1" role="dialog" aria-labelledby="mysubcategoryLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="card-title">{card_title}</h4>
                    </div>
                    <div class="modal-body">
                        <label class="bmd-label-floating"> {icon_link} </label>
                        <form id='formSubcategory'>
                            {hidden_input}
                            {icon}
                            {title}
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button id='saveSubcategory' class="btn btn-primary">Save</button>
                        <button id='subcategoryBack' class="btn btn-outline-primary ml-10">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
        """
        javascript = """
        <script>
        $('#saveSubcategory').click(function(){
            var category_id = $('#category_id').val();
            if(category_id){
                var link = 'save_create_subcategory';
            }else{
                var link = 'save_edit_subcategory';
                var link = 'save_edit_subcategory';
            };
            var data = $('#formSubcategory').serialize();
            $.post('/category/'+link+'?', data, function(data){
                if(data == 'true'){
                    $.redirect('/all_categories');
                };
                return false;
            });
        });
        $('#subcategoryBack').click(function(){
            $('#modalSubcategory').modal('hide');
        });
        $('#modalSubcategory').modal();
        </script>
     	"""
        return html + javascript

    @expose()
    def save_edit_subcategory(self, *args, **kwargs):
        this = Subcategory.by_id(kwargs.get('subcategory_id', None))
        if not this: return 'false'
        this.title = kwargs.get('title', None)
        this.icon = kwargs.get('icon', None)
        DBSession.flush()
        return 'true'

    @expose()
    def save_create_subcategory(self, *args, **kwargs):
        usernow = request.identity.get('user', {})
        this = Subcategory()
        this.category_id = kwargs.get('category_id', None)
        this.title = kwargs.get('title', None)
        this.icon = kwargs.get('icon', None)
        this.added_by = usernow.id
        DBSession.add(this)
        DBSession.flush()
        return 'true'
