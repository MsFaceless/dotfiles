# -*- coding: utf-8 -*-
"""Message Controller"""

from tg import expose

from rocket.model import *

from rocket.lib.html_utils import *
from rocket.lib.base import BaseController
from rocket.lib.twilio_messenger import SMSMessenger, WhatsappMessenger

COUNTRY_CODE = '+27'

class MessageController(BaseController):

    @expose('json')
    def sms(self, *args, **kwargs):
        message = kwargs.get('message', None)
        if not message:
            return error_response('sms failed: no message to send')

        mobile_number = kwargs.get('mobile_number', None)
        if not mobile_number:
            return error_response('sms failed: no mobile_number to send')

        #mobile_number = self.confirm_country_code_with_mobile_number(mobile_number)
        #if not mobile_number:
        #    return error_response('sms failed: could not confirm mobile_number')

        sms_dict = {
            "message": message,
            "source": "TestSource",
            #"destination": mobile_number,
            #"destination": "+27727297914", # jp
            #"destination": "+27737034769", # cam
            #"destination": "+27608298032", # hans
            #"destination": "+27765295537", # tjaart
            "destination": "+27640605016", # taffie
        }
        print(sms_dict)
        #return success_response('Not sending since twilio is live')
        success, error = SMSMessenger.send_message_from_content(sms_dict)
        if not success:
            return error_response(str(error))
        return success_response(str(error))

    @expose('json')
    def whatsapp(self, *args, **kwargs):
        message = kwargs.get('message', None)
        if not message:
            return error_response('sms failed: no message to send')

        mobile_number = kwargs.get('mobile_number', None)
        if not mobile_number:
            return error_response('sms failed: no mobile_number to send')

        mobile_number = self.confirm_country_code_with_mobile_number(mobile_number)
        if not mobile_number:
            return error_response('sms failed: could not confirm mobile_number')

        whatsapp_dict = {
            "message": message,
            "destination": mobile_number,
            "source": "TestSource",
        }
        print(whatsapp_dict)
        #return success_response('Not sending since twilio is live')
        success, error = WhatsappMessenger.send_message_from_content(whatsapp_dict)
        if not success:
            return error_response(str(error))
        return success_response(str(error))

    def confirm_country_code_with_mobile_number(self, mobile_number=None, *args, **kwargs):
        if not mobile_number:
            return False

        if str(mobile_number).startswith(COUNTRY_CODE):
            return mobile_number

        if str(mobile_number).startswith('0'):
            return f'{COUNTRY_CODE}{mobile_number[1:]}'

        return False
