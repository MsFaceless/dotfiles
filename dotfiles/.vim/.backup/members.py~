# -*- coding: utf-8 -*-
"""Member controller module"""

from tg import predicates, require
from tg import expose, redirect, validate, url, request

from tg.i18n import ugettext as _
from tg.i18n import lazy_ugettext as l_

from rocket.model import *

from sqlalchemy import func, desc, asc, or_

from rocket.lib.tg_utils import *
from rocket.lib.base import BaseController
from rocket.lib.type_utils import TypeDictionary as TypeDict
from rocket.lib.rsa_luhn_id_algo import get_rsa_id_dict
from rocket.controllers.common import CommonController

import rocket.lib.gateway_utils as GATEWAY
from rocket.controllers.message import MessageController

SEARCHKEY_MEMBER = 'EntityPerson_SearchKeyword'  # TODO need to figure out how this works

LIMIT = 20
TYPEUTIL = TypeDict()
COMMON = CommonController()
MESSAGE = MessageController()

SEARCHKEY_FAMILY_MEMBER = 'FamilyMember_SearchKeyword'
SEARCHKEY_CONTACT = 'Contact_SearchKeyword'

class MembersController(BaseController):

    @expose()
    def _default(self, *args, **kwargs):
        return 'This page is not available.'

    @require(predicates.not_anonymous())
    @expose('rocket.templates.generic')
    def index(self, *args, **kwargs):
        html = self.get_active_member_html(*args, **kwargs)
        javascript = self.get_javascript_member_onload()
        title = _("Members")
        return dict(title=title, html=html, javascript=javascript)

    @expose()
    def get_active_member_html(self, *args, **kwargs):
        usernow = request.identity.get('user', None)
        kwargs['searchkey'] = SEARCHKEY_MEMBER
        searchphrase = COMMON.get_searchphrase(**kwargs)
        membertable = self.get_member_html_table(**kwargs)
        html = f"""
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header">
                        <div class="row d-flex">
                            <div class="col-md-6">
                                <h4 class="card-title">{_('Members')}</h4>
                            </div>
                            <div class="col-md-6 text-right">
                                <button id="create_new_member" class="btn btn-primary ml-auto">{_('Create New Member')}</button>
                            </div>
                        </div>
                        <div class="row d-flex align-items-center">
                            <div class="col-md-4">
                                <input type="text" class="form-control search" name="searchphrase" id='searchphrase' value='{searchphrase}' placeholder="{_('Search by ID Number, Name or Surname')}">
                            </div>
                            <div class="col-md-4">
                                <button class="btn btn-primary" id='action_search'>{_('Search')}</button>
                                <button class="btn btn-primary" id='btn_reset'>{_('Reset')}</button>
                            </div>
                        </div>
                        <hr>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive" id='div_member_table'>
                            {membertable}
                        </div>
                    </div>
                </div>
            </div>
        </div>
        """
        return html

    @expose()
    def get_member_html_table(self, *args, **kwargs):
        outputlist = []
        dbase_query = self.get_members_list(**kwargs)
        mobile_id = TYPEUTIL.get_id_of_name('entity_contact_type', 'mobile')
        for entity_person in dbase_query:

            identity = EntityPersonIdentity.by_attr_first('entity_person_id', entity_person.id)
            if not identity:
                continue
            identity_type = TYPEUTIL.get_pretty_name('entity_person_identity_type', identity.entity_person_identity_type_id)

            mobile = DBSession.query(EntityContact). \
                    filter(EntityContact.entity_id == entity_person.entity_id). \
                    filter(EntityContact.entity_contact_type_id == mobile_id). \
                    first()
            mobile = mobile.value if mobile else ''

            outputlist.append({
                'idnumber': f"<div class='member_edit' entity_person_id='{entity_person.id}'>{identity.value}</div>",
                'id_type': identity_type,
                'name': entity_person.firstname,
                'surname': entity_person.surname,
                'mobile': mobile,
                             })
        dbcolumnlist=[
                'idnumber',
                'id_type',
                'name',
                'surname',
                'mobile',
                    ]
        theadlist=[
                _('ID Number'),
                _('Identity Type'),
                _('First Name'),
                _('Surname'),
                _('Mobile Number'),
                ]
        tdclasslist = [
                'action_link',
                '',
                '',
                '',
                'text-right',
        ]
        return build_html_table(outputlist, dbcolumnlist, theadlist, "member_table", tdclasslist)

    def get_members_list(self, *args, **kwargs):
        kwargs['searchkey'] = SEARCHKEY_MEMBER
        searchphrase = COMMON.get_searchphrase(**kwargs).lower()
        if searchphrase:
            searchphrase = "%" + searchphrase + "%"

            idlist = []
            identity_query = DBSession.query(EntityPersonIdentity). \
                    filter(EntityPersonIdentity.bln_active == True). \
                    filter(EntityPersonIdentity.value.like(searchphrase)). \
                    order_by(EntityPersonIdentity.entity_person_id.desc()). \
                    all()
            if identity_query:
                idlist = [x.entity_person_id for x in identity_query]

            dbase_query = DBSession.query(EntityPerson). \
                filter(EntityPerson.bln_active == True). \
                filter(or_(
                    EntityPerson.firstname.ilike(searchphrase),
                    EntityPerson.surname.ilike(searchphrase),
                    EntityPerson.id.in_(idlist),
                )). \
                order_by(desc(EntityPerson.id)). \
                limit(LIMIT)

        else:
            dbase_query = DBSession.query(EntityPerson). \
                filter(EntityPerson.bln_active == True). \
                order_by(desc(EntityPerson.id)). \
                limit(LIMIT)
        return dbase_query

    @expose()
    def get_javascript_member_onload(self, *args, **kwargs):
        javascript = """
        $("#create_new_member").click(function(){
            $.redirect('/members/new_member');
        });
        $(document).on('click', '.member_edit', function(){
            var data = {entity_person_id : $(this).attr('entity_person_id')};
            $.redirect('/members/edit_member', data);
        });
        $('#action_search').click(function(){
            var kwargs = 'searchphrase='+$('#searchphrase').val();
            $('#div_member_table').load('/members/get_member_html_table?', kwargs, function(data){
                return false;
            });
        });
        $('#btn_reset').click(function(){
            $('#searchphrase').val('').focus();
            $('#div_member_table').load('/members/get_member_html_table?', 'reset=true', function(data){
                return false;
            });
        });
        """
        return javascript

    @expose('rocket.templates.generic')
    def new_member(self, *args, **kwargs):
        family_member = kwargs.get('family_member', '')
        card_title = _("New Member")
        back_button = _('Back to Members')
        back_button = f"""
        <div class="col-md-6 text-right">
            <button class="btn btn-primary ml-auto action_back members_back">{back_button}</button>
        </div>
        """
        kwargs['card_title'] =card_title
        kwargs['back_button'] =back_button
        html = COMMON.get_new_person_html(**kwargs)
        html += f"""
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-body">
                        <button id="btn_save_new_member" class="btn btn-primary" family_member='{family_member}'>Save</button>
                        <button class="btn btn-outline-primary members_back">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
        """
        javascript = """
            createDatepicker('#date_of_birth');
            createDatepicker('#register_date');
            setFormValidation('#form_new_member');

            $('#number').focus();
            $('#number').change(function(){
                var kwargs = 'identity_type_id=' + $('#identity_type_id option:selected').val()
                kwargs += '&value=' + $(this).val();
                $.post('/members/check_identity_number?', kwargs, function(data){
                    var result = JSON.parse(data);
                    if(result.success === true){
                        $('#date_of_birth').val(result.date_of_birth);
                        $('#entity_person_gender_type_id').val(result.gender).change();
                    };
                    return false;
                });
            });

            $('#btn_save_new_member').click(function(){
                var valid = FormIsValid("#form_new_member");
                if(valid){
                    var family_member = $('#btn_save_new_member').attr('family_member');
                    var formserial = $('#form_new_member').serialize();
                    formserial += '&family_member='+family_member;
                    $.post('/members/save_new_memberobj?', formserial, function(data){
                        var result = JSON.parse(data);
                        if(result.success){
                            $.redirect(result.redirect, result);

                        }else{
                            showNotification(result.success, result.message);

                        };
                        return false;
                    });
                }
            });
            $('.members_back').click(function(){
                $.redirect('/members/index');
            });
        """
        return dict(title=card_title, html=html, javascript=javascript)

    @expose()
    def check_identity_number(self, *args, **kwargs):
        outputdict = {'success' : False}
        identity_type_id = kwargs.get('identity_type_id', None)
        if not identity_type_id:
            return json.dumps(outputdict)

        identity_number = TYPEUTIL.get_id_of_name('entity_person_identity_type', 'identity_number')
        if not identity_number == int(identity_type_id):
            return json.dumps(outputdict)

        value = kwargs.get('value', None)

        result = get_rsa_id_dict(value)
        success = result.get('luhn_check', False)
        if not success:
            return json.dumps(outputdict)

        date_of_birth = result.get('dob', None)
        date_of_birth = datetime.strftime(date_of_birth, '%d-%m-%Y')

        gender = result.get('gender', 'Unknown')
        gender_id = TYPEUTIL.get_id_of_name('entity_person_gender_type', gender.lower())

        outputdict['success'] = True
        outputdict['date_of_birth'] = date_of_birth
        outputdict['gender'] = gender_id
        return json.dumps(outputdict)

    @expose()
    def check_member_exists(self, *args, **kwargs):
        identity_type = kwargs.get('identity_type_id', None)
        if not identity_type:
            log.warning('check_member_exists: No identity_type in kwargs')
            return json.dumps({'success': False, 'message': 'Please supply a identity type', 'status': 'danger'})

        identity_number = kwargs.get('identity_number', None)
        if not identity_number:
            log.warning('check_member_exists: No identity_number in kwargs')
            return json.dumps({'success': False, 'message': 'Please supply a identity number', 'status': 'danger'})

        identity = DBSession.query(EntityPersonIdentity). \
                filter(EntityPersonIdentity.value == identity_number). \
                filter(EntityPersonIdentity.entity_person_identity_type_id == identity_type). \
                first()
        if not identity:
            return json.dumps({'success': False, 'message': 'Could not find identity data', 'status': 'danger'})

        entity_person = EntityPerson.by_id(identity.entity_person_id)
        if not entity_person:
            return json.dumps({'success': False})

        return json.dumps({'success': True, 'data': entity_person.id})

    @expose()
    def save_new_memberobj(self, *args, **kwargs):
        family_member = kwargs.get('family_member', False)
        redirect = kwargs.get('redirect_url', '/members/edit_member')
        entity_person_id = kwargs.get('entity_person_id', None)
        entity_id = COMMON.save_new_personobj(**kwargs)
        if not entity_id:
            return json.dumps({'success': False, 'message': 'Member creation failed.'})

        entity_person = DBSession.query(EntityPerson). \
                filter(EntityPerson.entity_id == entity_id). \
                first()
        if not entity_person:
            return json.dumps({'success': False, 'message': 'Could not retrieve Person.'})

        if not entity_person_id:
            entity_person_id = entity_person.id

        outputdict = {
            'success': True,
            'entity_person_id': entity_person_id,
            'redirect': redirect,
                }
        if family_member:
            outputdict['family_entity_person_id'] = entity_person.id
        return json.dumps(outputdict)

    @require(predicates.not_anonymous())
    @expose('rocket.templates.generic')
    def edit_member(self, *args, **kwargs):
        entity_person_id = kwargs.get('entity_person_id', None)
        if not entity_person_id:
            redirect('/members/index')

        entity_person = EntityPerson.by_id(entity_person_id)
        if not entity_person:
            redirect('/members/index')

        title =f"""Edit Member: {entity_person.firstname}"""
        html = self.get_edit_person_html(**kwargs)
        return dict(title=title, html=html, javascript='')

    def get_edit_person_html(self, *args, **kwargs):
        entity_person_id = kwargs.get('entity_person_id', None)
        card_header = self.get_edit_member_card_title_html(**kwargs)
        family_entity_person_id = kwargs.get('family_entity_person_id', None)
        family_active = False
        if family_entity_person_id:
            family_active = True

        tab_list = [
            {'title': 'Overview', 'target_url': '/members/get_edit_person_htmltbl'},
            {'title': 'Family', 'target_url': '/members/get_edit_member_family_html'},
            {'title': 'Documents', 'target_url': '/members/get_edit_person_document_html'},
            #{'title': 'Communication', 'target_url': '/members/get_edit_person_communication_html'},
            #{'title': 'History', 'target_url': '/members/get_edit_person_history_html'},
            #{'title': 'Transactions', 'target_url': '/members/get_edit_person_transaction_html'},
        ]
        nav_items = ""
        for i, tab in enumerate(tab_list):
            title = tab.get('title', None)
            target_url = tab.get('target_url', None)
            active = 'active' if i == 0 else ''
            nav_items += f"""
            <li class="nav-item">
                <div class="nav-link {active}" data-toggle="tab" data-target-url="{target_url}" role="tablist">
                    {title}
                </div>
            </li>
            """

        html = f"""
        {card_header}
        <div class="card py-3">
            <div class="card-header">
                <ul id="tabsHeader" class="nav nav-pills nav-pills-primary" role="tablist"
                    data-entity-person-id="{entity_person_id}" family_entity_person_id='{family_entity_person_id}'>
                    {nav_items}
                </ul>
            </div>
            <div class="card-body">
            </div>
        </div>
        <div id="contentDiv" class="tab-content" family_active='{family_active}'>
        </div>
        """
        javascript = """
        <script nonce='1234'>
            var contentDiv = $('#contentDiv');
            var family_active = $('#contentDiv').attr('family_active');
            $('.nav-link').click(function(){
                var targetUrl = $(this).data('targetUrl');
                var kwargs = 'entity_person_id='+$('#tabsHeader').data('entityPersonId');
                kwargs += '&family_entity_person_id='+$('#tabsHeader').attr('family_entity_person_id');
                contentDiv.load(targetUrl, kwargs, function(e){
                    return false;
                })
            });

            if(family_active == 'True'){
                $('.nav-link:eq(1)').click();
            }else{
                $('.nav-link').first().click();
            };
        </script>
        """
        return html + javascript

    @expose()
    def get_edit_person_htmltbl(self, *args, **kwargs):
        kwargs['form_id'] = 'form_edit_member'
        card_member_details = COMMON.get_edit_person_form(**kwargs)
        card_member_details = f"""
        <div id= "div_contact_table">
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        <div class="card-header">
                        </div>
                        <div class="card-body">
                            {card_member_details}
                            <div class="row">
                                <div class="col-md-12">
                                    <button id="btn_save_edit_member" class="btn btn-primary">Save</button>
                                    <button class="btn btn-outline-primary members_back">Cancel</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        """
        card_member_contact = COMMON.get_edit_member_contact_html(**kwargs)
        card_member_address = COMMON.get_person_address_html(**kwargs)
        card_member_bank = COMMON.get_edit_member_bank_html(**kwargs)
        html = f"""
        <div class="row">
            <div class="col-md-12 ml-auto mr-auto">
                {card_member_details}
                {card_member_contact}
                {card_member_address}
                {card_member_bank}
            </div>
        </div>
        """
        javascript = self.get_javascript_edit_member()
        return html + javascript

    def get_javascript_edit_member(self, *args, **kwargs):
        javascript ="""
        <script nonce='1234'>
            createDatepicker('#date_of_birth');
            setFormValidation('#form_edit_member');
            setFormValidation('#form_member_bank');

            $('#number').change(function(){
                var kwargs = 'identity_type_id=' + $('#identity_type_id option:selected').val()
                kwargs += '&value=' + $(this).val();
                $.post('/members/check_identity_number?', kwargs, function(data){
                    var result = JSON.parse(data);
                    if(result.success === true){
                        $('#date_of_birth').val(result.date_of_birth);
                        $('#entity_person_gender_type_id option:selected').val(result.gender);
                    };
                    return false;
                });
            });

            $('#btn_save_edit_member').click(function(){
                var valid = FormIsValid("#form_edit_member");
                if(valid){
                    var formserial = $('#form_edit_member').serialize();
                    $.post('/members/save_edit_memberobj?', formserial, function(data){
                        var result = JSON.parse(data);
                        if(result.success === true){
                            $.redirect(result.redirect, {'entity_person_id' : result.entity_person_id});
                        } else {
                            showNotification(result.status, result.data);
                        };
                        return false;
                    });
                }
            });
            $("#region_id").change(function () {
                var region_id = $('#region_id option:selected').val();
                var kwargs = {'region_id': region_id, };
                $('#div_district').load('/common/get_district_html?', kwargs, function(data){
                    return false;
                });
            });
            $("#region_id").trigger('change');
            $("#create_new_contact").click(function(){
                var kwargs = {entity_person_id : $(this).attr('entity_person_id')};
                 $('#dialogdiv').load('/members/get_modal_new_person_contact?', kwargs, function(data){
                    return false;
                 });
            });
            $("#create_new_message").click(function(){
                var kwargs = {contact_id : $(this).attr('contact_id'), entity_person_id : $(this).attr('entity_person_id') , entity_id : $(this).attr('entity_id')};
                 $('#dialogdiv').load('/members/get_modal_new_message?', kwargs, function(data){
                    return false;
                 });
            });
            $(".edit_contact").click(function(){
                var kwargs = {contact_id : $(this).attr('contact_id'), entity_person_id : $(this).attr('entity_person_id') , entity_id : $(this).attr('entity_id')};
                $('#dialogdiv').load('/members/get_modal_edit_person_contact?', kwargs, function(data){
                    return false;
                });
            });
            $(".send_message").click(function(){
                var kwargs = {contact_id : $(this).attr('contact_id'),contact_value : $(this).attr('contact_value'), entity_person_id : $(this).attr('entity_person_id') , contact_type : $(this).attr('contact_type') , entity_id : $(this).attr('entity_id')};
                $('#dialogdiv').load('/members/get_modal_new_message?', kwargs, function(data){
                    return false;
                });
            });
            $(".send_email").click(function(){
                var kwargs = {contact_id : $(this).attr('contact_id'),contact_value : $(this).attr('contact_value'), entity_person_id : $(this).attr('entity_person_id') , entity_id : $(this).attr('entity_id')};
                $('#dialogdiv').load('/members/get_modal_email_message?', kwargs, function(data){
                    return false;
                });
            });

        </script>
        """
        return javascript

    @expose()
    def get_edit_person_history_html(self, *args, **kwargs):
        print()
        print('get_edit_person_history_html')
        print(kwargs)
        print()
        html = f"""
        <div class="row">
            <div class="col-md-12 ml-auto mr-auto">
                get_edit_person_history_html
            </div>
        </div>
        """
        return html

    @expose()
    def get_edit_person_transaction_html(self, *args, **kwargs):
        print()
        print('get_edit_person_transaction_html')
        print(kwargs)
        print()
        html = f"""
        <div class="row">
            <div class="col-md-12 ml-auto mr-auto">
                get_edit_person_transaction_html
            </div>
        </div>
        """
        return html

    @expose()
    def get_edit_person_document_html(self, *args, **kwargs):
        inner_html = self.get_entity_person_drawer_html(**kwargs)
        html = f"""
        <div class="row">
            <div class="col-md-12 ml-auto mr-auto">
                <div class="card">
                    <div class="card-header">
                        <div class="row d-flex">
                            <div class="col-md-6">
                                <h4 class="card-title">{_('Member Documents')}</h4>
                            </div>
                            <div class="col-md-6 text-right">
                            </div>
                        </div>
                        <hr>
                    </div>
                    <div class="card-body">
                    </div>
                </div>
            </div>
        </div>
        {inner_html}
        """
        return html

    def get_entity_person_drawer_html(self, *args, **kwargs):
        if not request.identity:
            return ''
        usernow = request.identity.get('user', None)

        entity_person_id = kwargs.get('entity_person_id', None)
        if not entity_person_id:
            return ''

        cabinet = Cabinet.by_attr_first('name', 'Member')
        if not cabinet:
            cabinet = Cabinet()
            cabinet.name = 'Member'
            cabinet.description = 'Member Cabinet'
            DBSession.add(cabinet)
            DBSession.flush()
        print(cabinet)

        drawer = DBSession.query(Drawer). \
                filter(Drawer.cabinet_id == cabinet.id). \
                filter(Drawer.name == entity_person_id). \
                first()
        if not drawer:
            drawer = Drawer()
            drawer.cabinet_id = cabinet.id
            drawer.name = entity_person_id
            DBSession.add(drawer)
            DBSession.flush()
        print(drawer)

        user_link = DBSession.query(DrawerUserLink). \
                filter(DrawerUserLink.drawer_id == drawer.id). \
                filter(DrawerUserLink.user_id == usernow.id). \
                first()
        if not user_link:
            user_link = DrawerUserLink()
            user_link.drawer_id = drawer.id
            user_link.user_id = usernow.id
            DBSession.add(user_link)
            DBSession.flush()
        print(user_link)

        link = DBSession.query(DrawerEntityPersonLink). \
                filter(DrawerEntityPersonLink.drawer_id == drawer.id). \
                filter(DrawerEntityPersonLink.entity_person_id == entity_person_id). \
                first()
        if not link:
            link = DrawerEntityPersonLink()
            link.drawer_id = drawer.id
            link.entity_person_id = entity_person_id
            DBSession.add(link)
            DBSession.flush()
        print(link)

        html = f"""
        <div class="row">
            <div class="col-md-4" id="div_show_drawer_list" cabinet_id='{cabinet.id}'>
            </div>
            <div class="col-md-8" id="div_show_file_list" drawer_id='{drawer.id}'>
            </div>
        </div>
        """
        javascript = """
        <script nonce='1234'>
            var kwargs = 'drawer_id=' + $('#div_show_file_list').attr('drawer_id');
            kwargs += '&cabinet_id=' + $('#div_show_drawer_list').attr('cabinet_id');

            $('#div_show_drawer_list').load('/media/show_drawer_list_for_cabinet', kwargs, function(data){
                return false;
            });
            $('#div_show_file_list').load('/media/show_file_list_for_drawer?', kwargs, function(data){
                return false;
            });
        </script>
        """
        return html + javascript

    @expose()
    def get_edit_person_communication_html(self, *args, **kwargs):
        print()
        print('get_edit_person_communication_html')
        print(kwargs)
        print()
        html = f"""
        <div class="row">
            <div class="col-md-12 ml-auto mr-auto">
                get_edit_person_communication_html
            </div>
        </div>
        """
        return html

    def get_edit_member_card_title_html(self, *args, **kwargs):
        entity_person_id = kwargs.get('entity_person_id', None)
        if not entity_person_id:
            return ''

        entity_person = EntityPerson.by_id(entity_person_id)
        if not entity_person:
            return ''
        html = f"""
        <div class="card">
            <div class="card-header">
                <div class="row d-flex">
                    <div class="col-md-8">
                        <h4 class="card-title">Edit Member: {entity_person.firstname} </h4>
                    </div>
                    <div class="col-md-4 text-right">
                        <button class="btn btn-primary ml-auto members_back">Back to Members</button>
                    </div>
                </div>
                <div class="row d-flex">
                    <div class="col-md-12">
                        <hr>
                    </div>
                </div>
            </div>
        </div>
        """
        javascript = """
        <script nonce='1234'>
            $('.members_back').click(function(){
                $.redirect('/members/index');
            });
        </script>
        """
        return html + javascript

    @expose()
    def save_edit_memberobj(self, *args, **kwargs):
        success = COMMON.save_edit_personobj(**kwargs)
        if not success: return json.dumps({'success': False, 'data': 'Member update failed.', 'status': 'danger'})
        entity_person_id = kwargs.get('entity_person_id', None)
        if not entity_person_id: return json.dumps({'success': False, 'data': 'Missing person_id.', 'status': 'danger'})
        return json.dumps({'success': True, 'entity_person_id': entity_person_id, \
                'redirect': '/members/edit_member', 'data': \
                'Member saved successsfully.', 'status': 'success'})

###############################################################################
# Member Family List
###############################################################################

    @expose()
    def get_edit_member_family_html(self, *args, **kwargs):
        entity_person_id = kwargs.get('entity_person_id', None)

        button_arg = ''
        family_entity_person_id = kwargs.get('family_entity_person_id', '')
        if family_entity_person_id == 'None':
            family_entity_person_id = None
        if family_entity_person_id:
            button_arg = f"""
            family_entity_person_id='{family_entity_person_id}'
            """

        dbase_query = DBSession.query(EntityPersonFamily). \
            filter(EntityPersonFamily.entity_person_id == entity_person_id). \
            order_by(asc(EntityPersonFamily.relationship_type_id)). \
            limit(LIMIT)

        img_active = "<img src='/images/icon_check.png' />"
        img_inactive = "<img src='/images/icon_cross.png' />"

        outputlist = []
        for item in dbase_query:
            entity_person = EntityPerson.by_id(item.family_entity_person_id)
            if not entity_person:
                continue

            relationship = TYPEUTIL.get_pretty_name('benefit_insured_life_relationship_type', item.relationship_type_id)

            active = img_active
            if not item.bln_active:
                active = img_inactive

            outputlist.append({
                'relationship': f"<div class='member_family_edit' family_entity_person_id='{item.id}' entity_person_id='{entity_person_id}'>{relationship}</div>",
                'name': entity_person.firstname,
                'surname': entity_person.surname,
                'active': active,
            })
        dbcolumnlist = [
            'relationship',
            'name',
            'surname',
            'active',
        ]
        theadlist = [
            'Relationship Type',
            'Name',
            'Surname',
            'Active',
        ]
        tdclasslist = [
            'action_link',
            '',
            '',
            'text-center',
        ]
        family_member_itemtable = build_html_table(outputlist, dbcolumnlist, theadlist, "rate_table_line_item_table", tdclasslist)
        html = f"""
        <div id= "div_family_member_table">
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        <div class="card-header">
                            <div class="row d-flex">
                                <div class="col-md-6">
                                    <h4 class="card-title">{_('Family Members')}</h4>
                                </div>
                                <div class="col-md-6 text-right">
                                    <button id="create_new_member_family" entity_person_id={entity_person_id}
                                            {button_arg} class="btn btn-primary ml-auto">
                                        {_('New Family Member')}
                                    </button>
                                </div>
                            </div>
                            <hr>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                {family_member_itemtable}
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        """
        javascript = """
        <script nonce='1234'>
            var family_entity_person_id = $('#create_new_member_family').attr('family_entity_person_id');
            $(".member_family_edit").click(function(){
                var kwargs = 'family_entity_person_id='+$(this).attr('family_entity_person_id');
                kwargs += '&entity_person_id='+$(this).attr('entity_person_id');
                $('#dialogdiv').load('/members/get_modal_edit_family_member?', kwargs, function(data){
                   return false;
                });
            });
            $("#create_new_member_family").click(function(){
               var kwargs = {
                    'entity_person_id': $(this).attr('entity_person_id'),
                    'family_entity_person_id' : family_entity_person_id,
                };

                $('#dialogdiv').load('/members/get_modal_new_member_family?', kwargs, function(data){
                    return false;
                });
            });
            if(family_entity_person_id){
                $('#create_new_member_family').trigger('click');
            };
        </script>
        """
        return html + javascript

    @expose()
    def get_modal_new_member_family(self, *args, **kwargs):
        kwargs['searchkey'] = SEARCHKEY_FAMILY_MEMBER
        entity_person_id = kwargs.get('entity_person_id', None)
        searchphrase = COMMON.get_searchphrase(**kwargs)
        print()
        print('get_modal_new_member_family')
        print(kwargs)
        print()

        family_entity_person_id = kwargs.get('family_entity_person_id', None)
        button = f"""
        <button type="button" class="btn btn-primary" entity_person_id={entity_person_id} id='action_search_member'>Search</button>
        """
        if family_entity_person_id:
            button = f"""
            <button type="button" class="btn btn-primary" entity_person_id={entity_person_id}
                    family_entity_person_id='{family_entity_person_id}' id='action_search_member'>Search</button>
            """

        html = f"""
        <div class="modal fade" id="dialog_new_member_family" tabindex="-1" role="dialog" aria-labelledby="mybank_branchLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="col-md-12">
                            <h4 class="card-title">Family Member</h4>
                        </div>
                    </div>
                    <div class="modal-body">
                        <form id='form_new_family_member'>
                            <input type="hidden" id="entity_person_id" name="entity_person_id" class="form-control" value="{entity_person_id}"/>
                            <input type="hidden" id="family_entity_person_id" name="family_entity_person_id" class="form-control" value="{family_entity_person_id}"/>
                            <div class="col-md-12">
                                <div class="row">
                                    <label class="col-md-3 col-form-label" required for="searchphrase">Family Member</label>
                                    <div class="col-md-6">
                                        <input type="text" class="form-control search" name="searchphrase" required id='searchphrase' value='{searchphrase}' placeholder="Search by Identity Number">
                                    </div>
                                    <div class="col-md-3">
                                        <div class="row">
                                            {button}
                                            <button class="btn btn-primary"  type="button" id='btn_reset'>Reset</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="family_member_details"></div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button id='save_new_family_member' class="btn btn-primary">Save</button>
                        <button class="btn btn-outline-primary family_member_back" data-dismiss="modal">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
        """
        javascript = """
        <script nonce='1234'>
            setFormValidation('#form_new_family_member');
            $('#save_new_family_member').click(function(){
                var valid = FormIsValid("#form_new_family_member");
                if(valid){
                    var formserial = $('#form_new_family_member').serialize();
                    console.log(formserial);
                    $.post('/members/save_new_family_member?', formserial, function(data){
                        var result = JSON.parse(data);
                        if(result.success){
                            var kwargs = '&entity_person_id='+$('#action_search_member').attr('entity_person_id');
                            $('#dialog_new_member_family').modal('hide');
                            $('#div_family_member_table').load('/members/get_edit_member_family_html?', kwargs, function(data){
                                return false;
                            });

                        }else{
                            showNotification(result.status, result.data);
                        };
                        return false;
                    });
                }
            });
            $('.family_member_back').click(function(){
                $('#dialog_new_member_family').modal('hide');
            });
            $('#dialog_new_member_family').modal();
            $('#action_search_member').click(function(){
                var kwargs = 'searchphrase='+$('#searchphrase').val();
                kwargs += '&entity_person_id='+$(this).attr('entity_person_id');
                $.post('/members/search_family_member?', kwargs, function(data){
                    var result = JSON.parse(data);
                    if(result.success === true){
                        $('#family_member_details').load('/members/get_search_family_member_details?', result, function(data){
                            return false;
                        });

                    } else {
                        showNotification(result.status, result.data);
                        $.redirect('/members/new_member?', result);
                    };
                    return false;
                });
            })
            $('#btn_reset').click(function(){
                $('#searchphrase').val('').focus();
                $('#family_member_details').empty();
            })

            var family_entity_person_id = $('#action_search_member').attr('family_entity_person_id');
            if(family_entity_person_id){
                $('#action_search_member').trigger('click');
            };
        </script>
        """
        return html + javascript

    @expose()
    def get_modal_new_message(self, *args, **kwargs):
        entity_id = kwargs.get('entity_id', None)
        contact_id = kwargs.get('contact_id', None)
        contact_type = kwargs.get('contact_type', None)
        contact_value = kwargs.get('contact_value', None)
        entity_person_id = kwargs.get('entity_person_id', None)

        contact = EntityContact.by_id(contact_id)
        if not contact:
            return ''

        if not contact_type:
            contact_type = TYPEUTIL.get_pretty_name('entity_contact_type', contact.entity_contact_type_id)
        html = f"""
            <div class="modal fade" id="dialog_new_message" tabindex="-1" role="dialog" aria-labelledby="mybank_branchLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <div class="col-md-12">
                                <h4 class="card-title">New {contact_type} Message</h4>
                            </div>
                        </div>
                        <div class="modal-body">
                            <form id='form_new_message'>
                              <input id="entity_person_id"  type="hidden"  name="entity_person_id" value="{entity_person_id}" class="form-control" required='true'>
                              <input id="entity_id" type="hidden"  name="entity_id" value="{entity_id}" class="form-control" required='true'>
                              <input id="contact_type"  type="hidden"  name="contact_type" value="{contact_type}" class="form-control" required='true'>
                              <input id="contact_value"  type="hidden"  name="contact_value" value="{contact_value}"  class="form-control" required='true'>
                              <div class="col-md-12">
                                  <div class="form-group row">
                                     <label class="col-md-3 col-form-label" required for="debit_account">Mobile Number</label>
                                     <div class="col-md-9">
                                       <input id="" type="text" name="" value="{contact_value}" class="form-control" disabled required='true'>
                                    </div>
                                 </div>
                              </div>
                                <div class="col-md-12">
                                   <div class="form-group row">
                                       <label class="col-md-3 col-form-label">Message</label>
                                       <div class="col-md-9">
                                            <textarea name='message' type="text" class="form-control" rows="2" maxlength='160'></textarea>
                                       </div>
                                   </div>
                                 </div>
                            </form>
                        </div>
                        <div class="modal-footer">
                            <button id='save_new_message' class="btn btn-primary">Save</button>
                            <button class="btn btn-outline-primary new_message_back" data-dismiss="modal">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
        """
        javascript = """
          <script nonce='1234'>
            setFormValidation('#form_new_message');

            $('#save_new_message').click(function(){
                 var valid = FormIsValid("#form_new_message");
                 if(valid){
                    var formserial = getFormData('#form_new_message');
                    var data = {data : JSON.stringify(formserial)};

                    $.post('/members/send_new_message?', data, function(data){
                      var result = JSON.parse(data);
                      if(result.success){
                          $('#dialog_new_message').modal('hide');
                        };
                        showNotification(result.status, result.data);
                        return false;
                    });
                 }
            });
          $('.new_message_back').click(function(){
                $('#dialog_new_message').modal('hide');
            });

          $('#dialog_new_message').modal();
          </script>
         """
        return html + javascript

    @expose()
    def get_modal_email_message(self, *args, **kwargs):
        entity_person_id = kwargs.get('entity_person_id')
        entity_id = kwargs.get('entity_id')
        contact_id = kwargs.get('contact_id')
        contact_value = kwargs.get('contact_value')

        html = f"""
        <div class="modal fade" id="dialog_mail_message" tabindex="-1" role="dialog" aria-labelledby="mybank_branchLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="col-md-12">
                            <h4 class="card-title">New Mail</h4>
                        </div>
                    </div>
                    <div class="modal-body">
                        <form id='form_new_email'>
                            <input id="entity_person_id"  type="hidden"  name="entity_person_id" value="{entity_person_id}" class="form-control" required='true'>
                            <input id="entity_id" type="hidden"  name="entity_id" value="{entity_id}" class="form-control" required='true'>
                            <input id="contact_value"  type="hidden"  name="contact_value" value="{contact_value}"  class="form-control" required='true'>
                            <div class="col-md-12">
                                <div class="form-group row">
                                    <label class="col-md-3 col-form-label" required for="debit_account">To Email</label>
                                    <div class="col-md-9">
                                        <input id="" type="text" name="" value="{contact_value}" class="form-control" disabled required='true'>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group row">
                                    <label class="col-md-3 col-form-label" required for="debit_account">Subject</label>
                                    <div class="col-md-9">
                                        <input id="" type="text" name="subject"  id="subject" class="form-control" required='true'>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group row">
                                    <label class="col-md-3 col-form-label">Message</label>
                                    <div class="col-md-9">
                                        <textarea name='message' type="text" class="form-control" rows="2" maxlength='160'></textarea>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button id='save_mail_message' class="btn btn-primary">Save</button>
                        <button class="btn btn-outline-primary new_message_back" data-dismiss="modal">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
        """
        javascript = """
        <script nonce='1234'>
            setFormValidation('#form_new_email');
            $('#save_mail_message').click(function(){
                var valid = FormIsValid("#form_new_email");
                if(valid){
                    var formserial = getFormData('#form_new_email');
                    var data = {data : JSON.stringify(formserial)};
                    $.post('/members/send_new_email?', data, function(data){
                        var result = JSON.parse(data);
                        if(result.success){
                            $('#dialog_mail_message').modal('hide');
                        };
                        showNotification(result.status, result.data);
                        return false;
                    });
                }
            });
            $('.save_mail_message').click(function(){
                $('#dialog_mail_message').modal('hide');
            });
            $('#dialog_mail_message').modal();
        </script>
        """
        return html + javascript

    @expose()
    def get_search_family_member_details(self, *args, **kwargs):
        surname = kwargs.get('surname', None)
        firstname = kwargs.get('firstname', None)
        selectbox_relationship_type = COMMON.get_selectbox_family_relationship_type()
        html = f"""
        <div class="col-md-12">
            <div class="form-group row">
                <label class="col-md-3 col-form-label" required>{_('Family Details')}</label>
                <label class="col-md-9 col-form-label">{firstname + "  "+ surname}</label>
            </div>
        </div>
        <div class="col-md-12">
            <div class="form-group row">
                <label class="col-md-3 col-form-label" required>{_('Relationship Type')}</label>
                <div class="col-md-9">
                    {selectbox_relationship_type}
                </div>
            </div>
        </div>
        """
        return html

    @expose()
    def search_family_member(self, *args, **kwargs):
        kwargs['searchkey'] = SEARCHKEY_FAMILY_MEMBER
        search_family_member = COMMON.search_family_member(**kwargs)
        return search_family_member

    @expose()
    def send_new_email(self, *args, **kwargs):
        data = json.loads(kwargs.get('data', json.dumps({})))
        outputdict = {'success': False}

        if not data:
            return json.dumps({'success': False, 'data': 'No data provided', 'status': 'danger'})
        email_address = data.get('contact_value')
        message = data.get('message')
        subject = data.get('subject')
        message_dict = {
            'message': message,
            'email_address': email_address,
            'subject' :subject
        }
        send_message = COMMON.send_email(**message_dict)

        if(send_message):
            outputdict['success'] = True
            outputdict['data'] = 'Email successfully sent.'
            outputdict['status'] = 'success'
            return json.dumps(outputdict)

        return json.dumps({'success': False, 'data': 'Failed to send email', 'status': 'danger'})

    @expose()
    def send_new_message(self, *args, **kwargs):
        data = json.loads(kwargs.get('data', json.dumps({})))
        outputdict = {'success': False}
        if not data:
            return json.dumps({'success': False, 'data': 'No data provided', 'status': 'danger'})
        usernow = request.identity.get('user', None)
        contact_id = data.get('contact_id')
        contact_value = data.get('contact_value')
        contact_type = data.get('contact_type')
        message = data.get('message')
        message_dict = {
            'message': message,
            'mobile_number': contact_value
        }

        if contact_type == "Sms":
            send_sms = MESSAGE.sms(**message_dict)
            if not send_sms:
                outputdict['success'] = True
                outputdict['data'] = 'Sending Sms failed.'
                outputdict['status'] = 'danger'
                return json.dumps(outputdict)

            outputdict['success'] = True
            outputdict['data'] = 'Sms successfully sent.'
            outputdict['status'] = 'success'
            return json.dumps(outputdict)

        if contact_type == "Whatsapp":

            send_whatspp = MESSAGE.whatsapp(**message_dict)
            if not send_whatspp:
                outputdict['success'] = True
                outputdict['data'] = 'Sending Sms failed.'
                outputdict['status'] = 'danger'
                return json.dumps(outputdict)

            outputdict['success'] = True
            outputdict['data'] = 'WhatsApp message successfully sent.'
            outputdict['status'] = 'success'
            return json.dumps(outputdict)

        return json.dumps(outputdict)

    @expose()
    def save_new_family_member(self, *args, **kwargs):
        if not kwargs:
            return json.dumps({'success': False, 'data': 'No kwargs provided', 'status': 'danger'})
        print()
        print('save_new_family_member')
        print(kwargs)
        print()

        usernow = request.identity.get('user', None)
        entity_person_id = kwargs.get('entity_person_id', None)
        relationship_type_id = kwargs.get('relationship_type_id', None)
        family_entity_person_id = kwargs.get('family_entity_person_id', None)

        this = EntityPersonFamily()
        this.entity_person_id = entity_person_id
        this.family_entity_person_id = family_entity_person_id
        this.relationship_type_id = relationship_type_id
        this.added_by = usernow.id
        DBSession.add(this)
        DBSession.flush()
        return json.dumps({'success': True, 'entity_person_id': entity_person_id})

    @expose()
    def save_edit_family_member(self, *args, **kwargs):
        usernow = request.identity.get('user', None)
        family_id = kwargs.get('family_id', None)
        entity_person_id = kwargs.get('entity_person_id', None)
        relationship_type_id = kwargs.get('relationship_type_id', None)

        bln_active = kwargs.get('active', False)
        if bln_active:
            bln_active = True

        this = EntityPersonFamily.by_id(family_id)
        this.relationship_type_id = relationship_type_id
        this.bln_active = bln_active
        DBSession.flush()
        return json.dumps({'success': True, 'entity_person_id': entity_person_id, 'tab_family_active' : True})

    @expose()
    def get_modal_edit_family_member(self, *args, **kwargs):
        entity_person_id = kwargs.get('entity_person_id')
        family_id = kwargs.get('family_entity_person_id')
        this = EntityPersonFamily.by_id(family_id)
        if not this: return ''
        active = this.bln_active
        relationship_type_id = this.relationship_type_id
        checked = 'checked' if active else ''
        dropdown_family_type = COMMON.get_selectbox_family_relationship_type(**{'selected': relationship_type_id})
        html = f"""
           <div class="modal fade" id="dialog_edit_family_member" tabindex="-1" role="dialog" aria-labelledby="mytbl_system_documentLabel" aria-hidden="true">
               <div class="modal-dialog modal-dialog-centered modal-lg">
                   <div class="modal-content">
                       <div class="modal-header">
                           <div class="col-md-6">
                               <h4 class="card-title">Edit Relationship Type</h4>
                           </div>
                       </div>
                       <div class="modal-body">
                           <form id='form_edit_family'>
                               <div style='display: none' class="col-md-12">
                                   <div class="form-group row">
                                       <label class="col-md-3 col-form-label" required for="organisation_id">Id</label>
                                       <div class="col-md-9">
                                           <input id="entity_person_id" type="text" name="entity_person_id" value="{entity_person_id}" class="form-control" required='true'>
                                           <input id="family_id" type="text" name="family_id" value="{family_id}" class="form-control" required='true'>
                                       </div>
                                   </div>
                               </div>
                               <div class="col-md-12">
                                   <div class="form-group row">
                                       <label class="col-md-4 col-form-label" required for="code">{_('Relationship Type ')}</label>
                                       <div class="col-md-8">
                                           {dropdown_family_type}
                                       </div>
                                   </div>
                               </div>
                               <div class="col-md-12">
                                   <div class="form-group row">
                                       <label class="col-4 col-form-label" for="active" required>Active</label>
                                       <div class="col-8">
                                           <div class="form-check">
                                               <label class="form-check-label">
                                                   <input class="form-check-input" type="checkbox" name="active" id="active" {checked}/>
                                                   <span class="form-check-sign"></span>
                                               </label>
                                           </div>
                                       </div>
                                   </div>
                               </div>
                           </form>
                       </div>
                       <div class="modal-footer">
                           <button id='family_edit_save' class="btn btn-primary">Save</button>
                           <button class="btn btn-outline-primary edit_family_back ">Cancel</button>
                       </div>
                   </div>
               </div>
           </div>
           """
        javascript = """
        <script nonce='1234'>
         $('.edit_family_back').click(function(){
             $('#dialog_edit_family_member').modal('hide');
         });
         $('#dialog_edit_family_member').modal();

        $('#family_edit_save').click(function(){
             var valid = FormIsValid("#form_edit_family");
             if(valid){
                var formserial = $('#form_edit_family').serialize();
                $.post('/members/save_edit_family_member?', formserial, function(data){
                    var result = JSON.parse(data);
                    if(result.success === true){
                        $('#dialog_edit_family_member').modal('hide');
                        $.redirect('/members/edit_member', result);
                    };
                    return false;
                });
             }
        });
        </script>
        """
        return html + javascript

    @expose()
    def get_modal_new_person_contact(self, *args, **kwargs):
        html = COMMON.get_modal_new_person_contact(**kwargs)
        javascript = """
        <script nonce='1234'>
            setFormValidation('#form_new_contact');
            $('#save_new_contact').click(function(){
                 var valid = FormIsValid("#form_new_contact");
                 if(valid){
                  var formserial = $('#form_new_contact').serialize();
                    $.post('/members/save_new_member_contact?', formserial, function(data){
                        var result = JSON.parse(data);
                        if(result.success === true){
                            $('#dialog_new_contact').modal('hide');
                            $.redirect('/members/edit_member', result);
                        };
                        return false;
                    });
                 }
            });
        </script>
        """
        return html+javascript

    @expose()
    def get_modal_edit_person_contact(self, *args, **kwargs):
        html = COMMON.get_modal_edit_person_contact(**kwargs)
        javascript = """
        <script nonce='1234'>
            setFormValidation('#form_edit_contact');
            $('#save_edit_contact').click(function(){
                var valid = FormIsValid("#form_edit_contact");
                if(valid){
                    var formserial = $('#form_edit_contact').serialize();
                    $.post('/members/save_edit_member_contact?', formserial, function(data){
                        var result = JSON.parse(data);
                        if(result.success === true){
                            $('#dialog_edit_contact').modal('hide');
                            $.redirect('/members/edit_member', result);
                        };
                        return false;
                    });
                }
            });
            $('.contact_edit_back').click(function(){
                $('#dialog_edit_contact').modal('hide');
            });
            $('#dialog_edit_contact').modal();
        </script>
        """
        return html + javascript

    @expose()
    def save_new_member_contact(self, *args, **kwargs):
        entity_person_id = kwargs.get('entity_person_id')
        COMMON.save_new_member_contact(**kwargs)
        redirect_url = '/members/edit_member'
        return json.dumps({'success': True, 'entity_person_id': entity_person_id, 'redirect': redirect_url})

    @expose()
    def save_edit_member_contact(self, *args, **kwargs):
        person_id = kwargs.get('person_id')
        entity_person_id = kwargs.get('entity_person_id')
        COMMON.save_edit_member_contact(**kwargs)
        redirect_url = '/members/edit_member'
        return json.dumps({'success': True, 'entity_person_id': entity_person_id, 'redirect': redirect_url})
