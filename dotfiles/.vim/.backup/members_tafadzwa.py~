#!/bin/python
# -*- coding: utf-8 -*-
"""Member controller module"""
from rocket.lib.call_center import *
from tg import predicates, require
from tg import expose, redirect, validate, flash, url, request

from tg.i18n import ugettext as _
from tg.i18n import lazy_ugettext as l_

from rocket.model import *

from sqlalchemy import func, desc, asc

from rocket.lib.tg_utils import *
from rocket.lib.base import BaseController
from rocket.lib.type_utils import TypeDictionary as TypeDict
from rocket.lib.rsa_luhn_id_algo import get_rsa_id_dict
from rocket.controllers.common import CommonController

import rocket.lib.vault_utils as vault
from rocket.controllers.message import MessageController

LIMIT = 20
TYPEUTIL = TypeDict()
COMMON = CommonController()
MESSAGE = MessageController()

SEARCHKEY_FAMILY_MEMBER = 'FamilyMember_SearchKeyword'
SEARCHKEY_CONTACT = 'Contact_SearchKeyword'

IMG_ACTIVE = "<img src='/images/icon_check.png' />"
IMG_INACTIVE = "<img src='/images/icon_cross.png' />"

class MemberController(BaseController):

    @require(predicates.not_anonymous())
    @expose('rocket.templates.generic')
    def index(self, *args, **kwargs):
        #self.fake_member_maker()
        html = self.get_active_member_html(*args, **kwargs)
        javascript = self.get_javascript_member_onload()
        title = _("Members")
        return dict(title=title, html=html, javascript=javascript)

    def fake_member_maker(self, *args, **kwargs):
        kwargs = {
            'person_title_type_id' : '1',
            'name' : 'Camilla',
            'surname' : 'Buys',
            'person_gender_type_id' : '1',
            'date_of_birth' : '30-11-1989',
            'language_id' : '117',
            'identity_type_id' : '1',
            'number' : '8911300094083',
            'mobile' : '0737034769',
        }
        return self.save_new_memberobj(**kwargs)

    @expose()
    def get_active_member_html(self, *args, **kwargs):
        usernow = request.identity.get('user', None)
        membertable = self.get_member_html_table(**kwargs)
        html = f"""
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header">
                        <div class="row d-flex">
                            <div class="col-md-6">
                                <h4 class="card-title">{_('Members')}</h4>
                            </div>
                            <div class="col-md-6 text-right">
                                <button id="create_new_member" class="btn btn-primary ml-auto">{_('Create New Member')}</button>
                            </div>
                        </div>
                        <div class="row d-flex align-items-center">
                            <div class="col-md-4">
                                <input type="text" class="form-control search" name="searchphrase" placeholder="{_('Search by ID Number, Name or Surname')}">
                            </div>
                            <div class="col-md-4">
                                <button class="btn btn-primary action_search">{_('Search')}</button>
                                <button class="btn btn-primary">{_('Reset')}</button>
                            </div>
                        </div>
                        <hr>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            {membertable}
                        </div>
                    </div>
                </div>
            </div>
        </div>
        """
        return html

    @expose()
    def get_member_html_table(self, *args, **kwargs):
        outputlist = []
        dbase_query = EntityPerson.get_limit(LIMIT, 'person_id')
        for entity_person in dbase_query:

            personobj = vault.get_personobj_by_id(entity_person.person_id)
            if not personobj:
                continue

            person = personobj.get('person', {})
            if not person:
                continue

            identity_type = None
            identity_number = None
            identitylist = personobj.get('identities', [])
            if len(identitylist) >= 1:
                identity_number = identitylist[0].get('number', None)
                identity_type_id = identitylist[0].get('identity_type_id', None)
                if identity_type_id:
                    identity_type = TYPEUTIL.get_pretty_name('person_identity_type', identity_type_id)

            mobile = None
            contactlist = personobj.get('contacts', [])
            if len(contactlist) >= 1:
                mobile = contactlist[0].get('value', None)

            outputlist.append({
                'idnumber': f"<div class='member_edit' entity_person_id='{entity_person.id}'>{identity_number}</div>",
                'id_type': identity_type,
                'name': person.get('firstname', ''),
                'surname': person.get('surname', ''),
                'mobile': mobile,
                             })
        dbcolumnlist=[
                'idnumber',
                'id_type',
                'name',
                'surname',
                'mobile',
                    ]
        theadlist=[
                _('ID Number'),
                _('Identity Type'),
                _('First Name'),
                _('Surname'),
                _('Mobile Number'),
                ]
        tdclasslist = [
                'action_link',
                '',
                '',
                '',
                'text-right',
        ]
        return build_html_table(outputlist, dbcolumnlist, theadlist, "member_table", tdclasslist)

    @expose()
    def get_javascript_member_onload(self, *args, **kwargs):
        javascript = """
        $("#create_new_member").click(function(){
            $.redirect('/members/new_member');
        });
        $(".member_edit").click(function(){
            var data = {entity_person_id : $(this).attr('entity_person_id')};
            $.redirect('/members/edit_member', data);
        });
        """
        return javascript

    @expose('rocket.templates.generic')
    def new_member(self, *args, **kwargs):
        card_title = _("New Member")
        back_button = _('Back to Members')
        back_button = f"""
        <div class="col-md-6 text-right">
            <button class="btn btn-primary ml-auto action_back members_back">{back_button}</button>
        </div>
        """
        kwargs['card_title'] =card_title
        kwargs['back_button'] =back_button
        html = COMMON.get_new_person_html(**kwargs)
        html += f"""
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-body">
                        <button id="btn_save_new_member" class="btn btn-primary">Save</button>
                        <button class="btn btn-outline-primary members_back">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
        """
        javascript = """
            createDatepicker('#date_of_birth');
            createDatepicker('#register_date');
            setFormValidation('#form_new_member');

            $('#number').change(function(){
                var kwargs = 'identity_type_id=' + $('#identity_type_id option:selected').val()
                kwargs += '&value=' + $(this).val();
                $.post('/members/check_identity_number?', kwargs, function(data){
                    var result = JSON.parse(data);
                    if(result.success === true){
                        $('#date_of_birth').val(result.date_of_birth);
                        $('#person_gender_type_id option:selected').val(result.gender);
                    };
                    return false;
                });
            });

            $('#btn_save_new_member').click(function(){
                var valid = FormIsValid("#form_new_member");
                if(valid){
                    var formserial = $('#form_new_member').serialize();
                    console.log(formserial);

                    $.post('/members/save_new_memberobj?', formserial, function(data){
                        var result = JSON.parse(data);
                  
                        if(result.success){
                           if(result.beneficiary_member_url !=null){
                            $.redirect(result.beneficiary_member_url, result);
                           }
                           else{
                              $.redirect(result.redirect, result);
                           }
                      
                        };
                        return false;
                    });
                }
            });
            $('.members_back').click(function(){
                $.redirect('/members/index');
            });
        """
        return dict(title=card_title, html=html, javascript=javascript)

    @expose()
    def check_identity_number(self, *args, **kwargs):
        outputdict = {'success' : False}
        identity_type_id = kwargs.get('identity_type_id', None)
        if not identity_type_id:
            return json.dumps(outputdict)

        identity_number = TYPEUTIL.get_id_of_name('person_identity_type', 'identity_number')
        if not identity_number == int(identity_type_id):
            return json.dumps(outputdict)

        value = kwargs.get('value', None)

        result = get_rsa_id_dict(value)
        success = result.get('luhn_check', False)
        if not success:
            return json.dumps(outputdict)

        date_of_birth = result.get('dob', None)
        date_of_birth = datetime.strftime(date_of_birth, '%d-%m-%Y')

        outputdict['success'] = True
        outputdict['date_of_birth'] = date_of_birth
        outputdict['gender'] = result.get('gender', 'Unknown')
        return json.dumps(outputdict)

    @expose()
    def save_new_memberobj(self, *args, **kwargs):
        entity_id = COMMON.save_new_personobj(**kwargs)
        if not entity_id:
            return json.dumps({'success': False, 'message': 'Member creation failed.'})

        entity_person = EntityPerson.by_attr_first('entity_id', entity_id)
        if not entity_person:
            return json.dumps({'success': False, 'message': 'Could not retrieve Person.'})

        entity_person_id = kwargs.get('entity_person_id', None)
        beneficiary_member_url = kwargs.get('beneficiary_member_url', None)

        outputdict = {'success': True}
        outputdict['entity_person_id'] = entity_person_id
        outputdict['beneficiary_member_url'] = beneficiary_member_url
        outputdict['family_member_entity_person_id'] = entity_person.id
        outputdict['redirect'] = '/members/edit_member'
        return json.dumps(outputdict)

    @require(predicates.not_anonymous())
    @expose('rocket.templates.generic')
    def edit_member(self, *args, **kwargs):
        entity_person_id = kwargs.get('entity_person_id', None)

        if not entity_person_id:
            redirect('/members/new_member')

        entity_person = EntityPerson.by_id(entity_person_id)
        try:
            personobj = vault.get_personobj_by_id(entity_person.person_id)
        except:
            redirect('/members/new_member')

        person_vault = personobj.get('person', {})
        kwargs["person_vault"] = personobj
        kwargs["person_id"] = entity_person.person_id

        title =f"""Edit Member: {person_vault.get('firstname', '')}"""
        html = self.get_edit_person_html(**kwargs)
        javascript = self.get_javascript_edit_member_onload()
        return dict(title=title, html=html, javascript=javascript)

    def get_javascript_edit_member_onload(self, *args, **kwargs):
        javascript ="""
            createDatepicker('#date_of_birth');
            setFormValidation('#form_edit_member');
            setFormValidation('#form_member_bank');

            $('#number').change(function(){
                var kwargs = 'identity_type_id=' + $('#identity_type_id option:selected').val()
                kwargs += '&value=' + $(this).val();
                $.post('/members/check_identity_number?', kwargs, function(data){
                    var result = JSON.parse(data);
                    if(result.success === true){
                        $('#date_of_birth').val(result.date_of_birth);
                        $('#person_gender_type_id option:selected').val(result.gender);
                    };
                    return false;
                });
            });

            $('#btn_save_edit_member').click(function(){
                var valid = FormIsValid("#form_edit_member");
                if(valid){
                    var formserial = $('#form_edit_member').serialize();
                    $.post('/members/save_edit_memberobj?', formserial, function(data){
                        var result = JSON.parse(data);
                        if(result.success === true){
                            $.redirect(result.redirect, {'entity_person_id' : result.entity_person_id});
                        } else {
                            showNotification(result.status, result.data);
                        };
                        return false;
                    });
                }
            });
            $("#region_id").change(function () {
                var region_id = $('#region_id option:selected').val();
                var kwargs = {'region_id': region_id, };
                $('#div_district').load('/members/get_district_html?', kwargs, function(data){
                    return false;
                });
            });
            $("#region_id").trigger('change');
            $("#create_new_contact").click(function(){
                var kwargs = {entity_person_id : $(this).attr('entity_person_id')};
                 $('#dialogdiv').load('/members/get_modal_new_person_contact?', kwargs, function(data){
                    return false;
                 });
            });         
            $("#create_new_message").click(function(){
                var kwargs = {contact_id : $(this).attr('contact_id'), entity_person_id : $(this).attr('entity_person_id') , entity_id : $(this).attr('entity_id')};
                 $('#dialogdiv').load('/members/get_modal_new_message?', kwargs, function(data){
                    return false;
                 });
            });
            $(".edit_contact").click(function(){
                var kwargs = {contact_id : $(this).attr('contact_id'), entity_person_id : $(this).attr('entity_person_id') , entity_id : $(this).attr('entity_id')};
                $('#dialogdiv').load('/members/get_modal_edit_person_contact?', kwargs, function(data){
                    return false;
                });
            });
            $(".send_message").click(function(){
                var kwargs = {contact_id : $(this).attr('contact_id'),contact_value : $(this).attr('contact_value'), entity_person_id : $(this).attr('entity_person_id') , contact_type : $(this).attr('contact_type') , entity_id : $(this).attr('entity_id')};
                console.log(kwargs);
                $('#dialogdiv').load('/members/get_modal_new_message?', kwargs, function(data){
                    return false;
                });
            }); 
            $(".send_email").click(function(){
                var kwargs = {contact_id : $(this).attr('contact_id'),contact_value : $(this).attr('contact_value'), entity_person_id : $(this).attr('entity_person_id') , entity_id : $(this).attr('entity_id')};
                $('#dialogdiv').load('/members/get_modal_email_message?', kwargs, function(data){
                    return false;
                });
            });

        """
        return javascript

    def get_edit_person_html(self, *args, **kwargs):
        card_header = self.get_edit_member_card_title_html(**kwargs)
        card_member_details = COMMON.get_edit_person_html(**kwargs)
        card_member_contact = COMMON.get_edit_member_contact_html(**kwargs)
        card_member_address = COMMON.get_person_address_html(**kwargs)
        card_member_bank = COMMON.get_edit_member_bank_html(**kwargs)
        card_member_family_details = self.get_edit_member_family_html(**kwargs)

        html = f"""
        {card_header}
        <div class="row">
            <div class="col-md-12 ml-auto mr-auto">
                <div class="col-md-12 ml-auto mr-auto">
                    {card_member_details}
                    {card_member_contact}
                    {card_member_address}
                    {card_member_bank}
                    {card_member_family_details}
                </div>
            </div>

        </div>
        """
        return html

    def get_edit_member_card_title_html(self, *args, **kwargs):
        person_vault = kwargs.get('person_vault')
        person = person_vault.get("person", None)
        if not person_vault: return ''
        html = f"""
          <div class="col-md-12">
              <div class="card">
                  <div class="card-header">
                      <div class="row d-flex">
                          <div class="col-md-8">
                              <h4 class="card-title">Edit Member: {person.get('firstname', '')} </h4>
                          </div>
                          <div class="col-md-4 text-right">
                              <button class="btn btn-primary ml-auto members_back">Back to Members</button>
                          </div>
                      </div>
                      <div class="row d-flex">
                          <div class="col-md-12">
                              <hr>
                          </div>
                      </div>
                  </div>
              </div>
          </div>
          """
        javascript = """
        <script>
            $('.members_back').click(function(){
                $.redirect('/members/index');
            });
        </script>
        """
        return html + javascript

    @expose()
    def save_edit_memberobj(self, *args, **kwargs):
        success = COMMON.save_edit_personobj(**kwargs)
        if not success: return json.dumps({'success': False, 'data': 'Member update failed.', 'status': 'danger'})
        entity_person_id = kwargs.get('entity_person_id', None)
        if not entity_person_id: return json.dumps({'success': False, 'data': 'Missing person_id.', 'status': 'danger'})
        return json.dumps({'success': True, 'entity_person_id': entity_person_id, \
                'redirect': '/members/edit_member', 'data': \
                'Member saved successsfully.', 'status': 'success'})

###############################################################################
# Member Family List
###############################################################################

    @expose()
    def get_edit_member_family_html(self, *args, **kwargs):
        entity_person_id = kwargs.get('entity_person_id', None)
        family_member_entity_person_id = kwargs.get('family_member_entity_person_id', '')

        dbase_query = DBSession.query(MemberFamily). \
            filter(MemberFamily.member_id == entity_person_id). \
            order_by(asc(MemberFamily.relationship_type_id)). \
            limit(LIMIT)

        img_active = "<img src='/images/icon_check.png' />"
        img_inactive = "<img src='/images/icon_cross.png' />"

        outputlist = []
        for item in dbase_query:
            active = img_active
            relationship =BenefitInsuredLifeRelationshipType.by_attr_first('id', item.relationship_type_id)
            personobj = vault.get_personobj_by_id(item.family_member_id)
            if not personobj:
                continue
            person = personobj.get('person', {})
            if not person:
                continue
            if not item.active:
                active = img_inactive

            outputlist.append({
                'added': f"<div class='member_family_edit' family_member_id='{item.id}' entity_person_id='{entity_person_id}'>{item.added}</div>",
                'relationship': relationship.name,
                'active': active,
                'name': person.get('firstname', ''),
                'surname': person.get('surname', ''),
            })
        dbcolumnlist = [
            'added',
            'relationship',
            'active',
            'name',
            'surname'
        ]
        theadlist = [
            'Added',
            'Relationship Type',
            'Active',
            'Name',
            'Surname'
        ]
        tdclasslist = [
            'action_link',
            'text-center',
            'text-center',
            'text-center',
            'text-center',
        ]

        family_member_itemtable = build_html_table(outputlist, dbcolumnlist, theadlist, "rate_table_line_item_table", tdclasslist)

        html = f"""
       <div id= "div_family_member_table">
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                <div class="card-header">
                    <div class="row d-flex">
                        <div class="col-md-6">
                            <h4 class="card-title">{_('Family Members')}</h4>
                        </div>
                        <div class="col-md-6 text-right">
                            <button id="create_new_member_family" entity_person_id={entity_person_id} family_member_entity_person_id='{family_member_entity_person_id}' class="btn btn-primary ml-auto">{_('New Family Member')}</button>
                        </div>
                    </div>
                    <hr>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        {family_member_itemtable}
                    </div>
                </div>
                </div>
            </div>
        </div>
        """
        javascript = """
        <script>
             var family_member_entity_person_id = $('#create_new_member_family').attr('family_member_entity_person_id');
            $(".member_family_edit").click(function(){
                var kwargs = 'family_member_id='+$(this).attr('family_member_id');
                kwargs += '&entity_person_id='+$(this).attr('entity_person_id');
                $('#dialogdiv').load('/members/get_modal_edit_family_member?', kwargs, function(data){
                   return false;
                });
            });
            $("#create_new_member_family").click(function(){
               var kwargs = {
                    'entity_person_id': $(this).attr('entity_person_id'),
                    'family_member_entity_person_id' : family_member_entity_person_id,
                };
                
                $('#dialogdiv').load('/members/get_modal_new_member_family?', kwargs, function(data){
                    return false;
                });
            });
            if(family_member_entity_person_id){
                $('#create_new_member_family').trigger('click');
            };
        </script>
        """
        return html + javascript

    @expose()
    def get_modal_new_member_family(self, *args, **kwargs):
        kwargs['searchkey'] = SEARCHKEY_FAMILY_MEMBER
        entity_person_id = kwargs.get('entity_person_id', None)
        searchphrase = COMMON.get_searchphrase(**kwargs)
        family_member_entity_person_id = kwargs.get('family_member_entity_person_id', None)
        html = f"""
            <div class="modal fade" id="dialog_new_member_family" tabindex="-1" role="dialog" aria-labelledby="mybank_branchLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <div class="col-md-12">
                                <h4 class="card-title">Family Member</h4>
                            </div>
                        </div>
                        <div class="modal-body">
                            <form id='form_new_family_member'>
                            <input type="hidden" id="entity_person_id" name="entity_person_id" class="form-control" value="{entity_person_id}"/>
                                <div class="col-md-12">
                            <div class="row">
                           <label class="col-md-3 col-form-label" required for="family_member_id">Family Member</label>
                            <div class="col-md-6">
                                <input type="text" class="form-control search" name="searchphrase" required id='searchphrase'  value='{searchphrase}' placeholder="Search by Identity Number">
                            </div>
                            <div class="col-md-3">
                               <div class="row">
                               <button type="button" class="btn btn-primary" entity_person_id={entity_person_id} family_member_entity_person_id='{family_member_entity_person_id}' id='action_search_member'>Search</button>
                                <button class="btn btn-primary"  type="button" id='btn_reset'>Reset</button></div>
                            </div>
                        </div>
                            </div>
                            <div id="family_member_details"></div>

                            </form>
                        </div>
                        <div class="modal-footer">
                            <button id='save_new_family_member' class="btn btn-primary">Save</button>
                            <button class="btn btn-outline-primary family_member_back" data-dismiss="modal">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
        """
        javascript = """
           <script>
             setFormValidation('#form_new_family_member');
            $('#save_new_family_member').click(function(){
                 var valid = FormIsValid("#form_new_family_member");
                 if(valid){
                    var formserial = getFormData('#form_new_family_member');
                    var data = {data : JSON.stringify(formserial)};
                    $.post('/members/save_new_family_member?', data, function(data){
                        var result = JSON.parse(data);
                        if(result.success){
                            var kwargs = '&entity_person_id='+$('#action_search_member').attr('entity_person_id');
                            $('#dialog_new_member_family').modal('hide');
                            $('#div_family_member_table').load('/members/get_edit_member_family_html?', kwargs, function(data){
                                 return false;
                            });
                        };
                         showNotification(result.status, result.data);
                        return false;
                    });
                 }
            });

           $('.family_member_back').click(function(){
               $('#dialog_new_member_family').modal('hide');
           });
           $('#dialog_new_member_family').modal();

            $('#action_search_member').click(function(){
                var kwargs = 'searchphrase='+$('#searchphrase').val();
                kwargs += '&entity_person_id='+$(this).attr('entity_person_id');
                $.post('/members/search_family_member?', kwargs, function(data){
                    var result = JSON.parse(data);
                       if(result.success === true){
                            $('#family_member_details').load('/members/get_search_family_member_details?', result, function(data){
                                 return false;
                            });
                        } else {
                         showNotification(result.status, result.data);
                         $.redirect('/members/new_member?', result);
                        };

                    return false;
                });
                })

                $('#btn_reset').click(function(){
                    $('#searchphrase').val('').focus();
                    $('#family_member_details').empty();
                 })

                 var family_member_entity_person_id = $('#action_search_member').attr('family_member_entity_person_id');
                 if(family_member_entity_person_id){
                    $('#action_search_member').trigger('click');
                 };
                   </script>
                   """
        return html + javascript

    @expose()
    def get_modal_new_message(self, *args, **kwargs):
        entity_person_id = kwargs.get('entity_person_id')
        entity_id = kwargs.get('entity_id')
        contact_id = kwargs.get('contact_id')
        contact_value = kwargs.get('contact_value')
        contact_type = kwargs.get('contact_type')

        html = f"""
            <div class="modal fade" id="dialog_new_message" tabindex="-1" role="dialog" aria-labelledby="mybank_branchLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <div class="col-md-12">
                                <h4 class="card-title">New {contact_type} Message</h4>
                            </div>
                        </div>
                        <div class="modal-body">
                            <form id='form_new_message'>
                              <input id="entity_person_id"  type="hidden"  name="entity_person_id" value="{entity_person_id}" class="form-control" required='true'>
                              <input id="entity_id" type="hidden"  name="entity_id" value="{entity_id}" class="form-control" required='true'>
                              <input id="contact_type"  type="hidden"  name="contact_type" value="{contact_type}" class="form-control" required='true'> 
                              <input id="contact_value"  type="hidden"  name="contact_value" value="{contact_value}"  class="form-control" required='true'>
                              <div class="col-md-12">
                                  <div class="form-group row">
                                     <label class="col-md-3 col-form-label" required for="debit_account">Mobile Number</label>
                                     <div class="col-md-9">
                                       <input id="" type="text" name="" value="{contact_value}" class="form-control" disabled required='true'>
                                    </div>
                                 </div>
                              </div>
                                <div class="col-md-12">
                                   <div class="form-group row">
                                       <label class="col-md-3 col-form-label">Message</label>
                                       <div class="col-md-9">
                                            <textarea name='message' type="text" class="form-control" rows="2" maxlength='160'></textarea>
                                       </div>
                                   </div>
                                 </div>
                            </form>
                        </div>
                        <div class="modal-footer">
                            <button id='save_new_message' class="btn btn-primary">Save</button>
                            <button class="btn btn-outline-primary new_message_back" data-dismiss="modal">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
        """
        javascript = """
          <script>
            setFormValidation('#form_new_message');
            
            $('#save_new_message').click(function(){
                 var valid = FormIsValid("#form_new_message");
                 if(valid){
                    var formserial = getFormData('#form_new_message');
                    var data = {data : JSON.stringify(formserial)};
                
                    $.post('/members/send_new_message?', data, function(data){
                      var result = JSON.parse(data);
                      if(result.success){
                          $('#dialog_new_message').modal('hide');
                        };
                        showNotification(result.status, result.data);
                        return false;
                    });
                 }
            });
          $('.new_message_back').click(function(){
                $('#dialog_new_message').modal('hide');
            });
            
          $('#dialog_new_message').modal();
          </script>
         """
        return html + javascript

    @expose()
    def get_modal_email_message(self, *args, **kwargs):
        entity_person_id = kwargs.get('entity_person_id')
        entity_id = kwargs.get('entity_id')
        contact_id = kwargs.get('contact_id')
        contact_value = kwargs.get('contact_value')

        html = f"""
              <div class="modal fade" id="dialog_mail_message" tabindex="-1" role="dialog" aria-labelledby="mybank_branchLabel" aria-hidden="true">
                  <div class="modal-dialog modal-dialog-centered modal-lg">
                      <div class="modal-content">
                          <div class="modal-header">
                              <div class="col-md-12">
                                  <h4 class="card-title">New Mail</h4>
                              </div>
                          </div>
                          <div class="modal-body">
                              <form id='form_new_email'>
                                <input id="entity_person_id"  type="hidden"  name="entity_person_id" value="{entity_person_id}" class="form-control" required='true'>
                                <input id="entity_id" type="hidden"  name="entity_id" value="{entity_id}" class="form-control" required='true'>
                                <input id="contact_value"  type="hidden"  name="contact_value" value="{contact_value}"  class="form-control" required='true'>
                                <div class="col-md-12">
                                    <div class="form-group row">
                                       <label class="col-md-3 col-form-label" required for="debit_account">To Email</label>
                                       <div class="col-md-9">
                                         <input id="" type="text" name="" value="{contact_value}" class="form-control" disabled required='true'>
                                      </div>
                                   </div>
                                </div>   
                                 <div class="col-md-12">
                                    <div class="form-group row">
                                       <label class="col-md-3 col-form-label" required for="debit_account">Subject</label>
                                       <div class="col-md-9">
                                         <input id="" type="text" name="subject"  id="subject" class="form-control" required='true'>
                                      </div>
                                   </div>
                                </div>
                                  <div class="col-md-12">
                                     <div class="form-group row">
                                         <label class="col-md-3 col-form-label">Message</label>
                                         <div class="col-md-9">
                                              <textarea name='message' type="text" class="form-control" rows="2" maxlength='160'></textarea>
                                         </div>
                                     </div>
                                   </div>
                              </form>
                          </div>
                          <div class="modal-footer">
                              <button id='save_mail_message' class="btn btn-primary">Save</button>
                              <button class="btn btn-outline-primary new_message_back" data-dismiss="modal">Cancel</button>
                          </div>
                      </div>
                  </div>
              </div>
          """
        javascript = """
            <script>
                  setFormValidation('#form_new_email');
            
            $('#save_mail_message').click(function(){
                 var valid = FormIsValid("#form_new_email");
                 if(valid){
                    var formserial = getFormData('#form_new_email');
                    var data = {data : JSON.stringify(formserial)};
                
                    $.post('/members/send_new_email?', data, function(data){
                      var result = JSON.parse(data);
                      if(result.success){
                          $('#dialog_mail_message').modal('hide');
                        };
                        showNotification(result.status, result.data);
                        return false;
                    });
                 }
            });
            $('.save_mail_message').click(function(){
                  $('#dialog_mail_message').modal('hide');
              });

            $('#dialog_mail_message').modal();
            </script>
           """
        return html + javascript

    @expose()
    def get_search_family_member_details(self, *args, **kwargs):
        surname = kwargs.get('surname', None)
        firstname = kwargs.get('firstname', None)
        family_member_id = kwargs.get('family_member_id', None)
        selectbox_relationship_type = COMMON.get_selectbox_family_relationship_type()
        html = f"""
            <div class="col-md-12">
                <div class="form-group row">
                    <label class="col-md-3 col-form-label" required>{_('Family Details')}</label>
                    <label class="col-md-9 col-form-label">{firstname + "  "+ surname}</label>
                </div>
            </div>
                <input type="hidden" id="family_member_id" name="family_member_id" value={family_member_id} class="form-control"/>
             <div class="col-md-12">
                <div class="form-group row">
                    <label class="col-md-3 col-form-label" required>{_('Relationship Type')}</label>
                       <div class="col-md-9">
                           {selectbox_relationship_type}
                        </div>
                 </div>
            </div>
         """
        return html


    @expose()
    def search_family_member(self, *args, **kwargs):
        kwargs['searchkey'] = SEARCHKEY_FAMILY_MEMBER
        search_family_member = COMMON.search_family_member(**kwargs)
        return  search_family_member


    @expose()
    def send_new_email(self, *args, **kwargs):
        data = json.loads(kwargs.get('data', json.dumps({})))
        outputdict = {'success': False}

        if not data:
            return json.dumps({'success': False, 'data': 'No data provided', 'status': 'danger'})
        email_address = data.get('contact_value')
        message = data.get('message')
        subject = data.get('subject')
        message_dict = {
            'message': message,
            'email_address': email_address,
            'subject' :subject
        }
        send_message = COMMON.send_email(**message_dict)

        if(send_message):
            outputdict['success'] = True
            outputdict['data'] = 'Email successfully sent.'
            outputdict['status'] = 'success'
            return json.dumps(outputdict)

        return json.dumps({'success': False, 'data': 'Failed to send email', 'status': 'danger'})

    @expose()
    def send_new_message(self, *args, **kwargs):
        data = json.loads(kwargs.get('data', json.dumps({})))
        outputdict = {'success': False}
        if not data:
            return json.dumps({'success': False, 'data': 'No data provided', 'status': 'danger'})
        usernow = request.identity.get('user', None)
        contact_id = data.get('contact_id')
        contact_value = data.get('contact_value')
        contact_type = data.get('contact_type')
        message = data.get('message')
        message_dict = {
            'message': message,
            'mobile_number': contact_value
        }

        if contact_type == "Sms":
            send_sms = MESSAGE.sms(**message_dict)
            if not send_sms:
                outputdict['success'] = True
                outputdict['data'] = 'Sending Sms failed.'
                outputdict['status'] = 'danger'
                return json.dumps(outputdict)

            outputdict['success'] = True
            outputdict['data'] = 'Sms successfully sent.'
            outputdict['status'] = 'success'
            return json.dumps(outputdict)

        if contact_type == "Whatsapp":

            send_whatspp = MESSAGE.whatsapp(**message_dict)
            if not send_whatspp:
                outputdict['success'] = True
                outputdict['data'] = 'Sending Sms failed.'
                outputdict['status'] = 'danger'
                return json.dumps(outputdict)

            outputdict['success'] = True
            outputdict['data'] = 'WhatsApp message successfully sent.'
            outputdict['status'] = 'success'
            return json.dumps(outputdict)

        return json.dumps(outputdict)

    @expose()
    def save_new_family_member(self, *args, **kwargs):
        data = json.loads(kwargs.get('data', json.dumps({})))

        if not data:
            return json.dumps({'success': False, 'data': 'No data provided', 'status': 'danger'})
        usernow = request.identity.get('user', None)
        entity_person_id = data.get('entity_person_id', None)
        relationship_type_id = data.get('relationship_type_id', None)
        family_member_id = data.get('family_member_id', None)

        # exists = DBSession.query(MemberFamily).\
        #     filter(MemberFamily.family_member_id==family_member_id).\
        #     filter(MemberFamily.active== True).\
        #     first()
        # if exists: return json.dumps({'success': False, 'data': 'User already in the list', 'status': 'danger'})

        this = MemberFamily()
        this.member_id = entity_person_id
        this.family_member_id = family_member_id
        this.relationship_type_id = relationship_type_id
        this.added_by = usernow.id
        DBSession.add(this)
        DBSession.flush()
        return json.dumps({'success': True, 'entity_person_id': entity_person_id})

    @expose()
    def get_modal_edit_family_member(self, *args, **kwargs):
        entity_person_id = kwargs.get('entity_person_id')
        family_id = kwargs.get('family_member_id')
        this = MemberFamily.by_id(family_id)
        if not this: return ''
        active = this.active
        relationship_type_id = this.relationship_type_id
        checked = 'checked' if active else ''
        dropdown_family_type = COMMON.get_selectbox_family_relationship_type(**{'selected': relationship_type_id})

        html = f"""
           <div class="modal fade" id="dialog_edit_family_member" tabindex="-1" role="dialog" aria-labelledby="mytbl_system_documentLabel" aria-hidden="true">
               <div class="modal-dialog modal-dialog-centered modal-lg">
                   <div class="modal-content">
                       <div class="modal-header">
                           <div class="col-md-6">
                               <h4 class="card-title">Edit Relationship Type</h4>
                           </div>
                       </div>
                       <div class="modal-body">
                           <form id='form_edit_contact'>
                               <div style='display: none' class="col-md-12">
                                   <div class="form-group row">
                                       <label class="col-md-3 col-form-label" required for="organisation_id">Id</label>
                                       <div class="col-md-9">
                                           <input id="entity_person_id" type="text" name="entity_person_id" value="{entity_person_id}" class="form-control" required='true'>
                                           <input id="family_id" type="text" name="family_id" value="{family_id}" class="form-control" required='true'>
                                       </div>
                                   </div>
                               </div>
                               <div class="col-md-12">
                                   <div class="form-group row">
                                       <label class="col-md-4 col-form-label" required for="code">{_('Relationship Type ')}</label>
                                       <div class="col-md-8">
                                           {dropdown_family_type}
                                       </div>
                                   </div>
                               </div>
                               <div class="col-md-12">
                                   <div class="form-group row">
                                       <label class="col-4 col-form-label" for="active" required>Active</label>
                                       <div class="col-8">
                                           <div class="form-check">
                                               <label class="form-check-label">
                                                   <input class="form-check-input" type="checkbox" name="active" id="active" {checked}/>
                                                   <span class="form-check-sign"></span>
                                               </label>
                                           </div>
                                       </div>
                                   </div>
                               </div>
                           </form>
                       </div>
                       <div class="modal-footer">
                           <button id='family_edit_save' class="btn btn-primary">Save</button>
                           <button class="btn btn-outline-primary edit_family_back ">Cancel</button>
                       </div>
                   </div>
               </div>
           </div>
           """
        javascript = """
             <script>    
                     $('.edit_family_back').click(function(){
                         $('#dialog_edit_family_member').modal('hide');
                     });
                     $('#dialog_edit_family_member').modal();
                     </script>
                     """
        return html + javascript

###############################################################################
# Pass throughs to common controller
###############################################################################

    @expose()
    def get_selectbox_bank_branch(self, *args, **kwargs):
        return COMMON.get_selectbox_bank_branch(**kwargs)

    @expose()
    def save_person_bank_account(self, *args, **kwargs):
        return COMMON.save_person_bank_account(**kwargs)

    @expose()
    def get_modal_new_person_contact(self, *args, **kwargs):
        html = COMMON.get_modal_new_person_contact(**kwargs)
        javascript = """
        <script>
            setFormValidation('#form_new_contact');
            $('#save_new_contact').click(function(){
                 var valid = FormIsValid("#form_new_contact");
                 if(valid){
                  var formserial = $('#form_new_contact').serialize();
                    $.post('/members/save_new_member_contact?', formserial, function(data){
                        var result = JSON.parse(data);
                        if(result.success === true){
                            $('#dialog_new_contact').modal('hide');
                            $('#div_contact_table').load('/members/get_edit_member_contact_html?', result, function(data){
                                 return false;
                            });
                        };
                        return false;
                    });
                 }
            });
        </script>
        """
        return html+javascript

    @expose()
    def get_modal_edit_person_contact(self, *args, **kwargs):
        html = COMMON.get_modal_edit_person_contact(**kwargs)
        javascript = """
        <script>
            setFormValidation('#form_edit_contact');
            $('#save_edit_contact').click(function(){
                var valid = FormIsValid("#form_edit_contact");
                if(valid){
                    var formserial = $('#form_edit_contact').serialize();
                    $.post('/members/save_edit_member_contact?', formserial, function(data){
                        var result = JSON.parse(data);
                        if(result.success === true){
                            $('#dialog_edit_contact').modal('hide');
                            $('#div_contact_table').load('/members/get_edit_member_contact_html?', result, function(data){
                                 return false;
                            });
                        };
                        return false;
                    });
                }
            });
            $('.contact_edit_back').click(function(){
                $('#dialog_edit_contact').modal('hide');
            });
            $('#dialog_edit_contact').modal();
        </script>
        """
        return html + javascript

    @expose()
    def save_new_member_contact(self, *args, **kwargs):
        entity_person_id = kwargs.get('entity_person_id')
        COMMON.save_new_member_contact(**kwargs)
        redirect_url = '/members/edit_member'
        return json.dumps({'success': True, 'entity_person_id': entity_person_id, 'redirect': redirect_url})

    @expose()
    def save_edit_member_contact(self, *args, **kwargs):
        person_id = kwargs.get('person_id')
        entity_person_id = kwargs.get('entity_person_id')
        COMMON.save_edit_member_contact(**kwargs)
        redirect_url = '/members/edit_member'
        return json.dumps({'success': True, 'entity_person_id': entity_person_id, 'redirect': redirect_url})
