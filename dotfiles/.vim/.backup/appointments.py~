# -*- coding: utf-8 -*-
"""AppointmentController module"""

from tg import predicates, require, expose, request, redirect
from rocket.controllers.common import CommonController
from tg.i18n import ugettext as _
from tg.i18n import lazy_ugettext as l_

from rocket.model import *

from rocket.lib.tg_utils import *
from rocket.lib.base import BaseController
from sqlalchemy import func, desc, asc, or_
from rocket.lib.type_utils import TypeDictionary as TypeDict

COMMON = CommonController()
LIMIT = 20
SEARCH_APPOINTMENT = 'Appointment_SearchKeyword'
IMG_ACTIVE = "<img src='/images/icon_check.png' />"
IMG_INACTIVE = "<img src='/images/icon_cross.png' />"
TYPEUTIL = TypeDict()


class AppointmentController(BaseController):

    @expose()
    def _default(self, *args, **kwargs):
        return 'This page is not available.'

    @require(predicates.not_anonymous())
    @expose('rocket.templates.generic')
    def index(self, *args, **kwargs):
        title = _("Appointments")
        html = self.get_active_user_appointment_html(*args, **kwargs)
        javascript = self.get_javascript_user_appointment_onload()
        return dict(title=title, html=html, javascript=javascript)

    @expose()
    def get_active_user_appointment_html(self, *args, **kwargs):
        dbase_query = Appointment.get_all('id')
        outputlist = []
        for item in dbase_query:
            virtual = IMG_ACTIVE
            if not item.is_virtual:
                virtual = IMG_INACTIVE
            system_owner_branch_user = DBSession.query(SystemOwnerBranchUser). \
                filter(SystemOwnerBranchUser.id == item.system_owner_branch_user_id). \
                first()
            entity_person = EntityPerson.by_id(item.entity_id)
            action_button = f"""<button data-appointment_id='{item.id}'  class="btn btn-outline-primary ml-auto appointment_status">Status</button>"""
            outputlist.append({
                'firstname': f"<div class='edit appointment_edit' appointment_id='{item.id}'>{entity_person.firstname}</div>",
                'start_datetime': item.start_datetime,
                'end_datetime': item.end_datetime,
                'is_virtual': virtual,
              #  'status': action_button
            })
        dbcolumnlist = [
            'firstname',
            'start_datetime',
            'end_datetime',
            'is_virtual',
            #'status'
        ]
        theadlist = [
            'User',
            'Start Date Time',
            'End Date Time',
            'Virtual',
          #  'Status'
        ]
        tdclasslist = [
            'action_link',
            'text-center',
            'text-center',
            'text-right',
         #   'text-right',

        ]
        htmltbl = build_html_table(outputlist, dbcolumnlist, theadlist, "user_branch_calendar_appointment_table",
                                   tdclasslist)
        html = f"""
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                <div class="card-header">
                    <div class="row d-flex">
                        <div class="col-md-6">
                            <h4 class="card-title">Appointment</h4>
                        </div>
                        <div class="col-md-6 text-right">
                            <button id="create_new_user_appointment" class="btn btn-primary ml-auto">Create User Appointment</button>
                        </div>
                    </div>
                    <div class="row d-flex align-items-center">
                        <div class="col-md-6">
                            <input type="text" class="form-control search" name="searchphrase" placeholder="Search">
                        </div>
                        <div class="col-md-6">
                            <button class="btn btn-primary action_search">Search</button>
                            <button class="btn btn-primary">Reset</button>
                        </div>
                    </div>
                    <hr>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        {htmltbl}
                    </div>
                </div>
                </div>
            </div>
        </div>
        """
        return html

    @expose()
    def get_javascript_user_appointment_onload(self, *args, **kwargs):
        javascript = """
        $("#create_new_user_appointment").click(function(){
            $('#dialogdiv').load('/appointment/get_modal_user_appointment?', function(data){
                return false;
            });
        });
        $(".user_appointment_edit").click(function(){
            var kwargs = 'user_appointment_id='+$(this).attr('user_appointment_id');
            $('#dialogdiv').load('/appointment/get_modal_user_appointment?', kwargs, function(data){
                return false;
            });
        });
         $(document).on('click', '.appointment_edit', function(){
            var data = {appointment_id : $(this).attr('appointment_id')};
            $.redirect('/appointment/edit_appointment', data);
        });
        """
        return javascript

    @expose()
    def get_modal_user_appointment(self, *args, **kwargs):
        kwargs['searchkey'] = SEARCH_APPOINTMENT

        searchphrase = COMMON.get_searchphrase(**kwargs)

        html = f"""
     <div class="modal fade" id="dialog_user_appointment" tabindex="-1" role="dialog" aria-labelledby="mybank_branchLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="col-md-12">
                            <h4 class="card-title">New Appointment</h4>
                        </div>
                    </div>
                    <div class="modal-body">
                        <form id='form_new_member_appointment'>
                            <div class="col-md-12">
                                <div class="row">
                                    <label class="col-md-3 col-form-label" required for="family_member_id">Member</label>
                                    <div class="col-md-6">
                                        <input type="text" class="form-control search" name="searchphrase" required id='searchphrase'  value='{searchphrase}' placeholder="Search by Identity Number">
                                    </div>
                                    <div class="col-md-3">
                                        <div class="row">
                                            <button type="button" class="btn btn-primary" id='action_search_member'>Search</button>
                                            <button class="btn btn-primary"  type="button" id='btn_reset'>Reset</button></div>
                                    </div>
                                </div>
                            </div>
                            <div id="appointment_member_details"></div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button id='save_user_appointment' class="btn btn-primary">Save</button>
                        <button class="btn btn-outline-primary user_appointment_back" data-dismiss="modal">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
        """
        javascript = """
        <script src=''>
            $('#dialog_user_appointment').modal();

            $('.user_appointment_back').click(function(){
                $('#dialog_user_appointment').modal('hide');
            });
            var form_id = '#form_new_member_appointment'
            setFormValidation(form_id);

            $('#save_user_appointment').click(function(){
                var valid = FormIsValid(form_id);
                if(valid){
                    var formserial = $(form_id).serialize();
                    $.post('/appointment/save_appointment?', formserial, function(data){
                        var result = JSON.parse(data);
                        if(result.success){
                            showNotification(result.status, result.data);
                            var data = {appointment_id : result.appointment_id};
                            $.redirect('/appointment/edit_appointment', data);
                        }else{
                            showNotification(result.status, result.data);
                        };
                        return false;
                    });
                }
            });

            $('#dialog_user_appointment').modal();

            $('#action_search_member').click(function(){
                var kwargs = 'searchphrase='+$('#searchphrase').val();
                $.post('/appointment/search_appointment_member?', kwargs, function(data){
                    var result = JSON.parse(data);
                    if(result.success === true){
                        $('#appointment_member_details').load('/appointment/get_search_appointment_member_details?', result, function(data){
                            return false;
                        });
                    } else {
                        showNotification(result.status, result.data);
                    };
                    return false;
                });
            })
            $('#btn_reset').click(function(){
                $('#searchphrase').val('').focus();
                $('#appointment_member_details').empty();
            });
        </script>
     	"""
        return html + javascript

    @expose()
    def search_appointment_member(self, *args, **kwargs):
        kwargs['searchkey'] = SEARCH_APPOINTMENT
        searchphrase = COMMON.get_searchphrase(**kwargs).lower()
        outputdict = {'success': False}
        outputdict['status'] = 'danger'
        outputdict['data'] = 'Nothing to search.'
        outputdict['redirect_url'] = '/members/edit_member'
        if not searchphrase:
            return json.dumps(outputdict)
        outputdict['identity_number'] = searchphrase

        identity = EntityPersonIdentity.by_attr_first('value', searchphrase)
        if not identity:
            outputdict['data'] = 'Member not found.'
            return json.dumps(outputdict)
        entity_person = EntityPerson.by_id(identity.entity_person_id)

        if not entity_person:
            outputdict['data'] = 'Member not found.'
            return json.dumps(outputdict)

        outputdict = {
            'success': True,
            'surname': entity_person.surname,
            'entity_person_id': entity_person.id,
            'firstname': entity_person.firstname,
        }
        return json.dumps(outputdict)

    @expose()
    def get_search_appointment_member_details(self, *args, **kwargs):
        entity_id = kwargs.get('entity_person_id', None)
        surname = kwargs.get('surname', None)
        firstname = kwargs.get('firstname', None)
        selectbox_system_branch_user = self.get_selectbox_system_owner_branch_user(**kwargs)
      #  self.fake_data(**kwargs)
        html = f"""
  <div class="col-md-6">
                        <h4 class="card-title">{firstname + "  " + surname} 's Details</h4>
                    </div>
                <div class="row">
                    <input type="hidden" id="entity_id" name="entity_id" class="form-control" value="{entity_id}">
                 <div class="col-md-12">
                            <div class="form-group row">
                                <label class="col-md-3 col-form-label" required>{_('Start Date')}</label>
                                <div class="col-md-9">
                                    <input type="date" class="form-control" name="start_date" id="start_date">
                                </div>
                            </div>
                        </div>
                 <div class="col-md-12">
                            <div class="form-group row">
                                <label class="col-md-3 col-form-label" required>{_('Start Time')}</label>
                                <div class="col-md-9">
                                    <input id="start_time" value="" type="time" name="start_time" class="form-control" required='true'>
                                </div>
                            </div>
                        </div>
                </div>
                <div class="row">
   <div class="col-md-12">
                            <div class="form-group row">
                                <label class="col-md-3 col-form-label" required>System Branch User</label>
                                <div class="col-md-9">
                                    {selectbox_system_branch_user}
                                </div>
                            </div>
                        </div>
        <div class="col-md-12">
                            <div class="form-group row">
                                <label class="col-4 col-form-label" for="is_virtual" required>Is Virtual</label>
                                <div class="col-8">
                                    <div class="form-check">
                                        <label class="form-check-label">
                                            <input class="form-check-input" type="checkbox" name="is_virtual" id="is_virtual"/>
                                            <span class="form-check-sign"></span>
                                        </label>
                                    </div>
                                    <div id="is_virtual_fields"></div>
                                </div>
                            </div>
                        </div>


                </div>
        """
        javascript = """
        <script type="text/javascript">
               $('#is_virtual').change(function(){
                var is_virtual = $('#is_virtual').val();
                if(this.checked) {
                    $('#is_virtual_fields').load('/appointment/get_is_virtual_fields_html', function(data){
                        return false;
                    });
                } else {
                    $('#is_virtual_fields').empty();
                }
            });
        </script>
        """
        return html + javascript

    @expose()
    def fake_data(self, *args, **kwargs):

        entity_person_id = kwargs.get(('entity_person_id'))

        this = Policy()
        this.policy_number = "POLICY 001"
        this.product_id = 1
        this.policy_owner_entity_id = 1
        this.policy_payer_entity_id = 2
        this.entity_intermediary_id = 1
        DBSession.add(this)
        DBSession.flush()

        print("policy done saving")

        benefit_policy = PolicyBenefit()
        benefit_policy.policy_id = this.id
        benefit_policy.product_benefit_id = 1
        benefit_policy.number_of_claims_remaining = 1
        benefit_policy.premium = 6
        benefit_policy.sum_insured = 8
        benefit_policy.is_compulsory = True
        benefit_policy.cover_and_exclusion_id = 9
        DBSession.add(benefit_policy)
        DBSession.flush()

        print(" Policy benefit saved already")


        benefit_life = PolicyBenefitInsuredLife()
        benefit_life.policy_benefit_id = benefit_policy.id
        benefit_life.entity_person_id = entity_person_id
        benefit_life.relationship_type_id = 1
        benefit_life.date_of_birth = datetime.now()
        benefit_life.rate_table_line_item_life_id = 1
        DBSession.add(benefit_life)
        DBSession.flush()


        policy_status = PolicyStatus()
        policy_status.policy_id = this.id
        policy_status.policy_status_type_id = 1
        policy_status.date_set = datetime.now()
        policy_status.current_status = 1

        DBSession.add(policy_status)
        DBSession.flush()

        return json.dumps({'success': True, 'message': 'Great Success', 'status': 'success'})

    @expose()
    def get_is_virtual_fields_html(self, *args, **kwargs):
        html = f"""
    <div class="form-group row">
		<div class="col-md-2">
		</div>
		<label class="col-md-3 col-form-label" for="">URL</label>
		<div class="col-md-7">
			<input id="url" type="text" name="url" class="form-control">
		</div>
	</div>
         """
        return html

    @expose()
    def save_appointment(self, *args, **kwargs):
        is_virtual = kwargs.get('is_virtual', False)
        appointment_id = self.save_appointment_dict(**kwargs)
        if is_virtual:
            dict_virtual = {
                'appointment_id': appointment_id,
                'url': kwargs.get('url'),
            }
            self.save_appointment_virtual_dict(**dict_virtual)
        redirect_url = '/appointment/edit_appointment'
        return json.dumps({'success': True, 'appointment_id': appointment_id,'data':'Appointment Successfully Saved','status': 'success', 'redirect': redirect_url})

    @expose()
    def save_appointment_virtual_dict(self, *args, **kwargs):
        usernow = request.identity.get('user', None)
        this = AppointmentVirtual()
        this.appointment_id = kwargs.get('appointment_id', None)
        this.url = kwargs.get('url', None)
        this.added_by = usernow.id
        DBSession.add(this)
        DBSession.flush()
        return this.id

    @expose()
    def save_appointment_dict(self, *args, **kwargs):
        usernow = request.identity.get('user', None)
        appointment_id = kwargs.get('appointment_id', None)

        start_date = kwargs.get('start_date', None)
        if not start_date:
            return 'false'

        start_time = kwargs.get('start_time', None)
        if not start_time:
            return 'false'

        start_datetime = f'{start_date} {start_time}'
        start_datetime = datetime.strptime(start_datetime, '%Y-%m-%d %H:%M')
        end_datetime = start_datetime + timedelta(minutes = 45)

        if not appointment_id:
            this = Appointment()
            this.system_owner_branch_user_id = kwargs.get('system_owner_branch_user_id', None)
            this.start_datetime = start_datetime
            this.end_datetime = end_datetime
            this.entity_id = kwargs.get('entity_id', None)
            if kwargs.get('is_virtual', None): this.is_virtual = True
            this.added_by = usernow.id
            DBSession.add(this)
            DBSession.flush()
        else:
            this = Appointment.by_id(appointment_id)
            if not this: return 'false'
            this.system_owner_branch_user_id = kwargs.get('system_owner_branch_user_id', None)
            this.start_datetime = start_datetime
            this.end_datetime = end_datetime
            this.entity_id = kwargs.get('entity_id', None)
            if kwargs.get('is_virtual', None): this.is_virtual = True
            DBSession.flush()
        return str(this.id)

    @require(predicates.not_anonymous())
    @expose('rocket.templates.generic')
    def edit_appointment(self, *args, **kwargs):
        appointment_id = kwargs.get('appointment_id', None)
        if not appointment_id:
            redirect('/appointment/index')
        appointment = Appointment.by_id(appointment_id)
        entity_person = EntityPerson.by_id(appointment.entity_id)
        if not entity_person:
            redirect('/appointment/index')

        title = f"""Edit Appointment: {entity_person.firstname}"""
        html = self.get_edit_appointment_html(**kwargs)
        return dict(title=title, html=html, javascript='')

    def get_edit_appointment_html(self, *args, **kwargs):

        card_header = self.get_edit_appointment_card_title_html(**kwargs)

        # TAB 1
        tab_overview_contect = self.get_edit_appointment_htmltbl(**kwargs)

        # TAB 2
        tab_policy_content = self.get_edit_appointment_policy_html(**kwargs)

        # TAB 3
        tab_policy_benefit_content = self.get_appointment_policy_benefit_htmltbl(**kwargs)

        # TAB 4
        tab_appointment_note_content = self.get_edit_appointment_note_html(**kwargs)

        # TAB 5
        tab_appointment_document_content = self.get_edit_appointment_document_html(**kwargs)

        html = f"""
        {card_header}

      <div class="row">
            <div class="col-md-12 ml-auto mr-auto">
                <div class="col-md-12 ml-auto mr-auto">
                    <ul class="nav nav-pills nav-pills-primary justify-content-center" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link" data-toggle="tab" href="#tab_overview_details" role="tablist">
                                Overview
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-toggle="tab" href="#tab_policy_details" role="tablist">
                                Policy
                            </a>
                        </li>

                         <li class="nav-item">
                            <a class="nav-link disabled" data-toggle="tab" href="#tab_policy_benefits_details" role="tablist">
                                Policy Benefits
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-toggle="tab" href="#tab_appointment_note_details" role="tablist">
                                Appointment Note
                            </a>
                        </li>
                    <li class="nav-item">
                            <a class="nav-link" data-toggle="tab" href="#tab_appointment_document_details" role="tablist">
                            Documents
                            </a>
                        </li>

                    </ul>
                </div>
                <div class="tab-content tab-space tab-subcategories">
                    <div class="tab-pane active" id="tab_overview_details">
                        {tab_overview_contect}
                    </div>
                    <div class="tab-pane" id="tab_policy_details">
                        {tab_policy_content}
                    </div>
                    <div class="tab-pane" id="tab_policy_benefits_details">
                        {tab_policy_benefit_content}
                    </div>
                    <div class="tab-pane" id="tab_appointment_note_details">
                        {tab_appointment_note_content}
                    </div>
                    <div class="tab-pane" id="tab_appointment_document_details">
                        {tab_appointment_document_content}
                    </div>

                </div>
            </div>
        </div>
        """
        javascript = """
        <script src=''>
        $('.nav-link').first().click();

        </script>
        """
        return html + javascript


    @expose()
    def get_edit_appointment_document_html(self, *args, **kwargs):
        inner_html = self.get_appointment_drawer_html(**kwargs)
        html = f"""
        <div class="row">
            <div class="col-md-12 ml-auto mr-auto">
                <div class="card">
                    <div class="card-header">
                        <div class="row d-flex">
                            <div class="col-md-6">
                                <h4 class="card-title">{_('Appointment Documents')}</h4>
                            </div>
                            <div class="col-md-6 text-right">
                            </div>
                        </div>
                        <hr>
                    </div>
                    <div class="card-body">
                    </div>
                </div>
            </div>
        </div>
        {inner_html}
        """
        return html

    def get_appointment_drawer_html(self, *args, **kwargs):
        if not request.identity:
            return ''
        usernow = request.identity.get('user', None)

        appointment_id = kwargs.get('appointment_id', None)
        if not appointment_id:
            return ''
        appointment = Appointment.by_id(appointment_id)
        entity_person = EntityPerson.by_id(appointment.entity_id)

        cabinet = Cabinet.by_attr_first('name', 'Appointment')
        if not cabinet:
            cabinet = Cabinet()
            cabinet.name = 'Appointment'
            cabinet.description = 'Appointment Cabinet'
            DBSession.add(cabinet)
            DBSession.flush()

        drawer = DBSession.query(Drawer). \
                filter(Drawer.cabinet_id == cabinet.id). \
                filter(Drawer.name == f"""{entity_person.firstname} 's Appointment"""). \
                first()

        if not drawer:
            drawer = Drawer()
            drawer.cabinet_id = cabinet.id
            drawer.name = f"""{entity_person.firstname} 's Drawer"""
            DBSession.add(drawer)
            DBSession.flush()

        user_link = DBSession.query(DrawerUserLink). \
                filter(DrawerUserLink.drawer_id == drawer.id). \
                filter(DrawerUserLink.user_id == usernow.id). \
                first()

        if not user_link:
            user_link = DrawerUserLink()
            user_link.drawer_id = drawer.id
            user_link.user_id = usernow.id
            DBSession.add(user_link)
            DBSession.flush()

        link = DBSession.query(DrawerAppointmentLink). \
                filter(DrawerAppointmentLink.drawer_id == drawer.id). \
                filter(DrawerAppointmentLink.appointment_id == appointment_id). \
                first()

        if not link:
            link = DrawerAppointmentLink()
            link.drawer_id = drawer.id
            link.appointment_id = appointment_id
            DBSession.add(link)
            DBSession.flush()


        html = f"""
        <div class="row">
            <div class="col-md-4" id="div_show_drawer_list" cabinet_id='{cabinet.id}'>
            </div>
            <div class="col-md-8" id="div_show_file_list" drawer_id='{drawer.id}'>
            </div>
        </div>
        """
        javascript = """
        <script src=''>
            var kwargs = 'drawer_id=' + $('#div_show_file_list').attr('drawer_id');
            kwargs += '&cabinet_id=' + $('#div_show_drawer_list').attr('cabinet_id');

            $('#div_show_drawer_list').load('/media/show_drawer_list_for_cabinet', kwargs, function(data){
                return false;
            });
            $('#div_show_file_list').load('/media/show_file_list_for_drawer?', kwargs, function(data){
                return false;
            });
        </script>
        """
        return html + javascript

    def get_edit_appointment_card_title_html(self, *args, **kwargs):

        appointment_id = kwargs.get('appointment_id', None)
        if not appointment_id:
            return ''

        appointment = Appointment.by_id(appointment_id)
        entity_person = EntityPerson.by_id(appointment.entity_id)

        if not entity_person:
            return ''
        html = f"""
        <div class="card">
            <div class="card-header">
                <div class="row d-flex">
                    <div class="col-md-8">
                        <h4 class="card-title">Edit Appointment for: {entity_person.firstname} </h4>
                    </div>
                    <div class="col-md-4 text-right">
                        <button class="btn btn-primary ml-auto appointment_back">Back to Appointments</button>
                    </div>
                </div>
                <div class="row d-flex">
                    <div class="col-md-12">
                        <hr>
                    </div>
                </div>
            </div>
        </div>
        """
        javascript = """
        <script src=''>
            $('.appointment_back').click(function(){
                $.redirect('/appointment/index');
            });
        </script>
        """
        return html + javascript

    @expose()
    def get_edit_appointment_htmltbl(self, *args, **kwargs):
        appointment_id = kwargs.get('appointment_id', None)
        if not appointment_id:
            return ''

        appointment = Appointment.by_id(appointment_id)
        entity_person = EntityPerson.by_id(appointment.entity_id)
        selectbox_system_branch_user = self.get_selectbox_system_owner_branch_user(
            appointment.system_owner_branch_user_id)
        selectbox_gender_person_type = COMMON.get_selectbox_gender_type(entity_person.entity_person_gender_type_id)
        selectbox_person_title_type = COMMON.get_selectbox_person_title(entity_person.entity_person_title_id)
        is_virtual = 'checked' if appointment.is_virtual else ''
        if not entity_person:
            return ''

        html = f"""
         <div class="card">
            <div class="card-header">
                <div class="row d-flex">
                    <div class="col-md-8">
                        <h4 class="card-title">Member Details </h4>
                    </div>

                </div>
                <div class="row d-flex">
                    <div class="col-md-12">
                        <hr>
                    <div class="card-body">
			<div class="row">
				<div class="col-md-6">
					<div class="col-md-12">
						<div class="form-group row">
							<label class="col-md-3 col-form-label" required>Firstname</label>
							<div class="col-md-9">
								<input type="text" class="form-control" name="start_datetime" id="start_datetime"" value ="{entity_person.firstname}" disabled>
							</div>
						</div>
					</div>   </div>
					<div class="col-md-6">
						<div class="col-md-12">
							<div class="form-group row">
								<label class="col-md-3 col-form-label" required>Surname</label>
								<div class="col-md-9">
									<input type="text" class="form-control" name="end_datetime" id="end_datetime" value ="{entity_person.surname}" disabled>
								</div>
							</div>
						</div>
					</div>
				</div>
				<div class="row">
					<div class="col-md-6">
						<div class="col-md-12">
							<div class="form-group row">
								<label class="col-md-3 col-form-label" required>Gender</label>
								<div class="col-md-9">
									{selectbox_gender_person_type}
								</div>
							</div>
						</div>
					</div>
					<div class="col-md-6">
						<div class="col-md-12">
							<div class="form-group row">
								<label class="col-md-3 col-form-label" required>Title</label>
								<div class="col-md-9">
									{selectbox_person_title_type}
								</div>
							</div>
						</div>
					</div>
					</div>

				</div>
                    </div>
                </div>
            </div>
        </div>
        <div class="card">
            <div class="card-header">
                <div class="row d-flex">
                    <div class="col-md-8">
                        <h4 class="card-title">Appointment Details </h4>
                    </div>

                </div>
                <div class="row d-flex">
                    <div class="col-md-12">
                        <hr>
                    <div class="card-body">
			<div class="row">
				<input type="hidden" id="appointment_id" name="appointment_id" class="form-control" value="{appointment_id}">
				<div class="col-md-6">
					<div class="col-md-12">
						<div class="form-group row">
							<label class="col-md-3 col-form-label" required>{_('Start Date Time')}</label>
							<div class="col-md-9">
								<input type="text" class="form-control" name="start_datetime" id="start_datetime"" value ="{appointment.start_datetime}">
							</div>
						</div>
					</div>   </div>
					<div class="col-md-6">
						<div class="col-md-12">
							<div class="form-group row">
								<label class="col-md-3 col-form-label" required>{_('End Date Time')}</label>
								<div class="col-md-9">
									<input type="text" class="form-control" name="end_datetime" id="end_datetime" value ="{appointment.end_datetime}">
								</div>
							</div>
						</div>
					</div>
				</div>
				<div class="row">
					<div class="col-md-6">
						<div class="col-md-12">
							<div class="form-group row">
								<label class="col-md-3 col-form-label" required>System Branch User</label>
								<div class="col-md-9">
									{selectbox_system_branch_user}
								</div>
							</div>
						</div>
					</div>
					<div class="col-md-6">
						<div class="col-md-12">
							<div class="form-group row">
								<label class="col-4 col-form-label" for="is_virtual" required>Is Virtual</label>
								<div class="col-8">
									<div class="form-check">
										<label class="form-check-label">
											<input class="form-check-input" type="checkbox" name="is_virtual" id="is_virtual" {is_virtual}/>
											<span class="form-check-sign"></span>
										</label>
									</div>
									<div id="is_virtual_fields"></div>
								</div>
							</div>
						</div>
                        </div>
					</div>

				</div>
                    </div>
                </div>
            </div>
        </div>
        """
        javascript = """
        <script src=''>
            $('.appointment_back').click(function(){
                $.redirect('/appointment/index');
            });
        </script>
        """
        return html + javascript

    @expose()
    def get_edit_appointment_policy_html(self, *args, **kwargs):
        appointment_id = kwargs.get('appointment_id', None)
        if not appointment_id:
            return ''

        appointment = Appointment.by_id(appointment_id)
        entity_person = EntityPerson.by_id(appointment.entity_id)
        if not entity_person:
            return ''

        appointment_policy_list = self.get_appointment_policy_htmltbl(**kwargs)

        html = f"""
              	<div class="card">
            <div class="card-header">
                <div class="row d-flex">
                    <div class="col-md-8">
                        <h4 class="card-title">Appointment Policy </h4>
                    </div>
                    <div class="col-md-4 text-right">
                       <button id="appointment_policy_new"  appointment_id="{appointment_id}" class="btn btn-primary ml-auto">New Appointment Policy</button>
                    </div>
                </div>
                <div class="row d-flex">
                    <div class="col-md-12">
                        <hr>
                    <div class="card-body">
                  	{appointment_policy_list}

				</div>
                    </div>
                </div>
            </div>
        </div>
        """
        javascript = """
        <script src=''>
          $("#appointment_policy_new").click(function(){
          var kwargs = {appointment_id : $(this).attr('appointment_id')};

            $('#dialogdiv').load('/appointment/get_modal_new_appointment_policy?', kwargs, function(data){
                 return false;
            });
          });
        </script>
        """
        return html + javascript

    @expose()
    def get_modal_new_appointment_policy(self, *args, **kwargs):
        member_policy = self.get_member_policy_htmltbl(**kwargs)
        html = f"""
              <div class="modal fade" id="dialog_appointment_policy" tabindex="-1" role="dialog" aria-labelledby="mybank_branchLabel" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered modal-xl">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <div class="col-md-12">
                                        <h4 class="card-title">New Appointment Policy</h4>
                                    </div>
                                </div>
                                <div class="modal-body">
                                    {member_policy}
                                </div>
                                <div class="modal-footer">
                                    <button id='save_user_appointment' class="btn btn-primary">Save</button>
                                    <button class="btn btn-outline-primary appointment_policy_back" data-dismiss="modal">Cancel</button>
                                </div>
                            </div>
                        </div>
                    </div>
              """
        javascript = """
          <script src=''>
        	$('#dialog_appointment_policy').modal();

            $('.appointment_policy_back').click(function(){
               $('#dialog_appointment_policy').modal('hide');
        	});
         </script>
        """
        return html + javascript

    @expose()
    def get_appointment_policy_htmltbl(self, *args, **kwargs):
        appointment_id = kwargs.get('appointment_id', None)
        if not appointment_id:
            return ''

        dbase_query = AppointmentPolicy.by_attr_all('appointment_id', appointment_id)
        outputlist = []

        for item in dbase_query:

            policy = DBSession.query(Policy). \
                filter(Policy.id == item.policy_id). \
                first()

            policy_status = DBSession.query(PolicyStatus). \
                filter(PolicyStatus.policy_id == policy.id). \
                first()

            policy_owner_entity = DBSession.query(EntityOrganisation). \
                filter(EntityOrganisation.id == policy.policy_owner_entity_id). \
                first()

            policy_status_type = TYPEUTIL.get_pretty_name("policy_status_type", policy_status.policy_status_type_id)
            action_button = f"""<button data-policy_id='{policy.id}' data-appointment_policy_id='{item.id}' class="btn btn-outline-primary ml-auto view_policy_benefits">View Benefits</button>"""
            outputlist.append({
                'policy_number': policy.policy_number,
                'policy_owner': policy_owner_entity.name,
                'policy_status': policy_status_type,
                'date_created': item.added,
                'view_benefits':  action_button,
                'open': f"<div class='edit open_appointment_policy_benefit action_link' appointment_policy_id='{item.id}'>Open</div>",
            })

        dbcolumnlist = [
            'policy_number',
            'policy_owner',
            'policy_status',
            'date_created',
            'view_benefits',
            'open'
        ]
        theadlist = [
            'Policy Number',
            'Policy Owner',
            'Policy Status',
            'Date Created',
            'Action',
            ''
        ]
        tdclasslist = [
            'text-left',
            'text-center',
            'text-center',
            'text-center',
            'text-right',
            'text-right',
        ]

        htmltbl = build_html_table(outputlist, dbcolumnlist, theadlist, "member_policy_table", tdclasslist)

        javascript = """
        <script src=''>
              $('.view_policy_benefits').click(function(){
                var kwargs = $(this).data();
                $('#dialogdiv').load('/appointment/get_modal_appointment_policy_benefit?', kwargs, function(data){
                    return false;
                });
            });

             $(".open_appointment_policy_benefit").click(function(){
                var kwargs = {appointment_policy_id: $(this).attr('appointment_policy_id')};
                $('#tab_policy_benefits_details').load('/appointment/get_appointment_policy_benefit_htmltbl', kwargs, function(data){
                        $('.nav-link[href="#tab_policy_benefits_details"]').removeClass('disabled').trigger('click');
                    return false;
                });
            });
        </script>
        """
        return htmltbl + javascript

    @expose()
    def get_appointment_policy_benefit_htmltbl(self, *args, **kwargs):
        appointment_policy_id = kwargs.get('appointment_policy_id', None)
        if not appointment_policy_id:
            return ''

        dbase_query = AppointmentPolicyBenefit.by_attr_all('appointment_policy_id', appointment_policy_id)
        idlist = []

        if dbase_query:
            idlist = [x.benefit_id for x in dbase_query]

        dbase_policy_benefit = DBSession.query(PolicyBenefit). \
            filter(PolicyBenefit.bln_active == True). \
            filter(PolicyBenefit.id.in_(idlist)).order_by(desc(PolicyBenefit.id)).all()

        outputlist = []

        for item in dbase_policy_benefit:
            policy = DBSession.query(Policy). \
                filter(Policy.id == item.policy_id). \
                first()

            policy_status = DBSession.query(PolicyStatus). \
                filter(PolicyStatus.policy_id == policy.id). \
                first()

            policy_owner_entity = DBSession.query(EntityOrganisation). \
                filter(EntityOrganisation.id == policy.policy_owner_entity_id). \
                first()

            policy_status_type = TYPEUTIL.get_pretty_name("policy_status_type", policy_status.policy_status_type_id)

            outputlist.append({
                'policy_number': policy.policy_number,
                'policy_owner': policy_owner_entity.name,
                'policy_status': policy_status_type,
                'date_created': item.added,
            })

        dbcolumnlist = [
            'policy_number',
            'policy_owner',
            'policy_status',
            'date_created',

        ]
        theadlist = [
            'Policy Number',
            'Policy Owner',
            'Policy Status',
            'Date Created',
        ]
        tdclasslist = [
            'text-left',
            'text-center',
            'text-center',
            'text-center',
        ]

        htmltbl = build_html_table(outputlist, dbcolumnlist, theadlist, "member_policy_table", tdclasslist)

        html = f"""
        	<div class="card">
                    <div class="card-header">
                        <div class="row d-flex">
                            <div class="col-md-8">
                                <h4 class="card-title">Appointment Policy Benefits </h4>
                            </div>
                            <div class="col-md-4 text-right">
                               <button id="appointment_policy_list"  class="btn btn-primary ml-auto">Back To Appointment Policy</button>
                            </div>
                        </div>
                        <div class="row d-flex">
                            <div class="col-md-12">
                                <hr>
                            <div class="card-body">
                          	{htmltbl}
        				</div>
                            </div>
                        </div>
                    </div>
                </div>
                """

        javascript = """
        <script src=''>
              $('.view_policy_benefits').click(function(){
                var kwargs = $(this).data();
                $('#dialogdiv').load('/appointment/get_modal_appointment_policy_benefit?', kwargs, function(data){
                    return false;
                });
            });

           $('#appointment_policy_list').click(function(){
                $('.nav-link[href="#tab_policy_details"]').trigger('click')
            });
        </script>
        """
        return html + javascript

    @expose()
    def get_modal_appointment_policy_benefit(self, *args, **kwargs):
        policy_benefit_table = self.get_policy_benefit_htmltable(**kwargs)
        html = f"""
               <div class="modal fade" id="dialog_appointment_policy_benefits" tabindex="-1" role="dialog" aria-labelledby="mybank_branchLabel" aria-hidden="true">
                      <div class="modal-dialog modal-dialog-centered modal-xl">
                          <div class="modal-content">
                              <div class="modal-header">
                                  <div class="col-md-12">
                                      <h4 class="card-title">Policy Benefits List</h4>
                                  </div>
                              </div>
                              <div class="modal-body">
                              {policy_benefit_table}
                              </div>
                              <div class="modal-footer">
                                  <button id='save_user_appointment' class="btn btn-primary">Save</button>
                                  <button class="btn btn-outline-primary user_appointment_back" data-dismiss="modal">Cancel</button>
                              </div>
                          </div>
                      </div>
                  </div>
                  """
        javascript = """
        <script src=''>
          $('#dialog_appointment_policy_benefits').modal();
          $('#new_appointment_policy_benefit').click(function(){
          var benefit_id = $(this).attr('benefit_id');
          var appointment_policy_id = $(this).attr('appointment_policy_id');
          var kwargs = {'appointment_policy_id' : appointment_policy_id, 'benefit_id': benefit_id};

			$.post('/appointment/save_user_appointment_policy_benefit?', kwargs, function(data){
				var result = JSON.parse(data);
				if(result.success){
				$('#dialog_appointment_policy_benefits').modal('hide');
			     showNotification(result.status, result.data);
                    $('#tab_policy_benefits_details').load('/appointment/get_appointment_policy_benefit_htmltbl', kwargs, function(data){
                       $('.nav-link[href="#tab_policy_benefits_details"]').removeClass('disabled').trigger('click');
                        return false;
                    });
				}else{
					showNotification(result.status, result.data);
				};
				return false;
			});

	        });
          </script>
        """
        return html + javascript

    @expose()
    def get_member_policy_htmltbl(self, *args, **kwargs):

        appointment_id = kwargs.get('appointment_id', None)
        if not appointment_id:
            return ''

        appointment = Appointment.by_id(appointment_id)
        entity_person = EntityPerson.by_id(appointment.entity_id)
        dbase_query = PolicyBenefitInsuredLife.by_attr_all('entity_person_id', entity_person.id)

        outputlist = []
        idlist = []
        idpolicy = []

        if dbase_query:
            idlist = [x.policy_benefit_id for x in dbase_query]

        dbase_policy_benefit = DBSession.query(PolicyBenefit). \
            filter(PolicyBenefit.bln_active == True). \
            filter(PolicyBenefit.id.in_(idlist)).order_by(desc(PolicyBenefit.id)).all()

        if dbase_policy_benefit:
            idpolicy = [x.policy_id for x in dbase_policy_benefit]

        dbase_policy = DBSession.query(Policy). \
            filter(Policy.bln_active == True). \
            filter(or_(Policy.id.in_(idpolicy), )).all()

        # To change this
        for item in dbase_policy:

            policy_status = DBSession.query(PolicyStatus). \
                filter(PolicyStatus.policy_id == item.id). \
                first()
            if not policy_status:
                continue

            policy_owner_entity = DBSession.query(EntityOrganisation). \
                filter(EntityOrganisation.id == item.policy_owner_entity_id). \
                first()
            if not policy_owner_entity:
                continue

            policy_status_type = TYPEUTIL.get_pretty_name("policy_status_type", policy_status.policy_status_type_id)
            outputlist.append({
                'add_new_appointment_policy': f"<div class='new_appointment_policy' policy_id='{item.id}' appointment_id='{appointment_id}'>New Appointment</div>",
                'policy_number': item.policy_number,
                'policy_owner': policy_owner_entity.name,
                'policy_status': policy_status_type,
                'date_created': item.added,
            })
        dbcolumnlist = [
            'policy_number',
            'policy_owner',
            'policy_status',
            'date_created',
            'add_new_appointment_policy',
        ]
        theadlist = [
            'Policy Number',
            'Policy Owner',
            'Status',
            'Date Created',
            'Action',
        ]
        tdclasslist = [
            'text-left',
            'text-left',
            'text-left',
            'text-left',
            'action_link',
        ]

        htmltbl = build_html_table(outputlist, dbcolumnlist, theadlist, "member_policy_table", tdclasslist)

        javascript = """
            <script src=''>
        	$('.new_appointment_policy').click(function(){
          var policy_id = $(this).attr('policy_id');
          var appointment_id = $(this).attr('appointment_id');
          var kwargs = {'policy_id' : policy_id, 'appointment_id': appointment_id};

			$.post('/appointment/save_user_appointment_policy?', kwargs, function(data){
				var result = JSON.parse(data);
				if(result.success){
				$('#dialog_appointment_policy').modal('hide');
			    showNotification(result.status, result.data);
                    $('#tab_policy_details').load('/appointment/get_edit_appointment_policy_html', kwargs, function(data){
                        $('.nav-link[href="#tab_policy_details"]').trigger('click') ;
                        return false;
                    });
				}else{
					showNotification(result.status, result.data);
				};
				return false;
			});
	        });
            </script>
            """
        return htmltbl + javascript

    @expose()
    def get_policy_benefit_htmltable(self, *args, **kwargs):

        policy_id = kwargs.get('policy_id', None)
        appointment_policy_id = kwargs.get('appointment_policy_id', None)
        dbase_query = PolicyBenefit.by_attr_all('policy_id', policy_id)
        outputlist = []

        for item in dbase_query:
            is_compulsory = IMG_ACTIVE
            if not item.is_compulsory:
                is_compulsory = IMG_INACTIVE

            outputlist.append({
                'premium': f"<div class='edit policy_benefit_edit' policy_benefit_id='{item.id}'>{item.premium}</div>",
                'number_of_claims_remaining': item.number_of_claims_remaining,
                'sum_insured': item.sum_insured,
                'is_compulsory': is_compulsory,
                'appointment_policy_benefit':   f"<button id='new_appointment_policy_benefit' appointment_policy_id='{appointment_policy_id}' benefit_id='{item.id}' class='btn btn-outline-primary ml-auto'>Add Benefit</button>"
            })
        theadlist = [
            'Premium',
            'Number of Claims Remaining',
            'Sum Insured',
            'Compulsory',
            ''
        ]
        dbcolumnlist = [
            'premium',
            'number_of_claims_remaining',
            'sum_insured',
            'is_compulsory',
            'appointment_policy_benefit'
        ]
        tdclasslist = [
            'action_link',
            'text-center',
            'text-center',
            'text-center',
            'action_link',
        ]
        return build_html_table(outputlist, dbcolumnlist, theadlist, "policy_benefit_table", tdclasslist)

    @expose()
    def save_user_appointment_policy(self, *args, **kwargs):
        usernow = request.identity.get('user', None)
        this = AppointmentPolicy()
        this.appointment_id = kwargs.get('appointment_id', None)
        this.policy_id = kwargs.get('policy_id', None)
        this.added_by = usernow.id
        DBSession.add(this)
        DBSession.flush()
        return json.dumps({'success': True, 'data': 'Appointment Policy Successsfully Saved.', 'status': 'success'})

    @expose()
    def save_user_appointment_policy_benefit(self, *args, **kwargs):
        usernow = request.identity.get('user', None)
        this = AppointmentPolicyBenefit()
        this.appointment_policy_id = kwargs.get('appointment_policy_id', None)
        this.benefit_id = kwargs.get('benefit_id', None)
        this.added_by = usernow.id
        DBSession.add(this)
        DBSession.flush()
        return json.dumps({'success': True, 'data': 'Appointment Policy Benefit Successsfully Saved.', 'status': 'success'})

    @expose()
    def get_edit_appointment_note_html(self, *args, **kwargs):
        appointment_id = kwargs.get('appointment_id', None)
        if not appointment_id:
            redirect('appointment/index')

        outputlist = []

        dbase_query = AppointmentNote.by_attr_all('appointment_id', appointment_id)

        for item in dbase_query:
            outputlist.append({
                'note': f"<div class='edit open_appointment_policy_benefit action_link' appointment_policy_id='{item.id}'>{ item.note}</div>",
                'date_created': item.added,
            })

        dbcolumnlist = [
            'note',
            'date_created'
        ]
        theadlist = [
            'Appointment Note',
            'Date Created',

        ]
        tdclasslist = [
            'action_link',
            'text-right',
        ]

        htmltbl = build_html_table(outputlist, dbcolumnlist, theadlist, "member_policy_table", tdclasslist)

        html = f"""
                      	<div class="card">
                    <div class="card-header">
                        <div class="row d-flex">
                            <div class="col-md-8">
                                <h4 class="card-title">Appointment Note </h4>
                            </div>
                            <div class="col-md-4 text-right">
                               <button id="appointment_note_new"  appointment_id="{appointment_id}" class="btn btn-primary ml-auto">New Appointment Note</button>
                            </div>
                        </div>
                        <div class="row d-flex">
                            <div class="col-md-12">
                                <hr>
                            <div class="card-body">
                          	{htmltbl}

        				</div>
                            </div>
                        </div>
                    </div>
                </div>
                """
        javascript = """
                <script src=''>
                  $("#appointment_note_new").click(function(){
                  var kwargs = {appointment_id : $(this).attr('appointment_id')};
                    $('#dialogdiv').load('/appointment/get_modal_new_appointment_note?', kwargs, function(data){
                         return false;
                    });
                  });
                </script>
                """
        return html + javascript

    @expose()
    def get_modal_new_appointment_note(self, *args, **kwargs):

        appointment_id = kwargs.get('appointment_id')

        html = f"""
            <div class="modal fade" id="dialog_appointment_note" tabindex="-1" role="dialog" aria-labelledby="mysystem_owner_branch_userLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <div class="col-md-6">
                                <h4 class="card-title">New Appointment Note</h4>
                            </div>
                        </div>
                        <div class="modal-body">
                            <form id='form_appointment_note'>
                             <input type="hidden" id="appointment_id" name="appointment_id" class="form-control" value="{appointment_id}">
                          <div class="form-group row">
                                    <label class="col-md-3 col-form-label" required for="text">Appointment Note</label>
                                    <div class="col-md-9">
                                        <textarea name='note' id="note" type="text" class="form-control" rows="4" maxlength='1024'></textarea>
                                    </div>
                                </div>

                            </form>
                        </div>
                        <div class="modal-footer">
                            <button id='save_appointment_note' class="btn btn-primary">Save</button>
                            <button class="btn btn-outline-primary appointment_note_back">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
            """
        javascript = """
            <script src=''>
            var form_id = '#form_appointment_note'
            setFormValidation(form_id);
            $('#save_appointment_note').click(function(){
                 var valid = FormIsValid(form_id);
                 if(valid){
                    var formserial = $(form_id).serialize();
                    $.post('/appointment/save_appointment_note?', formserial, function(data){
                     $('#dialog_appointment_note').modal('hide');
                        var result = JSON.parse(data);

                         if(result.success){
                          showNotification(result.status, result.data);
                         var kwargs = {'appointment_id' :result.appointment_id};
                        $('#tab_appointment_note_details').load('/appointment/get_edit_appointment_note_html', kwargs, function(data){
                           $('.nav-link[href="#tab_appointment_note_details"]').trigger('click');
                            return false;
                        });
                             };
                        return false;
                    });
                 }
            });
            $('.appointment_note_back').click(function(){
                $('#dialog_appointment_note').modal('hide');
            });
            $('#dialog_appointment_note').modal();
            </script>
         	"""
        return html + javascript

    @expose()
    def save_appointment_note(self, *args, **kwargs):
        usernow = request.identity.get('user', None)
        appointment_note_id = kwargs.get('appointment_note_id', None)
        appointment_id = kwargs.get('appointment_id', None)
        outputdict = {'success': False}

        if not appointment_note_id:
            this = AppointmentNote()
            this.appointment_id = appointment_id
            this.note = kwargs.get('note', None)
            this.added_by = usernow.id
            DBSession.add(this)
            DBSession.flush()
            outputdict['success'] = True
            outputdict['data'] = "Successfully added new appointment note"
            outputdict['status'] = 'success'
            outputdict['appointment_id'] = appointment_id
            return json.dumps(outputdict)
        else:
            this = AppointmentNote.by_id(appointment_note_id)

            if not this: return 'false'
            this.appointment_id = appointment_id
            this.note = kwargs.get('note', None)
            DBSession.flush()
            outputdict['success'] = True
            outputdict['data'] = "Successfully added edited appointment note "
            outputdict['status'] = 'success'
            outputdict['appointment_id'] = appointment_id
            return json.dumps(outputdict)

        outputdict['data'] = "Failed "
        outputdict['status'] = 'danger'
        outputdict['appointment_role_id'] = appointment_role_id
        return json.dumps(outputdict)

    @require(predicates.not_anonymous())
    @expose('rocket.templates.generic')
    def admin(self, *args, **kwargs):

        tab_list = [
            {'title': 'System Owner', 'target_url': '/appointment/get_system_owners'},
            {'title': 'Branches', 'target_url': '/appointment/get_branches'},

            #{'title': 'Branches Day Of Week', 'target_url': '/appointment/get_branches_day_of_week'},
            {'title': 'Users', 'target_url': '/appointment/get_users'},

            {'title': 'Roles', 'target_url': '/appointment/get_roles'},
            #{'title': 'Role Day Of Week ', 'target_url': '/appointment/get_roles_day_of_week'},

            {'title': 'Durations', 'target_url': '/appointment/get_durations'},
            {'title': 'Times', 'target_url': '/appointment/get_times'},
        ]

        nav_items = ""
        for i, tab in enumerate(tab_list):
            title = tab.get('title', None)
            target_url = tab.get('target_url', None)
            active = 'active' if i == 0 else ''
            nav_items += f"""
                <li class="nav-item">
                    <div class="nav-link {active}" data-toggle="tab" data-target-url="{target_url}" role="tablist">
                        {title}
                    </div>
                </li>
            """

        html = f"""
        <div class="card pb-3">
            <div class="card-header">
                <h4 class="card-title">Appointment Admin</h4>
            </div>
        </div>
        <div class="card py-3">
            <div class="card-body">
                <ul id="tabsHeader" class="nav nav-pills nav-pills-primary" role="tablist">
                    {nav_items}
                </ul>
                <div id="contentDiv" class="tab-content tab-space">
                </div>
            </div>
        </div>
        """
        javascript = """
            var contentDiv = $('#contentDiv');
            $('.nav-link').click(function(){
                var targetUrl = $(this).data('targetUrl');
                var kwargs = $('#tabsHeader').data();
                contentDiv.load(targetUrl, kwargs, function(e){
                    return false;
                })
            });
            $('.nav-link').first().click();
        """
        title = _("Appointments Admin")
        return dict(title=title, html=html, javascript=javascript)

    @require(predicates.not_anonymous())
    @expose()
    def get_system_owners(self, *args, **kwargs):
        html = self.get_active_system_owner_html(*args, **kwargs)
        javascript = self.get_javascript_system_owner_onload()
        return html + javascript

    @expose()
    def get_active_system_owner_html(self, *args, **kwargs):
        dbase_query = EntityOrganisationSystemOwner.get_all('id')
        outputlist = []
        for item in dbase_query:
            entity_organisation = EntityOrganisation.by_id(item.entity_organisation_id)
            if not entity_organisation:
                continue

            entity_type = TYPEUTIL.get_pretty_name("entity_organisation_type", entity_organisation.entity_organisation_type_id)
            outputlist.append({
                'name': f"<div class='edit' system_owner_id='{item.id}'>{entity_organisation.name}</div>",
                'registration_number': entity_organisation.registration_number,
                'entity_type': entity_type,
                'date_created': item.added
            })
        dbcolumnlist = [
            'name',
            'registration_number',
            'entity_type',
            'date_created'
        ]
        theadlist = [
            'Name',
            'Registration Number',
            'Organisation Type',
            'Date Created'
        ]
        tdclasslist = [
            '',
            'text-center',
            'text-center',
            'text-right',
        ]
        htmltbl = build_html_table(outputlist, dbcolumnlist, theadlist, "system_owner_table", tdclasslist)
        html = f"""
            <div class="row d-flex">
                <div class="col-md-6">
                    <h4 class="card-title">System Owner</h4>
                </div>
                <div class="col-md-6 text-right">
                    <!--
                    <button id="create_new_system_owner" class="btn btn-primary ml-auto">New System Owner</button>
                    -->
                </div>
            </div>
            <div class="row d-flex align-items-center">
                <div class="col-md-4">
                    <input type="text" class="form-control search" name="searchphrase" placeholder="Search">
                </div>
                <div class="col-md-8">
                    <button class="btn btn-primary action_search">Search</button>
                    <button class="btn btn-primary">Reset</button>
                </div>
            </div>
            <hr>
            <div class="table-responsive">
                {htmltbl}
            </div>
            """
        return html

    @expose()
    def get_javascript_system_owner_onload(self, *args, **kwargs):
        javascript = """
        <script src=''>
            $("#create_new_system_owner").click(function(){
                $('#dialogdiv').load('/appointment/get_modal_system_owner?', function(data){
                    return false;
                });
            });
            $(".system_owner_edit").click(function(){
                var kwargs = 'system_owner_id='+$(this).attr('system_owner_id');
                $('#dialogdiv').load('/appointment/get_modal_system_owner?', kwargs, function(data){
                    return false;
                });
            });
        </script>
        """
        return javascript

    @expose()
    def get_modal_system_owner(self, *args, **kwargs):
        selectbox_entity_organisation = self.get_selectbox_entity_organisation(**kwargs)
        system_owner_id = kwargs.get('system_owner_id', None)
        system_owner = None
        hidden_input = ''
        if system_owner_id:
            system_owner_branch = EntityOrganisationSystemOwner.by_id(system_owner_id)
            hidden_input = get_hidden_input(**{'id': 'system_owner_id', 'value': system_owner_id})

        html = f"""
        <div class="modal fade" id="dialog_system_owner" tabindex="-1" role="dialog" aria-labelledby="mysystem_owner_branchLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="col-md-6">
                            <h4 class="card-title">System Owner</h4>
                        </div>
                    </div>
                    <div class="modal-body">
                        <form id='form_system_owner'>
                            {hidden_input}
                            <div class="col-md-12">
                                <div class="form-group row">
                                    <label class="col-md-3 col-form-label" required for="entity_organisation_branch_id">Entity Organisation</label>
                                    <div class="col-md-9">
                                        {selectbox_entity_organisation}
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button id='save_system_owner' class="btn btn-primary">Save</button>
                        <button class="btn btn-outline-primary system_owner_back">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
        """
        javascript = """
            <script src=''>
            var form_id = '#form_system_owner'
            setFormValidation(form_id);
            $('#save_system_owner').click(function(){
                 var valid = FormIsValid(form_id);
                 if(valid){
                    var formserial = $(form_id).serialize();
                    $.post('/appointment/save_system_owner?', formserial, function(data){
                      $('#dialog_system_owner').modal('hide');
                      var contentDiv = $('#contentDiv');
                        $('.nav-link').click(function(){
                        var targetUrl = $(this).data('targetUrl');
                        var kwargs = $('#tabsHeader').data();
                         contentDiv.load(targetUrl, kwargs, function(e){
                             return false;
                        })
                     });
                      $('.nav-link').first().click();
                        return false;
                    });
                 }
            });
            $('.system_owner_back').click(function(){
                $('#dialog_system_owner').modal('hide');
            });
            $('#dialog_system_owner').modal();
            </script>
         	"""
        return html + javascript

    def get_selectbox_entity_organisation(self, *args, **kwargs):
        dbase_query = EntityOrganisation.get_all('name')
        kwargs['active'] = True
        kwargs['id'] = 'entity_organisation_id'
        kwargs['outputlist'] = [{'name': m.name, 'id': m.id} for m in dbase_query]
        return create_selectbox_html(**kwargs)

    def get_selectbox_entity_organisation_system_owner(self, *args, **kwargs):

        entity_organisation_system_owner = DBSession.query(EntityOrganisationSystemOwner).all()
        entity_organisation_system_owner_idList = [x.entity_organisation_id for x in entity_organisation_system_owner]

        dbase_query = DBSession.query(EntityOrganisation). \
            filter(EntityOrganisation.id.in_(entity_organisation_system_owner_idList)). \
            filter(EntityOrganisation.bln_active == True). \
            order_by(EntityOrganisation.name.asc()). \
            all()

        kwargs['active'] = True
        kwargs['id'] = 'system_owner_id'

        kwargs['outputlist'] = [{'name': m.name, 'id': m.id} for m in dbase_query]
        return create_selectbox_html(**kwargs)

    @expose()
    def save_system_owner(self, *args, **kwargs):
        usernow = request.identity.get('user', None)
        system_owner_id = kwargs.get('system_owner_id', None)
        if not system_owner_id:
            this = EntityOrganisationSystemOwner()
            this.entity_organisation_id = kwargs.get('entity_organisation_id', None)
            this.added_by = usernow.id
            DBSession.add(this)
            DBSession.flush()
        else:
            this = EntityOrganisationSystemOwner.by_id(system_owner_id)
            if not this: return 'false'
            this.id = kwargs.get('system_owner_id', None)
            this.entity_organisation_branch_id = kwargs.get('entity_organisation_branch_id', None)
            DBSession.flush()
        return str(this.id)

    @require(predicates.not_anonymous())
    @expose()
    def get_branches(self, *args, **kwargs):
        html = self.get_active_system_owner_branch_html(*args, **kwargs)
        javascript = self.get_javascript_system_owner_branch_onload()
        return html + javascript

    @expose()
    def get_active_system_owner_branch_html(self, *args, **kwargs):
        dbase_query = SystemOwnerBranch.get_all('id')
        outputlist = []
        for item in dbase_query:
            entity_organisation = DBSession.query(EntityOrganisation). \
                filter(EntityOrganisation.id == item.entity_organisation_branch_id). \
                first()
            if not entity_organisation:
                entity_organisation = DBSession.query(EntityOrganisation). \
                    filter(EntityOrganisation.id == item.system_owner_id). \
                    first()
            if not entity_organisation:
                continue

            entity_type = TYPEUTIL.get_pretty_name("entity_organisation_type",
                                                   entity_organisation.entity_organisation_type_id)
            outputlist.append({

                'name': f"<div class='edit system_owner_branch_edit' system_owner_id='{item.id}'>{entity_organisation.name}</div>",
                'registration_number': entity_organisation.registration_number,
                'entity_type': entity_type,
                'date_created': item.added
            })
        dbcolumnlist = [
            'name',
            'registration_number',
            'entity_type',
            'date_created'
        ]
        theadlist = [
            'Name',
            'Registration Number',
            'Organisation Type',
            'Date Created'
        ]
        tdclasslist = [
            'action_link',
            'text-center',
            'text-center',
            'text-right',
        ]

        htmltbl = build_html_table(outputlist, dbcolumnlist, theadlist, "system_owner_branch_table", tdclasslist)
        html = f"""
        <div class="row d-flex">
            <div class="col-md-6">
                <h4 class="card-title">System Branch</h4>
            </div>
            <div class="col-md-6 text-right">
                <button id="create_new_system_owner_branch" class="btn btn-primary ml-auto">Create System Branch</button>
            </div>
        </div>
        <div class="row d-flex align-items-center">
            <div class="col-md-4">
                <input type="text" class="form-control search" name="searchphrase" placeholder="Search">
            </div>
            <div class="col-md-8">
                <button class="btn btn-primary action_search">Search</button>
                <button class="btn btn-primary">Reset</button>
            </div>
        </div>
        <hr>
        <div class="table-responsive">
            {htmltbl}
        </div>
        """
        return html

    @expose()
    def get_javascript_system_owner_branch_onload(self, *args, **kwargs):
        javascript = """
        <script src=''>
        $("#create_new_system_owner_branch").click(function(){
            $('#dialogdiv').load('/appointment/get_modal_system_owner_branch?', function(data){
                return false;
            });
        });
        $(".system_owner_branch_edit").click(function(){
            var kwargs = 'system_owner_branch_id='+$(this).attr('system_owner_branch_id');
            $('#dialogdiv').load('/appointment/get_modal_system_owner_branch?', kwargs, function(data){
                return false;
            });
        });
        </script>
        """
        return javascript

    @expose()
    def get_modal_system_owner_branch(self, *args, **kwargs):
        system_owner_branch_id = kwargs.get('system_owner_branch_id', None)
        system_owner_branch = None
        hidden_input = ''
        if system_owner_branch_id:
            system_owner_branch = SystemOwnerBranch.by_id(system_owner_branch_id)
            hidden_input = get_hidden_input(**{'id': 'system_owner_branch_id', 'value': system_owner_branch_id})

        system_owner_id = system_owner_branch.system_owner_id if system_owner_branch else ''
        entity_organisation_branch_id = system_owner_branch.entity_organisation_branch_id if system_owner_branch else ''

        selectbox_entity_organisation = self.get_selectbox_entity_organisation(**kwargs)
        selectbox_entity_organisation_system_owner = self.get_selectbox_entity_organisation_system_owner(**kwargs)

        html = f"""
        <div class="modal fade" id="dialog_system_owner_branch" tabindex="-1" role="dialog" aria-labelledby="mysystem_owner_branchLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="col-md-6">
                            <h4 class="card-title">New Branch</h4>
                        </div>
                    </div>
                    <div class="modal-body">
                        <form id='form_system_owner_branch'>
                            {hidden_input}
                            <div class="col-md-12">
                                <div class="form-group row">
                                    <label class="col-md-3 col-form-label" required for="system_owner_id">System Owner</label>
                                    <div class="col-md-9">
                                        {selectbox_entity_organisation_system_owner}
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group row">
                                    <label class="col-md-3 col-form-label" required for="entity_organisation_branch_id">Entity Organisation Branch</label>
                                    <div class="col-md-9">
                                        {selectbox_entity_organisation}
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button id='save_system_owner_branch' class="btn btn-primary">Save</button>
                        <button class="btn btn-outline-primary system_owner_branch_back">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
        """
        javascript = """
        <script src=''>
        var form_id = '#form_system_owner_branch'
        setFormValidation(form_id);
        $('#save_system_owner_branch').click(function(){
             var valid = FormIsValid(form_id);
             if(valid){
                var formserial = $(form_id).serialize();
                $.post('/appointment/save_system_owner_branch?', formserial, function(data){
                  $('#dialog_system_owner_branch').modal('hide');
                      var contentDiv = $('#contentDiv');
                        $('.nav-link').click(function(){
                        var targetUrl = $(this).data('targetUrl');
                        var kwargs = $('#tabsHeader').data();
                         contentDiv.load(targetUrl, kwargs, function(e){
                             return false;
                        })
                     });
                      $('.nav-link').second().click();
                        return false;
                    });
             }
        });
        $('.system_owner_branch_back').click(function(){
            $('#dialog_system_owner_branch').modal('hide');
        });
        $('#dialog_system_owner_branch').modal();
        </script>
     	"""
        return html + javascript

    @expose()
    def save_system_owner_branch(self, *args, **kwargs):
        usernow = request.identity.get('user', None)
        system_owner_branch_id = kwargs.get('system_owner_branch_id', None)
        if not system_owner_branch_id:
            this = SystemOwnerBranch()
            this.system_owner_id = kwargs.get('system_owner_id', None)
            this.entity_organisation_branch_id = kwargs.get('entity_organisation_id', None)
            this.added_by = usernow.id
            DBSession.add(this)
            DBSession.flush()
        else:
            this = SystemOwnerBranch.by_id(system_owner_branch_id)
            if not this: return 'false'
            this.system_owner_id = kwargs.get('system_owner_id', None)
            this.entity_organisation_branch_id = kwargs.get('entity_organisation_id', None)
            DBSession.flush()
        return str(this.id)

    @require(predicates.not_anonymous())
    @expose()
    def get_durations(self, *args, **kwargs):
        html = self.get_active_appointment_duration_html(*args, **kwargs)
        javascript = self.get_javascript_appointment_duration_onload()
        return html + javascript

    @expose()
    def get_active_appointment_duration_html(self, *args, **kwargs):
        dbase_query = AppointmentDuration.get_all('id')
        outputlist = []
        for item in dbase_query:
            duration_type = TYPEUTIL.get_pretty_name("appointment_duration_type", item.duration_type_id)

            outputlist.append({
                'duration_type': f"<div class='edit system_owner_branch_edit' system_owner_id='{item.id}'>{duration_type}</div>",
                'duration': item.duration_in_minutes,

            })
        dbcolumnlist = [
            'duration_type',
            'duration',
        ]
        theadlist = [
            'Duration Type',
            'Duration (Minutes)'
        ]
        tdclasslist = [
            'action_link',

            'text-right',
        ]

        htmltbl = build_html_table(outputlist, dbcolumnlist, theadlist, "appointment_duration_table", tdclasslist)
        html = f"""
        <div class="row d-flex">
            <div class="col-md-6">
                <h4 class="card-title">Appointment Duration</h4>
            </div>
            <div class="col-md-6 text-right">
                <button id="create_new_appointment_duration" class="btn btn-primary ml-auto">New Appointment Duration</button>
            </div>
        </div>
        <div class="row d-flex align-items-center">
            <div class="col-md-4">
                <input type="text" class="form-control search" name="searchphrase" placeholder="Search">
            </div>
            <div class="col-md-8">
                <button class="btn btn-primary action_search">Search</button>
                <button class="btn btn-primary">Reset</button>
            </div>
        </div>
        <hr>
        <div class="table-responsive">
            {htmltbl}
        </div>
        """
        return html

    @expose()
    def get_javascript_appointment_duration_onload(self, *args, **kwargs):
        javascript = """
        <script src=''>
        $("#create_new_appointment_duration").click(function(){
            $('#dialogdiv').load('/appointment/get_modal_appointment_duration?', function(data){
                return false;
            });
        });
        $(".appointment_duration_edit").click(function(){
            var kwargs = 'appointment_duration_id='+$(this).attr('appointment_duration_id');
            $('#dialogdiv').load('/appointment/get_modal_appointment_duration?', kwargs, function(data){
                return false;
            });
        });
        </script>
        """
        return javascript

    @expose()
    def get_modal_appointment_duration(self, *args, **kwargs):
        appointment_duration_id = kwargs.get('appointment_duration_id', None)
        appointment_duration = None
        hidden_input = ''
        if appointment_duration_id:
            appointment_duration = AppointmentDuration.by_id(appointment_duration_id)
            hidden_input = get_hidden_input(**{'id': 'appointment_duration_id', 'value': appointment_duration_id})
        duration_type_id = appointment_duration.duration_type_id if appointment_duration else ''
        duration_in_minutes = appointment_duration.duration_in_minutes if appointment_duration else ''

        selectbox_duration_type = self.get_selectbox_duration_type(**kwargs)

        html = f"""
        <div class="modal fade" id="dialog_appointment_duration" tabindex="-1" role="dialog" aria-labelledby="myappointment_durationLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="col-md-6">
                            <h4 class="card-title">New Appointment Duration</h4>
                        </div>
                    </div>
                    <div class="modal-body">
                        <form id='form_appointment_duration'>
                        {hidden_input}
                                <div class="col-md-12">
					<div class="form-group row">
						<label class="col-md-3 col-form-label" required for="duration_type_id">Duration Type</label>
						<div class="col-md-9">
						        {selectbox_duration_type}
						</div>
					</div>
				</div>
                  <div class="col-md-12">
					<div class="form-group row">
						<label class="col-md-3 col-form-label" required for="duration_in_minutes">Duration (Minutes)</label>
						<div class="col-md-9">
							<input id="duration_in_minutes" value="{duration_in_minutes}" type="text" name="duration_in_minutes" class="form-control" required='true'>
						</div>
					</div>
				</div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button id='save_appointment_duration' class="btn btn-primary">Save</button>
                        <button class="btn btn-outline-primary appointment_duration_back">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
        """
        javascript = """
        <script src=''>
        var form_id = '#form_appointment_duration'
        setFormValidation(form_id);
        $('#save_appointment_duration').click(function(){
             var valid = FormIsValid(form_id);
             if(valid){
                var formserial = $(form_id).serialize();
                $.post('/appointment/save_appointment_duration?', formserial, function(data){
                    $.redirect('/appointment/admin');
                    return false;
                });
             }
        });
        $('.appointment_duration_back').click(function(){
            $('#dialog_appointment_duration').modal('hide');
        });
        $('#dialog_appointment_duration').modal();
        </script>
     	"""
        return html + javascript

    def get_selectbox_duration_type(self, *args, **kwargs):
        kwargs['id'] = 'duration_type_id'
        kwargs['outputdict'] = TYPEUTIL.get_dict_of_types("appointment_duration_type")
        return create_selectbox_html(**kwargs)

    def get_selectbox_appointment_status_type(self, *args, **kwargs):
        kwargs['id'] = 'appointment_status_type_id'
        kwargs['outputdict'] = TYPEUTIL.get_dict_of_types("appointment_status_type")
        return create_selectbox_html(**kwargs)

    @expose()
    def save_appointment_duration(self, *args, **kwargs):
        usernow = request.identity.get('user', None)
        appointment_duration_id = kwargs.get('appointment_duration_id', None)
        if not appointment_duration_id:
            this = AppointmentDuration()
            this.duration_type_id = kwargs.get('duration_type_id', None)
            this.duration_in_minutes = kwargs.get('duration_in_minutes', None)
            this.added_by = usernow.id
            DBSession.add(this)
            DBSession.flush()
        else:
            this = AppointmentDuration.by_id(appointment_duration_id)
            if not this: return 'false'
            this.duration_type_id = kwargs.get('duration_type_id', None)
            this.duration_in_minutes = kwargs.get('duration_in_minutes', None)
            DBSession.flush()
        return str(this.id)

    @require(predicates.not_anonymous())
    @expose()
    def get_times(self, *args, **kwargs):
        html = self.get_active_appointment_time_html(*args, **kwargs)
        javascript = self.get_javascript_appointment_time_onload()
        return html + javascript

    @expose()
    def get_active_appointment_time_html(self, *args, **kwargs):
        dbase_query = AppointmentTime.get_all('id')
        outputlist = []
        for item in dbase_query:
            outputlist.append({
                'start_time': "<div class='edit appointment_time_edit' appointment_time_id='{1}'>{0}</div>".format(
                    item.start_time, item.id),
                'end_time': item.end_time,
                'timeout_in_minutes': item.timeout_in_minutes,
            })
        dbcolumnlist = [
            'start_time',
            'end_time',
            'timeout_in_minutes',
        ]
        theadlist = [
            'Start Time',
            'End Time',
            'Timeout In Minutes',
        ]
        tdclasslist = [
            'action_link',
            'text-center',
            'text-right',
        ]
        htmltbl = build_html_table(outputlist, dbcolumnlist, theadlist, "appointment_time_table", tdclasslist)
        html = f"""
        <div class="row d-flex">
            <div class="col-md-6">
                <h4 class="card-title">Appointment Time</h4>
            </div>
            <div class="col-md-6 text-right">
                <button id="create_new_appointment_time" class="btn btn-primary ml-auto">New Appointment Time</button>
            </div>
        </div>
        <div class="row d-flex align-items-center">
            <div class="col-md-4">
                <input type="text" class="form-control search" name="searchphrase" placeholder="Search">
            </div>
            <div class="col-md-8">
                <button class="btn btn-primary action_search">Search</button>
                <button class="btn btn-primary">Reset</button>
            </div>
        </div>
        <hr>
        <div class="table-responsive">
            {htmltbl}
        </div>
        """
        return html

    @expose()
    def get_javascript_appointment_time_onload(self, *args, **kwargs):
        javascript = """
        <script src=''>
        $("#create_new_appointment_time").click(function(){
            $('#dialogdiv').load('/appointment/get_modal_appointment_time?', function(data){
                return false;
            });
        });
        $(".appointment_time_edit").click(function(){
            var kwargs = 'appointment_time_id='+$(this).attr('appointment_time_id');
            $('#dialogdiv').load('/appointment/get_modal_appointment_time?', kwargs, function(data){
                return false;
            });
        });
        </script>
        """
        return javascript

    @expose()
    def get_modal_appointment_time(self, *args, **kwargs):
        appointment_time_id = kwargs.get('appointment_time_id', None)
        appointment_time = None
        hidden_input = ''
        if appointment_time_id:
            appointment_time = AppointmentTime.by_id(appointment_time_id)
            hidden_input = get_hidden_input(**{'id': 'appointment_time_id', 'value': appointment_time_id})
        start_time = appointment_time.start_time if appointment_time else ''
        end_time = appointment_time.end_time if appointment_time else ''
        timeout_in_minutes = appointment_time.timeout_in_minutes if appointment_time else ''
        html = f"""
        <div class="modal fade" id="dialog_appointment_time" tabindex="-1" role="dialog" aria-labelledby="myappointment_timeLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="col-md-6">
                            <h4 class="card-title">New Appointment Time</h4>
                        </div>
                    </div>
                    <div class="modal-body">
                        <form id='form_appointment_time'>
                        {hidden_input}
                                <div class="col-md-12">
					<div class="form-group row">
						<label class="col-md-3 col-form-label" required for="start_time">Start Time</label>
						<div class="col-md-9">
							<input id="start_time" value="{start_time}" type="time" name="start_time" class="form-control" required='true'>
						</div>
					</div>
				</div>
                                <div class="col-md-12">
					<div class="form-group row">
						<label class="col-md-3 col-form-label" required for="end_time">End Time</label>
						<div class="col-md-9">
							<input id="end_time" value="{end_time}" type="time" name="end_time" class="form-control" required='true'>
						</div>
					</div>
				</div>
                                <div class="col-md-12">
					<div class="form-group row">
						<label class="col-md-3 col-form-label" required for="timeout_in_minutes">Timeout In Minutes</label>
						<div class="col-md-9">
							<input id="timeout_in_minutes" value="{timeout_in_minutes}" type="number" name="timeout_in_minutes" class="form-control" required='true'>
						</div>
					</div>
				</div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button id='save_appointment_time' class="btn btn-primary">Save</button>
                        <button class="btn btn-outline-primary appointment_time_back">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
        """
        javascript = """
        <script src=''>
        var form_id = '#form_appointment_time'
        setFormValidation(form_id);
        $('#save_appointment_time').click(function(){
             var valid = FormIsValid(form_id);
             if(valid){
                var formserial = $(form_id).serialize();
                $.post('/appointment/save_appointment_time?', formserial, function(data){

                    return false;
                });
             }
        });
        $('.appointment_time_back').click(function(){
            $('#dialog_appointment_time').modal('hide');
        });
        $('#dialog_appointment_time').modal();
        </script>
     	"""
        return html + javascript

    @expose()
    def save_appointment_time(self, *args, **kwargs):
        usernow = request.identity.get('user', None)
        appointment_time_id = kwargs.get('appointment_time_id', None)

        if not appointment_time_id:
            this = AppointmentTime()
            this.start_time = kwargs.get('start_time', None)
            this.end_time = kwargs.get('end_time', None)
            this.timeout_in_minutes = kwargs.get('timeout_in_minutes', None)
            this.added_by = usernow.id
            DBSession.add(this)
            DBSession.flush()
        else:
            this = AppointmentTime.by_id(appointment_time_id)
            if not this: return 'false'
            this.start_time = kwargs.get('start_time', None)
            this.end_time = kwargs.get('end_time', None)
            this.timeout_in_minutes = kwargs.get('timeout_in_minutes', None)
            DBSession.flush()
        return str(this.id)

    @require(predicates.not_anonymous())
    @expose()
    def get_roles(self, *args, **kwargs):
        html = self.get_active_appointment_role_html(*args, **kwargs)
        javascript = self.get_javascript_appointment_role_onload()
        return html + javascript

    @expose()
    def get_active_appointment_role_html(self, *args, **kwargs):
        dbase_query = AppointmentRole.get_all('id')
        outputlist = []
        for item in dbase_query:

            bln_have_appointment = IMG_ACTIVE
            if not item.bln_have_appointment:
                bln_have_appointment = IMG_INACTIVE

            outputlist.append({
                'name': "<div class='edit appointment_role_edit' appointment_role_id='{1}'>{0}</div>".format(item.name,item.id),
                'bln_have_appointment': bln_have_appointment,
            })
        dbcolumnlist = [
            'name',
            'bln_have_appointment',
        ]
        theadlist = [
            'Name',
            'Have Appointment',
        ]
        tdclasslist = [
            'action_link',
            'text-right',
        ]

        htmltbl = build_html_table(outputlist, dbcolumnlist, theadlist, "appointment_role_table", tdclasslist)
        html = f"""
        <div class="row d-flex">
            <div class="col-md-6">
                <h4 class="card-title">Appointment Role</h4>
            </div>
            <div class="col-md-6 text-right">
                <button id="create_new_appointment_role" class="btn btn-primary ml-auto">New Appointment Role</button>
            </div>
        </div>
        <div class="row d-flex align-items-center">
            <div class="col-md-4">
                <input type="text" class="form-control search" name="searchphrase" placeholder="Search">
            </div>
            <div class="col-md-8">
                <button class="btn btn-primary action_search">Search</button>
                <button class="btn btn-primary">Reset</button>
            </div>
        </div>
        <hr>
        <div class="table-responsive">
            {htmltbl}
        </div>
        """
        return html

    @expose()
    def get_javascript_appointment_role_onload(self, *args, **kwargs):
        javascript = """
        <script src=''>
        $("#create_new_appointment_role").click(function(){
            $('#dialogdiv').load('/appointment/get_modal_appointment_role?', function(data){
                return false;
            });
        });
        $(".appointment_role_edit").click(function(){
            var kwargs = 'appointment_role_id='+$(this).attr('appointment_role_id');
            $('#dialogdiv').load('/appointment/get_modal_appointment_role?', kwargs, function(data){
                return false;
            });
        });
        </script>
        """
        return javascript

    @expose()
    def get_modal_appointment_role(self, *args, **kwargs):
        appointment_role_id = kwargs.get('appointment_role_id', None)
        appointment_role = None
        bln_have_appointment = ''
        hidden_input = ''
        if appointment_role_id:
            appointment_role = AppointmentRole.by_id(appointment_role_id)
            hidden_input = get_hidden_input(**{'id': 'appointment_role_id', 'value': appointment_role_id})
            bln_have_appointment = 'checked' if appointment_role.bln_have_appointment else ''
        name = appointment_role.name if appointment_role else ''

        html = f"""
        <div class="modal fade" id="dialog_appointment_role" tabindex="-1" role="dialog" aria-labelledby="myappointment_roleLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="col-md-6">
                            <h4 class="card-title">New Appointment Role</h4>
                        </div>
                    </div>
                    <div class="modal-body">
                        <form id='form_appointment_role'>
                        {hidden_input}
                                <div class="col-md-12">
					<div class="form-group row">
						<label class="col-md-3 col-form-label" required for="name">Name</label>
						<div class="col-md-9">
							<input id="name" value="{name}" type="text" name="name" class="form-control" required='true'>
						</div>
					</div>
				</div>
                  <div class="col-md-12">
                           <div class="form-group row">
                                        <label class="col-4 col-form-label" for="bln_have_appointment" required>Have Appointment</label>
                                        <div class="col-8">
                                            <div class="form-check">
                                                <label class="form-check-label">
                                                    <input class="form-check-input" type="checkbox" name="bln_have_appointment" id="bln_have_appointment" {bln_have_appointment}/>
                                                    <span class="form-check-sign"></span>
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button id='save_appointment_role' class="btn btn-primary">Save</button>
                        <button class="btn btn-outline-primary appointment_role_back">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
        """
        javascript = """
        <script src=''>
        var form_id = '#form_appointment_role'
        setFormValidation(form_id);
        $('#save_appointment_role').click(function(){
             var valid = FormIsValid(form_id);
             if(valid){
                var formserial = $(form_id).serialize();
                $.post('/appointment/save_appointment_role?', formserial, function(data){
                $('#dialog_appointment_role').modal('hide');
                    return false;
                });
             }
        });
        $('.appointment_role_back').click(function(){
            $('#dialog_appointment_role').modal('hide');
        });
        $('#dialog_appointment_role').modal();
        </script>
     	"""
        return html + javascript

    @expose()
    def save_appointment_role(self, *args, **kwargs):
        usernow = request.identity.get('user', None)
        appointment_role_id = kwargs.get('appointment_role_id', None)
        if not appointment_role_id:
            this = AppointmentRole()
            this.name = kwargs.get('name', None)

            if not kwargs.get('bln_have_appointment', None): this.bln_have_appointment = False
            this.added_by = usernow.id
            DBSession.add(this)
            DBSession.flush()
        else:
            this = AppointmentRole.by_id(appointment_role_id)
            if not this: return 'false'
            this.name = kwargs.get('name', None)
            if not kwargs.get('bln_have_appointment', None):
                this.bln_have_appointment = False
            DBSession.flush()
        return str(this.id)

    @require(predicates.not_anonymous())
    @expose()
    def get_roles_day_of_week(self, *args, **kwargs):
        html = self.get_active_appointment_role_day_of_week_html(*args, **kwargs)
        javascript = self.get_javascript_appointment_role_day_of_week_onload()
        return html + javascript

    @expose()
    def get_active_appointment_role_day_of_week_html(self, *args, **kwargs):
        dbase_query = AppointmentRoleDayOfWeek.get_all('id')
        outputlist = []
        for item in dbase_query:

            appointment_role = DBSession.query(AppointmentRole). \
                filter(AppointmentRole.id == item.appointment_role_id). \
                first()

            appointment_duration = DBSession.query(AppointmentDuration). \
                filter(AppointmentDuration.id == item.appointment_duration_id). \
                first()
            if not appointment_duration:
                continue

            appointment_time = DBSession.query(AppointmentTime). \
                filter(AppointmentTime.id == item.appointment_time_id). \
                first()
            duration_type = TYPEUTIL.get_pretty_name("appointment_duration_type",
                                                     appointment_duration.duration_type_id),

            outputlist.append({
                'appointment_role': f"<div class='edit system_owner_edit' system_owner_id='{item.id}'>{appointment_role.name}</div>",
                'day_of_week': item.day_of_week,
                'duration_in_minutes': appointment_duration.duration_in_minutes,
                'duration_type': duration_type,
                'start_time': appointment_time.start_time,
                'end_time': appointment_time.end_time,
                'timeout_in_minutes': appointment_time.timeout_in_minutes,
            })

        dbcolumnlist = [
            'appointment_role',
            'day_of_week',
            'duration_type',
            'duration_in_minutes',
            'start_time',
            'end_time',
            'timeout_in_minutes'
        ]
        theadlist = [
            'Role',
            'Day Of Week',
            'Duration Type',
            'Duration Minutes',
            'Start Time',
            'End Time',
            'Timeout (Minutes)'
        ]
        tdclasslist = [
            'action_link',
            'text-center',
            'text-center',
            'text-center',
            'text-center',
            'text-center',
            'text-right',
        ]
        htmltbl = build_html_table(outputlist, dbcolumnlist, theadlist, "appointment_role_day_of_week_table",
                                   tdclasslist)
        html = f"""
        <div class="row d-flex">
            <div class="col-md-6">
                <h4 class="card-title">Appointment Role Day Of Week</h4>
            </div>
            <div class="col-md-6 text-right">
                <button id="create_new_appointment_role_day_of_week" class="btn btn-primary ml-auto">New Appointment Role</button>
            </div>
        </div>
        <div class="row d-flex align-items-center">
            <div class="col-md-4">
                <input type="text" class="form-control search" name="searchphrase" placeholder="Search">
            </div>
            <div class="col-md-8">
                <button class="btn btn-primary action_search">Search</button>
                <button class="btn btn-primary">Reset</button>
            </div>
        </div>
        <hr>
        <div class="table-responsive">
            {htmltbl}
        </div>
        """
        return html

    @expose()
    def get_javascript_appointment_role_day_of_week_onload(self, *args, **kwargs):
        javascript = """
        <script src=''>
        $("#create_new_appointment_role_day_of_week").click(function(){
            $('#dialogdiv').load('/appointment/get_modal_appointment_role_day_of_week?', function(data){
                return false;
            });
        });
        $(".appointment_role_day_of_week_edit").click(function(){
            var kwargs = 'appointment_role_day_of_week_id='+$(this).attr('appointment_role_day_of_week_id');
            $('#dialogdiv').load('/appointment/get_modal_appointment_role_day_of_week?', kwargs, function(data){
                return false;
            });
        });
        </script>
        """
        return javascript

    @expose()
    def get_modal_appointment_role_day_of_week(self, *args, **kwargs):
        appointment_role_day_of_week_id = kwargs.get('appointment_role_day_of_week_id', None)
        appointment_role_day_of_week = None
        hidden_input = ''
        if appointment_role_day_of_week_id:
            appointment_role_day_of_week = AppointmentRoleDayOfWeek.by_id(appointment_role_day_of_week_id)
            hidden_input = get_hidden_input(
                **{'id': 'appointment_role_day_of_week_id', 'value': appointment_role_day_of_week_id})
        day_of_week = appointment_role_day_of_week.day_of_week if appointment_role_day_of_week else ''

        selectbox_appointment_role = self.get_selectbox_appointment_role(**kwargs)
        selectbox_appointment_duration = self.get_selectbox_appointment_duration(**kwargs)
        selectbox_appointment_time = self.get_selectbox_appointment_time(**kwargs)
        html = f"""
        <div class="modal fade" id="dialog_appointment_role_day_of_week" tabindex="-1" role="dialog" aria-labelledby="myappointment_role_day_of_weekLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="col-md-12">
                            <h4 class="card-title">New Appointment Role</h4>
                        </div>
                    </div>
                    <div class="modal-body">
                        <form id='form_appointment_role_day_of_week'>
                        {hidden_input}
                                <div class="col-md-12">
					<div class="form-group row">
						<label class="col-md-3 col-form-label" required for="appointment_role_id">Appointment Role</label>
						<div class="col-md-9">
					{selectbox_appointment_role}
						</div>
					</div>
				</div>
                                <div class="col-md-12">
					<div class="form-group row">
						<label class="col-md-3 col-form-label" required for="day_of_week">Day Of Week</label>
						<div class="col-md-9">
							<input id="day_of_week" value="{day_of_week}" type="text" name="day_of_week" class="form-control" required='true'>
						</div>
					</div>
				</div>
                                <div class="col-md-12">
					<div class="form-group row">
						<label class="col-md-3 col-form-label" required for="appointment_duration_id">Appointment Duration</label>
						<div class="col-md-9">
			{selectbox_appointment_duration}
						</div>
					</div>
				</div>
                                <div class="col-md-12">
					<div class="form-group row">
						<label class="col-md-3 col-form-label" required for="appointment_time_id">Appointment Time</label>
						<div class="col-md-9">
						{selectbox_appointment_time}
						</div>
					</div>
				</div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button id='save_appointment_role_day_of_week' class="btn btn-primary">Save</button>
                        <button class="btn btn-outline-primary appointment_role_day_of_week_back">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
        """
        javascript = """
        <script src=''>
        var form_id = '#form_appointment_role_day_of_week'
        setFormValidation(form_id);
        $('#save_appointment_role_day_of_week').click(function(){
             var valid = FormIsValid(form_id);
             if(valid){
                var formserial = $(form_id).serialize();
                $.post('/appointment/save_appointment_role_day_of_week?', formserial, function(data){
                    return false;
                });
             }
        });
        $('.appointment_role_day_of_week_back').click(function(){
            $('#dialog_appointment_role_day_of_week').modal('hide');
        });
        $('#dialog_appointment_role_day_of_week').modal();
        </script>
     	"""
        return html + javascript

    def get_selectbox_appointment_time(self, *args, **kwargs):
        appointment_list = AppointmentTime.get_all('timeout_in_minutes')
        kwargs['id'] = 'appointment_time_id'
        kwargs['outputlist'] = [{'name': f"""{m.start_time} - {m.end_time}""", 'id': m.id} for m in appointment_list]
        return create_selectbox_html(**kwargs)

    def get_selectbox_appointment_duration(self, *args, **kwargs):
        appointment_list = AppointmentDuration.get_all('duration_in_minutes')
        kwargs['id'] = 'appointment_duration_id'

        idList = []
        for item in appointment_list:
            name = TYPEUTIL.get_pretty_name("appointment_duration_type", item.duration_type_id),
            idList.append({'name': f"""{name} - {item.duration_in_minutes}""", 'id': item.id})
        kwargs['outputlist'] = idList
        return create_selectbox_html(**kwargs)

    def get_selectbox_day_of_week(self, selected=None, *args, **kwargs):
        kwargs['id'] = 'day_of_week_type_id'
        kwargs['selected'] = selected
        kwargs['outputdict'] = TYPEUTIL.get_dict_of_types("day_of_week_type")
        return create_selectbox_html(**kwargs)

    @expose()
    def save_appointment_role_day_of_week(self, *args, **kwargs):
        usernow = request.identity.get('user', None)
        appointment_role_day_of_week_id = kwargs.get('appointment_role_day_of_week_id', None)
        if not appointment_role_day_of_week_id:
            this = AppointmentRoleDayOfWeek()
            this.appointment_role_id = kwargs.get('appointment_role_id', None)
            this.day_of_week = kwargs.get('day_of_week', None)
            this.appointment_duration_id = kwargs.get('appointment_duration_id', None)
            this.appointment_time_id = kwargs.get('appointment_time_id', None)
            this.added_by = usernow.id
            DBSession.add(this)
            DBSession.flush()
        else:
            this = AppointmentRoleDayOfWeek.by_id(appointment_role_day_of_week_id)
            if not this: return 'false'
            this.appointment_role_id = kwargs.get('appointment_role_id', None)
            this.day_of_week = kwargs.get('day_of_week', None)
            this.appointment_duration_id = kwargs.get('appointment_duration_id', None)
            this.appointment_time_id = kwargs.get('appointment_time_id', None)
            DBSession.flush()
        return str(this.id)

    @require(predicates.not_anonymous())
    @expose()
    def get_branches_day_of_week(self, *args, **kwargs):
        html = self.get_active_branch_day_of_week_html(*args, **kwargs)
        javascript = self.get_javascript_branch_day_of_week_onload()
        return html + javascript

    @expose()
    def get_active_branch_day_of_week_html(self, *args, **kwargs):
        dbase_query = BranchDayOfWeek.get_all('id')
        outputlist = []
        for item in dbase_query:
            system_branch = DBSession.query(SystemOwnerBranch). \
                filter(SystemOwnerBranch.id == item.system_owner_branch_id). \
                first()

            entity_org_system_owner = DBSession.query(EntityOrganisationSystemOwner). \
                filter(EntityOrganisationSystemOwner.id == system_branch.entity_organisation_branch_id). \
                first()

            entity_organisation = DBSession.query(EntityOrganisation). \
                filter(EntityOrganisation.id == entity_org_system_owner.entity_organisation_branch_id). \
                first()

            appointment_duration = DBSession.query(AppointmentDuration). \
                filter(AppointmentDuration.id == item.appointment_duration_id). \
                first()

            appointment_time = DBSession.query(AppointmentTime). \
                filter(AppointmentTime.id == item.appointment_time_id). \
                first()

            duration_type = TYPEUTIL.get_pretty_name("appointment_duration_type", appointment_duration.duration_type_id)

            outputlist.append({

                'system_owner_branch': f"<div class='edit branch_day_of_week_edit' system_owner_branch_id='{item.id}'>{entity_organisation.name}</div>",
                'day_of_week': item.id,
                'duration_in_minutes': appointment_duration.duration_in_minutes,
                'duration_type': duration_type,
                'start_time': appointment_time.start_time,
                'end_time': appointment_time.end_time,
                'timeout_in_minutes': appointment_time.timeout_in_minutes,
            })

        dbcolumnlist = [
            'system_owner_branch',
            'day_of_week',
            'duration_type',
            'duration_in_minutes',
            'start_time',
            'end_time',
            'timeout_in_minutes'
        ]
        theadlist = [
            'Branch',
            'Day Of Week',
            'Duration Type',
            'Duration Minutes',
            'Start Time',
            'End Time',
            'Timeout (Minutes)'
        ]
        tdclasslist = [
            'action_link',
            'text-center',
            'text-center',
            'text-center',
            'text-center',
            'text-center',
            'text-right',
        ]

        htmltbl = build_html_table(outputlist, dbcolumnlist, theadlist, "branch_day_of_week_table", tdclasslist)
        html = f"""
        <div class="row d-flex">
            <div class="col-md-6">
                <h4 class="card-title">Branch Day Of Week</h4>
            </div>
            <div class="col-md-6 text-right">
                <button id="create_new_branch_day_of_week" class="btn btn-primary ml-auto">New Branch Day Of Week</button>
            </div>
        </div>
        <div class="row d-flex align-items-center">
            <div class="col-md-4">
                <input type="text" class="form-control search" name="searchphrase" placeholder="Search">
            </div>
            <div class="col-md-8">
                <button class="btn btn-primary action_search">Search</button>
                <button class="btn btn-primary">Reset</button>
            </div>
        </div>
        <hr>
        <div class="table-responsive">
            {htmltbl}
        </div>
        """
        return html

    @expose()
    def get_javascript_branch_day_of_week_onload(self, *args, **kwargs):
        javascript = """
        <script src=''>
        $("#create_new_branch_day_of_week").click(function(){
            $('#dialogdiv').load('/appointment/get_modal_branch_day_of_week?', function(data){
                return false;
            });
        });
        $(".branch_day_of_week_edit").click(function(){
            var kwargs = 'branch_day_of_week_id='+$(this).attr('branch_day_of_week_id');
            $('#dialogdiv').load('/appointment/get_modal_branch_day_of_week?', kwargs, function(data){
                return false;
            });
        });
        </script>
        """
        return javascript


    @require(predicates.not_anonymous())
    @expose()
    def get_users(self, *args, **kwargs):
        html = self.get_active_system_owner_branch_user_html(*args, **kwargs)
        javascript = self.get_javascript_system_owner_branch_user_onload()
        return html + javascript

    @expose()
    def get_active_system_owner_branch_user_html(self, *args, **kwargs):
        dbase_query = SystemOwnerBranchUser.get_all('id')
        outputlist = []
        for item in dbase_query:
            if not item.user_id:
                continue
            user = User.by_id(item.user_id)
            if not user:
                continue
            role = AppointmentRole.by_id(item.appointment_role_id)
            if not role:
                continue
            outputlist.append({
                'username': f"<div class='edit system_owner_branch_user_edit' system_owner_branch_user_id='{item.id}'>{user.username}</div>",
                'email': user.email,
                'appointment_role': role.name,
            })
        dbcolumnlist = [
            'username',
            'email',
            'appointment_role',
        ]
        theadlist = [
            'Branch Username',
            'User Email',
            'Appointment Role',
        ]

        tdclasslist = [
            'action_link',
            'text-center',
            'text-right',
        ]
        htmltbl = build_html_table(outputlist, dbcolumnlist, theadlist, "system_owner_branch_user_table", tdclasslist)
        html = f"""
        <div class="row d-flex">
            <div class="col-md-6">
                <h4 class="card-title">Branch User</h4>
            </div>
            <div class="col-md-6 text-right">
                <button id="create_new_system_owner_branch_user" class="btn btn-primary ml-auto">New System Branch User</button>
            </div>
        </div>
        <div class="row d-flex align-items-center">
            <div class="col-md-4">
                <input type="text" class="form-control search" name="searchphrase" placeholder="Search">
            </div>
            <div class="col-md-8">
                <button class="btn btn-primary action_search">Search</button>
                <button class="btn btn-primary">Reset</button>
            </div>
        </div>
        <hr>
        <div class="table-responsive">
            {htmltbl}
        </div>
        """
        return html

    @expose()
    def get_javascript_system_owner_branch_user_onload(self, *args, **kwargs):
        javascript = """
        <script src=''>
        $("#create_new_system_owner_branch_user").click(function(){
            $('#dialogdiv').load('/appointment/get_modal_system_owner_branch_user?', function(data){
                return false;
            });
        });
        $(".system_owner_branch_user_edit").click(function(){
            var kwargs = 'system_owner_branch_user_id='+$(this).attr('system_owner_branch_user_id');
            $('#dialogdiv').load('/appointment/get_modal_system_owner_branch_user?', kwargs, function(data){
                return false;
            });
        });
        </script>
        """
        return javascript

    @expose()
    def get_modal_system_owner_branch_user(self, *args, **kwargs):
        system_owner_branch_user_id = kwargs.get('system_owner_branch_user_id', None)
        system_owner_branch_user = None
        hidden_input = ''
        if system_owner_branch_user_id:
            system_owner_branch_user = SystemOwnerBranchUser.by_id(system_owner_branch_user_id)
            hidden_input = get_hidden_input(
                **{'id': 'system_owner_branch_user_id', 'value': system_owner_branch_user_id})

        selectbox_user = self.get_selectbox_user(**kwargs)
        selectbox_appointment_role = self.get_selectbox_appointment_role(**kwargs)
        selectbox_system_owner_branch = self.get_selectbox_system_owner_branch(**kwargs)
        html = f"""
        <div class="modal fade" id="dialog_system_owner_branch_user" tabindex="-1" role="dialog" aria-labelledby="mysystem_owner_branch_userLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="col-md-6">
                            <h4 class="card-title">New System Branch User</h4>
                        </div>
                    </div>
                    <div class="modal-body">
                        <form id='form_system_owner_branch_user'>
                            {hidden_input}
                            <div class="col-md-12">
                                <div class="form-group row">
                                    <label class="col-md-3 col-form-label" required for="system_owner_branch_id">Branch</label>
                                    <div class="col-md-9">
                                        {selectbox_system_owner_branch}
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group row">
                                    <label class="col-md-3 col-form-label" required for="user_id">User</label>
                                    <div class="col-md-9">
                                        {selectbox_user}
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group row">
                                    <label class="col-md-3 col-form-label" required for="appointment_role_id">Appointment Role</label>
                                    <div class="col-md-9">
                                        {selectbox_appointment_role}
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button id='save_system_owner_branch_user' class="btn btn-primary">Save</button>
                        <button class="btn btn-outline-primary system_owner_branch_user_back">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
        """
        javascript = """
        <script src=''>
        var form_id = '#form_system_owner_branch_user'
        setFormValidation(form_id);
        $('#save_system_owner_branch_user').click(function(){
             var valid = FormIsValid(form_id);
             if(valid){
                var formserial = $(form_id).serialize();
                $.post('/appointment/save_system_owner_branch_user?', formserial, function(data){
                    $.redirect('/appointment/get_users');
                    return false;
                });
             }
        });
        $('.system_owner_branch_user_back').click(function(){
            $('#dialog_system_owner_branch_user').modal('hide');
        });
        $('#dialog_system_owner_branch_user').modal();
        </script>
     	"""
        return html + javascript

    def get_selectbox_user(self, selected=None, *args, **kwargs):
        dbase_query = DBSession.query(User). \
            order_by(asc(User.username)). \
            all()
        kwargs['id'] = 'user_id'
        kwargs['selected'] = selected
        kwargs['outputlist'] = [{'name': m.username, 'id': m.id} for m in dbase_query]
        return create_selectbox_html(**kwargs)

    def get_selectbox_appointment_role(self, selected=None, *args, **kwargs):
        appointment_roles = AppointmentRole.get_all('name')
        kwargs['id'] = 'appointment_role_id'
        kwargs['selected'] = selected
        kwargs['outputlist'] = [{'name': m.name, 'id': m.id} for m in appointment_roles]
        return create_selectbox_html(**kwargs)

    def get_selectbox_system_owner_branch(self, selected=None, *args, **kwargs):
        entity_organisation_system_owner = DBSession.query(SystemOwnerBranch).all()
        entity_organisation_system_owner_idList = [x.entity_organisation_branch_id for x in
                                                   entity_organisation_system_owner]

        dbase_query = DBSession.query(EntityOrganisation). \
            filter(EntityOrganisation.id.in_(entity_organisation_system_owner_idList)). \
            filter(EntityOrganisation.bln_active == True). \
            order_by(EntityOrganisation.name.asc()). \
            all()

        kwargs['active'] = True
        kwargs['id'] = 'system_owner_branch_id'
        kwargs['selected'] = selected
        kwargs['outputlist'] = [{'name': m.name, 'id': m.id} for m in dbase_query]
        return create_selectbox_html(**kwargs)

    def get_selectbox_system_owner_branch_user(self, selected=None, *args, **kwargs):
        dbase_query = DBSession.query(SystemOwnerBranchUser).all()
        kwargs['id'] = 'system_owner_branch_user_id'
        kwargs['selected'] = selected
        idList = []
        for item in dbase_query:
            print(item)
            print(item.user_id)
            user = DBSession.query(User). \
                filter(User.id == item.user_id). \
                first()
            if not user:
                continue
            role = DBSession.query(AppointmentRole). \
                filter(AppointmentRole.id == item.appointment_role_id). \
                filter(AppointmentRole.bln_have_appointment == True). \
                first()
            if role:
                idList.append({'name': f"""{user.username} - {role.name}""", 'id': item.id})
        kwargs['outputlist'] = idList
        kwargs['selected'] = selected
        return create_selectbox_html(**kwargs)

    @expose()
    def save_system_owner_branch_user(self, *args, **kwargs):
        usernow = request.identity.get('user', None)
        system_owner_branch_user_id = kwargs.get('system_owner_branch_user_id', None)
        if not system_owner_branch_user_id:
            this = SystemOwnerBranchUser()
            this.system_owner_branch_id = kwargs.get('system_owner_branch_id', None)
            this.user_id = kwargs.get('user_id', None)
            this.appointment_role_id = kwargs.get('appointment_role_id', None)
            this.added_by = usernow.id
            DBSession.add(this)
            DBSession.flush()
        else:
            this = SystemOwnerBranchUser.by_id(system_owner_branch_user_id)
            if not this: return 'false'
            this.system_owner_branch_id = kwargs.get('system_owner_branch_id', None)
            this.user_id = kwargs.get('user_id', None)
            this.appointment_role_id = kwargs.get('appointment_role_id', None)
            DBSession.flush()
        return str(this.id)

    @require(predicates.not_anonymous())
    @expose('rocket.templates.generic')
    def reception(self, *args, **kwargs):
        title = _("Reception")
        html = self.get_active_appointment_calendar_html(**kwargs)
        javascript = self.get_javascript_reception_onload(**kwargs)
        return dict(title=title, html=html, javascript=javascript)

    @expose()
    def get_active_appointment_calendar_html(self, *args, **kwargs):
        active_appointment = self.get_active_user_appointment_html(**kwargs)
        html = f"""
        <div class="card">
            <div class="card-header">
                <div class="row d-flex">
                    <div class="col-md-8">
                        <h4 class="card-title">Reception View </h4>
                    </div>
                    <div class="col-md-4 text-right">
                        <button class="btn btn-primary ml-auto appointment_back">Back to Appointments List</button>
                    </div>
                </div>
                <div class="row d-flex">
                    <div class="col-md-12">
                        <hr>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-5">
                                {active_appointment}
                            </div>
                            <div class="col-md-7">
                                <div id='loading' style="text-align: center"><img src='/images/loading.gif' /></div>
                                <div id='calendar'></div></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        """
        javascript = """
        <script src=''>
            document.addEventListener('DOMContentLoaded', function() {
                var calendarEl = document.getElementById('calendar');

                var calendar = new FullCalendar.Calendar(calendarEl, {
                    headerToolbar: {
                        left: 'prev,next today',
                        center: 'title',
                        right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'
                    },
                    initialDate: new Date(),
                    height: 'auto',
                    navLinks: true, // can click day/week names to navigate views
                    editable: true,
                    selectable: true,
                    selectMirror: true,
                    nowIndicator: true,
                    weekNumbers: true,
                    dayMaxEvents: true, // allow "more" link when too many events
                    showNonCurrentDates: false,
                    events: {
                        url: '/appointment/get_reception_calender',
                    },
                    loading: function(bool) {
                        document.getElementById('loading').style.display =
                            bool ? 'block' : 'none';
                    }
                });

                calendar.render();
            });
        </script>
        """
        return html + javascript

    @expose()
    def get_javascript_reception_onload(self, *args, **kwargs):
        javascript = """
        $("#create_new_user_appointment").click(function(){
            $('#dialogdiv').load('/appointment/get_modal_user_appointment?', function(data){
                return false;
            });
        });
        $(".user_appointment_edit").click(function(){
            var kwargs = 'user_appointment_id='+$(this).attr('user_appointment_id');
            $('#dialogdiv').load('/appointment/get_modal_user_appointment?', kwargs, function(data){
                return false;
            });
        });
         $(document).on('click', '.appointment_edit', function(){
            var data = {appointment_id : $(this).attr('appointment_id')};
            $.redirect('/appointment/edit_appointment', data);
        });
        """
        return javascript

    @expose()
    def get_reception_calender(self, *args, **kwargs):
        dbase_query = DBSession.query(Appointment).all()

        output_list = []
        for item in dbase_query:
            entity_person = EntityPerson.by_id(item.entity_id)
            if not entity_person:
                continue

            url = f"/appointment/edit_appointment?appointment_id={item.id}"
            if item.is_virtual:
                appointment_virtual = AppointmentVirtual.by_attr_first('appointment_id',item.id)
                if appointment_virtual and appointment_virtual.url:
                    url = appointment_virtual.url

            calender_as_dict = {
                'title': f"""  {entity_person.firstname + "  " + entity_person.surname} 's Appointment""",
                'start': date_to_str(item.start_datetime, dateformat='%Y-%m-%d %H:%M'),
                'end':  date_to_str(item.end_datetime, dateformat='%Y-%m-%d %H:%M'),
                'url':url,
            }
            output_list.append(calender_as_dict)

        return json.dumps(output_list)

    @require(predicates.not_anonymous())
    @expose('rocket.templates.generic')
    def branches(self, *args, **kwargs):
        title = _("Branches")
        dbase_query = SystemOwnerBranch.get_all('id')
        outputlist = []
        for item in dbase_query:
            entity_organisation = DBSession.query(EntityOrganisation). \
                filter(EntityOrganisation.id == item.entity_organisation_branch_id). \
                first()
            if not entity_organisation:
                entity_organisation = DBSession.query(EntityOrganisation). \
                    filter(EntityOrganisation.id == item.system_owner_id). \
                    first()
            if not entity_organisation:
                continue

            entity_type = TYPEUTIL.get_pretty_name("entity_organisation_type",   entity_organisation.entity_organisation_type_id)
            outputlist.append({

                'name': f"<div class='edit system_owner_branch_view' system_owner_id='{item.id}'>{entity_organisation.name}</div>",
                'registration_number': entity_organisation.registration_number,
                'entity_type': entity_type,
                'date_created': item.added
            })
        dbcolumnlist = [
            'name',
            'registration_number',
            'entity_type',
            'date_created'
        ]
        theadlist = [
            'Name',
            'Registration Number',
            'Organisation Type',
            'Date Created'
        ]
        tdclasslist = [
            'action_link',
            'text-center',
            'text-center',
            'text-right',
        ]

        htmltbl = build_html_table(outputlist, dbcolumnlist, theadlist, "system_owner_branch_table", tdclasslist)

        html = f"""
           <div class="row">
               <div class="col-md-12">
                   <div class="card">
                   <div class="card-header">
                       <div class="row d-flex">
                           <div class="col-md-6">
                               <h4 class="card-title">System Branches</h4>
                           </div>
                           <div class="col-md-6 text-right">
                               <button id="create_new_system_owner_branch" class="btn btn-primary ml-auto">Create System Branch</button>
                           </div>
                       </div>
                       <div class="row d-flex align-items-center">
                           <div class="col-md-4">
                               <input type="text" class="form-control search" name="searchphrase" placeholder="Search">
                           </div>
                           <div class="col-md-8">
                               <button class="btn btn-primary action_search">Search</button>
                               <button class="btn btn-primary">Reset</button>
                           </div>
                       </div>
                       <hr>
                   </div>
                   <div class="card-body">
                       <div class="table-responsive">
                           {htmltbl}
                       </div>
                   </div>
                   </div>
               </div>
           </div>
           """
        javascript = """

            $("#create_new_system_owner_branch").click(function(){
                $('#dialogdiv').load('/appointment/get_modal_system_owner_branch?', function(data){
                    return false;
                });
            });

         $(".system_owner_branch_view").click(function(){
             var system_owner_id = $(this).attr('system_owner_id');
            var kwargs = {'system_owner_id' : system_owner_id};
                $.redirect('/appointment/branche_edit', kwargs);
             });

            """
        return dict(title=title, html=html, javascript=javascript)

    @require(predicates.not_anonymous())
    @expose('rocket.templates.generic')
    def branche_edit(self, *args, **kwargs):

        system_owner_id = kwargs.get("system_owner_id")
        if not system_owner_id:
            redirect('/appointment/branches')

        system_owner = DBSession.query(SystemOwnerBranch). \
            filter(SystemOwnerBranch.id == system_owner_id). \
            first()

        entity_organisation = DBSession.query(EntityOrganisation). \
            filter(EntityOrganisation.id == system_owner.entity_organisation_branch_id). \
            first()

        if not entity_organisation:
            entity_organisation = DBSession.query(EntityOrganisation). \
                filter(EntityOrganisation.id == system_owner.system_owner_id). \
                first()

        tabs_branch_roles_content = self.get_branch_roles_htmltbl(**kwargs)
        tabs_branch_users_content = self.get_branch_users_htmltbl(**kwargs)
        tabs_branch_day_of_week_content = self.get_branch_day_of_week_htmltbl(**kwargs)

        title = f""" Branch Edit - {entity_organisation.name}"""

        html = f"""
        <div class="row">
                      <div class="col-md-12">
                          <div class="card">
                              <div class="card-header">
                                  <div class="row d-flex">
                                      <div class="col-md-6">
                                          <h4 class="card-title">Branch View - {entity_organisation.name}</h4>
                                      </div>
                          <div class="col-md-6 text-right">
                             <button id="back_branches" class="btn btn-primary ml-auto">Back to Branches</button>
                         </div>
                                  </div>
                                  <hr>
                              </div>
                          </div>
                      </div>
                  </div>
                    <div class="row">
                    <div class="col-md-12 ml-auto mr-auto">
                        <div class="col-md-12 ml-auto mr-auto">
                            <ul class="nav nav-pills nav-pills-primary justify-content-center" role="tablist">
                                <li class="nav-item">
                                    <a class="nav-link" data-toggle="tab" href="#tab_branch_roles" role="tablist">
                                      Roles
                                    </a>
                                </li>
                            <li class="nav-item">
                                    <a class="nav-link" data-toggle="tab" href="#tab_branch_day_of_week" role="tablist">
                                        Branch Day Of Week
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link " data-toggle="tab" href="#tab_branch_users" role="tablist">
                                     Users
                                    </a>
                                </li>

                            </ul>
                        </div>
                        <div class="tab-content tab-space tab-subcategories">
                            <div class="tab-pane" id="tab_branch_roles">
                            {tabs_branch_roles_content}
                            </div>
                            <div class="tab-pane" id="tab_branch_day_of_week">
                          {tabs_branch_day_of_week_content}
                            </div>
                          <div class="tab-pane" id="tab_branch_users">
                            {tabs_branch_users_content}
                            </div>
                        </div>
                    </div>
                </div>

        """
        javascript = """
                 $('.nav-link').first().click();
         $("#back_branches").click(function(){
                   $.redirect('/appointment/branches');
             });
        """
        return dict(title=title, html=html, javascript=javascript)

    @expose()
    def get_branch_roles_htmltbl(self, *args, **kwargs):

        system_owner_id = kwargs.get("system_owner_id")
        system_owner = DBSession.query(SystemOwnerBranch). \
            filter(SystemOwnerBranch.id == system_owner_id). \
            first()
        dbase_query = BranchRole.by_attr_all('system_owner_branch_id', system_owner.id)

        outputlist = []
        for item in dbase_query:

            appointment_role = DBSession.query(AppointmentRole). \
                filter(AppointmentRole.id == item.appointment_role_id). \
                first()

            bln_have_appointment = IMG_ACTIVE
            if not appointment_role.bln_have_appointment:
                bln_have_appointment = IMG_INACTIVE

            outputlist.append({
                'name': f"<div class='edit branch_role_edit'  system_owner_id='{system_owner_id}' branch_role_id='{item.id}'>{appointment_role.name}</div>",
                'bln_have_appointment': bln_have_appointment,
                'date_created': item.added
            })
        dbcolumnlist = [
            'name',
            'bln_have_appointment',
            'date_created'
        ]
        theadlist = [
            'Name',
            'Have Appointment',
            'Date Created'
        ]
        tdclasslist = [
            'action_link',
            'text-right',
            'text-right',
        ]

        htmltbl = build_html_table(outputlist, dbcolumnlist, theadlist, "appointment_role_table", tdclasslist)
        html = f"""
                    <div class="row">
                        <div class="col-md-12">
                            <div class="card">
                            <div class="card-header">
                                <div class="row d-flex">
                                    <div class="col-md-6">
                                        <h4 class="card-title">Branch Roles List</h4>
                                    </div>
                                 <div class="col-md-6 text-right">
                                        <button id="create_new_branch_role" system_owner_id="{system_owner_id}" class="btn btn-primary ml-auto">New Branch Role</button>
                                  </div>
                                </div>
                                <hr>
                            </div>
                            <div class="card-body">
                                <div class="table-responsive">
                                    {htmltbl}
                                </div>
                            </div>
                            </div>
                        </div>
                    </div>
                    """
        javascript = """
               <script src=''>
        $("#create_new_branch_role").click(function(){
        var kwargs = 'system_owner_id='+$(this).attr('system_owner_id');
            $('#dialogdiv').load('/appointment/get_modal_branch_role?',kwargs, function(data){
                return false;
            });
        });
        $(".branch_role_edit").click(function(){
            var branch_role_id = $(this).attr('branch_role_id');
             var system_owner_id = $(this).attr('system_owner_id');
             var kwargs = {'branch_role_id' :branch_role_id,'system_owner_id':system_owner_id};
            $('#dialogdiv').load('/appointment/get_modal_branch_role?', kwargs, function(data){
                return false;
            });
        });
        </script>

        """
        return html + javascript

    @expose()
    def get_branch_day_of_week_htmltbl(self, *args, **kwargs):

        system_owner_id = kwargs.get("system_owner_id")

        dbase_query = BranchDayOfWeek.by_attr_all('system_owner_branch_id', system_owner_id)

        outputlist = []
        for item in dbase_query:
            appointment_duration = DBSession.query(AppointmentDuration). \
                filter(AppointmentDuration.id == item.appointment_duration_id). \
                first()

            appointment_time = DBSession.query(AppointmentTime). \
                filter(AppointmentTime.id == item.appointment_time_id). \
                first()

            duration_type = TYPEUTIL.get_pretty_name("appointment_duration_type", appointment_duration.duration_type_id)
            day_of_week_type = TYPEUTIL.get_pretty_name("day_of_week_type", item.day_of_week_type_id)

            outputlist.append({
                'day_of_week': f"<div class='edit branch_day_of_week_edit' branch_day_of_week_id='{item.id}'>{day_of_week_type}</div>",
                'duration_in_minutes': appointment_duration.duration_in_minutes,
                'duration_type': duration_type,
                'start_time': appointment_time.start_time,
                'end_time': appointment_time.end_time,
                'timeout_in_minutes': appointment_time.timeout_in_minutes,
            })

        dbcolumnlist = [

            'day_of_week',
            'duration_type',
            'duration_in_minutes',
            'start_time',
            'end_time',
            'timeout_in_minutes'
        ]
        theadlist = [

            'Day Of Week',
            'Duration Type',
            'Duration Minutes',
            'Start Time',
            'End Time',
            'Timeout (Minutes)'
        ]
        tdclasslist = [
            'action_link',
            'text-center',
            'text-center',
            'text-center',
            'text-center',
            'text-right',
        ]

        htmltbl = build_html_table(outputlist, dbcolumnlist, theadlist, "branch_day_of_week_table", tdclasslist)
        html = f"""
                    <div class="row">
                        <div class="col-md-12">
                            <div class="card">
                            <div class="card-header">
                                <div class="row d-flex">
                                    <div class="col-md-6">
                                        <h4 class="card-title">Branch Days Of Week</h4>
                                    </div>
                                 <div class="col-md-6 text-right">
                                        <button id="create_new_branch_day_of_week" system_owner_id="{system_owner_id}" class="btn btn-primary ml-auto">New Branch Day Of Week</button>
                                  </div>
                                </div>
                                <hr>
                            </div>
                            <div class="card-body">
                                <div class="table-responsive">
                                    {htmltbl}
                                </div>
                            </div>
                            </div>
                        </div>
                    </div>
                    """
        javascript = """
               <script src=''>
        $("#create_new_branch_day_of_week").click(function(){
        var kwargs = 'system_owner_id='+$(this).attr('system_owner_id');

            $('#dialogdiv').load('/appointment/get_modal_branch_day_of_week?',kwargs, function(data){
                return false;
            });
        });
        $(".branch_day_of_week_edit").click(function(){
            var kwargs = 'branch_day_of_week_id='+$(this).attr('branch_day_of_week_id');
            $('#dialogdiv').load('/appointment/get_modal_branch_day_of_week?', kwargs, function(data){
                return false;
            });
        });
        </script>

        """
        return html + javascript

    @expose()
    def get_modal_branch_day_of_week(self, *args, **kwargs):
        branch_day_of_week_id = kwargs.get('branch_day_of_week_id', None)
        system_owner_id = kwargs.get('system_owner_id', None)
        branch_day_of_week = None
        hidden_input = ''
        if branch_day_of_week_id:
            branch_day_of_week = BranchDayOfWeek.by_id(branch_day_of_week_id)
            hidden_input = get_hidden_input(**{'id': 'branch_day_of_week_id', 'value': branch_day_of_week_id})
        system_owner_branch_id = branch_day_of_week.system_owner_branch_id if branch_day_of_week else ''
        day_of_week = branch_day_of_week.day_of_week if branch_day_of_week else ''
        appointment_duration_id = branch_day_of_week.appointment_duration_id if branch_day_of_week else ''
        appointment_time_id = branch_day_of_week.appointment_time_id if branch_day_of_week else ''

        selectbox_appointment_duration = self.get_selectbox_appointment_duration(**kwargs)
        selectbox_day_of_week = self.get_selectbox_day_of_week(**kwargs)
        selectbox_appointment_time = self.get_selectbox_appointment_time(**kwargs)
        selectbox_system_owner_branch = self.get_selectbox_system_owner_branch(**kwargs)
        html = f"""
                <div class="modal fade" id="dialog_branch_day_of_week" tabindex="-1" role="dialog" aria-labelledby="mybranch_day_of_weekLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered modal-lg">
                        <div class="modal-content">
                            <div class="modal-header">
                                <div class="col-md-6">
                                    <h4 class="card-title">New Branch Day Of Week</h4>
                                </div>
                            </div>
                            <div class="modal-body">
                                <form id='form_branch_day_of_week'>
                                {hidden_input}
                          <input type="hidden" id="system_owner_id" name="system_owner_id" class="form-control" value="{system_owner_id}">
                                        <div class="col-md-12">
        					<div class="form-group row">
        						<label class="col-md-3 col-form-label" required for="day_of_week">Day Of Week</label>
        						<div class="col-md-9">
        												{selectbox_day_of_week}
        						</div>
        					</div>
        				</div>
                                        <div class="col-md-12">
        					<div class="form-group row">
        						<label class="col-md-3 col-form-label" required for="appointment_duration_id">Appointment Duration</label>
        						<div class="col-md-9">
        						{selectbox_appointment_duration}
        						</div>
        					</div>
        				</div>
                                        <div class="col-md-12">
        					<div class="form-group row">
        						<label class="col-md-3 col-form-label" required for="appointment_time_id">Appointment Time</label>
        						<div class="col-md-9">
        						{selectbox_appointment_time}
        						</div>
        					</div>
        				</div>
                                </form>
                            </div>
                            <div class="modal-footer">
                                <button id='save_branch_day_of_week' class="btn btn-primary">Save</button>
                                <button class="btn btn-outline-primary branch_day_of_week_back">Cancel</button>
                            </div>
                        </div>
                    </div>
                </div>
                """
        javascript = """
                <script src=''>
                var form_id = '#form_branch_day_of_week'
                setFormValidation(form_id);
                $('#save_branch_day_of_week').click(function(){
                     var valid = FormIsValid(form_id);
                     if(valid){
                        var formserial = $(form_id).serialize();
                        $.post('/appointment/save_branch_day_of_week?', formserial, function(data){
                        var result = JSON.parse(data);
                      $('#dialog_branch_day_of_week').modal('hide');
                     if(result.success){
                      showNotification(result.status, result.data);
                     var kwargs = {'system_owner_id' :result.system_owner_id,};
                    $('#tab_branch_day_of_week').load('/appointment/get_branch_day_of_week_htmltbl', kwargs, function(data){
                       $('.nav-link[href="#tab_branch_day_of_week"]').trigger('click');
                        return false;
                    });
                         };
                            return false;
                        });
                     }
                });
                $('.branch_day_of_week_back').click(function(){
                    $('#dialog_branch_day_of_week').modal('hide');
                });
                $('#dialog_branch_day_of_week').modal();
                </script>
             	"""
        return html + javascript

    @expose()
    def save_branch_day_of_week(self, *args, **kwargs):
        usernow = request.identity.get('user', None)
        branch_day_of_week_id = kwargs.get('branch_day_of_week_id', None)
        system_owner_id = kwargs.get('system_owner_id', None)
        outputdict = {'success': False}
        if not branch_day_of_week_id:
            this = BranchDayOfWeek()
            this.system_owner_branch_id = system_owner_id
            this.day_of_week_type_id = kwargs.get('day_of_week_type_id', None)
            this.appointment_duration_id = kwargs.get('appointment_duration_id', None)
            this.appointment_time_id = kwargs.get('appointment_time_id', None)
            this.added_by = usernow.id
            DBSession.add(this)
            DBSession.flush()

            outputdict['success'] = True
            outputdict['data'] = "Successfully added new branch day of week"
            outputdict['status'] = 'success'
            outputdict['system_owner_id'] = system_owner_id
            return json.dumps(outputdict)

        else:
            this = BranchDayOfWeek.by_id(branch_day_of_week_id)
            if not this: return 'false'
            this.system_owner_branch_id = system_owner_id
            this.day_of_week_type_id = kwargs.get('day_of_week_type_id', None)
            this.appointment_duration_id = kwargs.get('appointment_duration_id', None)
            this.appointment_time_id = kwargs.get('appointment_time_id', None)
            DBSession.flush()
            outputdict['success'] = True
            outputdict['data'] = "Successfully added edited branch day of week "
            outputdict['status'] = 'success'
            outputdict['system_owner_id'] = system_owner_id
            return json.dumps(outputdict)

        outputdict['data'] = "Failed "
        outputdict['status'] = 'danger'
        outputdict['system_owner_id'] = system_owner_id
        return json.dumps(outputdict)

    @expose()
    def get_branch_users_htmltbl(self, *args, **kwargs):
        system_owner_id = kwargs.get("system_owner_id")
        dbase_query = SystemOwnerBranchUser.by_attr_all('system_owner_branch_id',system_owner_id)
        outputlist = []
        for item in dbase_query:
            user = DBSession.query(User). \
                filter(User.id == item.user_id). \
                first()
            appointment_role = DBSession.query(AppointmentRole). \
                filter(AppointmentRole.id == item.appointment_role_id). \
                first()

            outputlist.append({
                'username': f"<div class='edit branch_user_edit'  system_owner_id='{system_owner_id}' system_owner_branch_user_id='{item.id}'>{user.username}</div>",
                'email': user.email,
                'appointment_role': appointment_role.name,
            })
        dbcolumnlist = [
            'username',
            'email',
            'appointment_role',
        ]
        theadlist = [
            'Branch Username',
            'User Email',
            'Appointment Role',
        ]

        tdclasslist = [
            'action_link',
            'text-center',
            'text-right',
        ]
        htmltbl = build_html_table(outputlist, dbcolumnlist, theadlist, "system_owner_branch_user_table", tdclasslist)
        html = f"""
                     <div class="row">
                         <div class="col-md-12">
                             <div class="card">
                             <div class="card-header">
                                 <div class="row d-flex">
                                     <div class="col-md-6">
                                         <h4 class="card-title">Branch Users List</h4>
                                     </div>
                                  <div class="col-md-6 text-right">
                                         <button id="create_new_branch_user" system_owner_id="{system_owner_id}" class="btn btn-primary ml-auto">New Branch Users</button>
                                   </div>
                                 </div>
                                 <hr>
                             </div>
                             <div class="card-body">
                                 <div class="table-responsive">
                                     {htmltbl}
                                 </div>
                             </div>
                             </div>
                         </div>
                     </div>
                     """
        javascript = """
                <script src=''>
         $("#create_new_branch_user").click(function(){
         var kwargs = 'system_owner_id='+$(this).attr('system_owner_id');

             $('#dialogdiv').load('/appointment/get_modal_new_branch_user?',kwargs, function(data){
                 return false;
             });
         });
         $(".branch_user_edit").click(function(){
             var system_owner_branch_user_id = $(this).attr('system_owner_branch_user_id');
             var system_owner_id = $(this).attr('system_owner_id');

             var kwargs = {'system_owner_branch_user_id' :system_owner_branch_user_id,'system_owner_id':system_owner_id};

                   console.log(kwargs);
             $('#dialogdiv').load('/appointment/get_modal_new_branch_user?', kwargs, function(data){
                 return false;
             });
         });
         </script>

         """
        return html + javascript

    @expose()
    def get_modal_new_branch_user(self, *args, **kwargs):
        system_owner_branch_user_id = kwargs.get('system_owner_branch_user_id', None)
        system_owner_id = kwargs.get('system_owner_id')
        system_owner_branch_user = None
        hidden_input = ''
        if system_owner_branch_user_id:
            system_owner_branch_user = SystemOwnerBranchUser.by_id(system_owner_branch_user_id)
            hidden_input = get_hidden_input(**{'id': 'system_owner_branch_user_id', 'value': system_owner_branch_user_id})

        selectbox_user = self.get_selectbox_user(**{'selected': system_owner_branch_user.user_id})
        selectbox_appointment_role = self.get_selectbox_appointment_role(**{'selected': system_owner_branch_user.appointment_role_id})

        html = f"""
        <div class="modal fade" id="dialog_system_owner_branch_user" tabindex="-1" role="dialog" aria-labelledby="mysystem_owner_branch_userLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="col-md-6">
                            <h4 class="card-title">New System Branch User</h4>
                        </div>
                    </div>
                    <div class="modal-body">
                        <form id='form_system_owner_branch_user'>
                            {hidden_input}
                          <input type="hidden" id="system_owner_branch_id" name="system_owner_branch_id" class="form-control" value="{system_owner_id}">
                            <div class="col-md-12">
                                <div class="form-group row">
                                    <label class="col-md-3 col-form-label" required for="user_id">User</label>
                                    <div class="col-md-9">
                                        {selectbox_user}
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group row">
                                    <label class="col-md-3 col-form-label" required for="appointment_role_id">Appointment Role</label>
                                    <div class="col-md-9">
                                        {selectbox_appointment_role}
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button id='save_system_owner_branch_user' class="btn btn-primary">Save</button>
                        <button class="btn btn-outline-primary system_owner_branch_user_back">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
        """
        javascript = """
        <script src=''>
        var form_id = '#form_system_owner_branch_user'
        setFormValidation(form_id);
        $('#save_system_owner_branch_user').click(function(){
             var valid = FormIsValid(form_id);
             if(valid){
                var formserial = $(form_id).serialize();
                $.post('/appointment/save_branch_user?', formserial, function(data){
                 $('#dialog_system_owner_branch_user').modal('hide');
                    var result = JSON.parse(data);
                     if(result.success){
                      showNotification(result.status, result.data);
                     var kwargs = {'system_owner_id' :result.system_owner_id,};
                    $('#tab_branch_users').load('/appointment/get_branch_users_htmltbl', kwargs, function(data){
                       $('.nav-link[href="#tab_branch_users"]').trigger('click');
                        return false;
                    });
                         };
                    return false;
                });
             }
        });
        $('.system_owner_branch_user_back').click(function(){
            $('#dialog_system_owner_branch_user').modal('hide');
        });
        $('#dialog_system_owner_branch_user').modal();
        </script>
     	"""
        return html + javascript

    @expose()
    def get_modal_branch_role(self, *args, **kwargs):
        branch_role_id = kwargs.get('branch_role_id', None)
        system_owner_id = kwargs.get('system_owner_id', None)

        hidden_input = ''
        appointment_role_id = ''
        if branch_role_id:
            branch_role = BranchRole.by_id(branch_role_id)

            hidden_input = get_hidden_input(**{'id': 'branch_role_id', 'value': branch_role_id})
            appointment_role_id = branch_role.appointment_role_id

        selectbox_appointment_role = self.get_selectbox_appointment_role(**{'selected': appointment_role_id})

        html = f"""
                <div class="modal fade" id="dialog_branch_role" tabindex="-1" role="dialog" aria-labelledby="myappointment_roleLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered modal-lg">
                        <div class="modal-content">
                            <div class="modal-header">
                                <div class="col-md-6">
                                    <h4 class="card-title">New Branch Role</h4>
                                </div>
                            </div>
                            <div class="modal-body">
                                <form id='form_branch_role'>
                                {hidden_input}
                                 <input type="hidden" id="system_owner_id" name="system_owner_id" class="form-control" value="{system_owner_id}">
                                    <div class="col-md-12">
                                    <div class="form-group row">
                                        <label class="col-md-3 col-form-label" required for="appointment_role_id">Appointment Role</label>
                                        <div class="col-md-9">
                                            {selectbox_appointment_role}
                                        </div>
                                    </div>
                                </div>

                                </form>
                            </div>
                            <div class="modal-footer">
                                <button id='save_branch_role' class="btn btn-primary">Save</button>
                                <button class="btn btn-outline-primary branch_role_back">Cancel</button>
                            </div>
                        </div>
                    </div>
                </div>
                """
        javascript = """
                <script src=''>
                var form_id = '#form_branch_role'
                setFormValidation(form_id);
                $('#save_branch_role').click(function(){
                     var valid = FormIsValid(form_id);
                     if(valid){
                        var formserial = $(form_id).serialize();
                        $.post('/appointment/save_branch_role?', formserial, function(data){
                        $('#dialog_branch_role').modal('hide');

                           var result = JSON.parse(data);

                         if(result.success){
                          showNotification(result.status, result.data);
                         var kwargs = {'system_owner_id' :result.system_owner_id,};

                    $('#tab_branch_roles').load('/appointment/get_branch_roles_htmltbl', kwargs, function(data){
                       $('.nav-link[href="#tab_branch_roles"]').trigger('click');
                        return false;
                    });
                         };
                            return false;
                        });
                     }
                });
                $('.branch_role_back').click(function(){
                    $('#dialog_branch_role').modal('hide');
                });
                $('#dialog_branch_role').modal();
                </script>
             	"""
        return html + javascript

    @expose()
    def save_branch_user(self, *args, **kwargs):

        usernow = request.identity.get('user', None)
        system_owner_branch_user_id = kwargs.get('system_owner_branch_user_id', None)
        system_owner_branch_id = kwargs.get('system_owner_branch_id', None)
        appointment_role_id = kwargs.get('appointment_role_id', None)
        outputdict = {'success': False}
        if not system_owner_branch_user_id:
            this = SystemOwnerBranchUser()
            this.system_owner_branch_id = system_owner_branch_id
            this.user_id = kwargs.get('user_id', None)
            this.appointment_role_id = kwargs.get('appointment_role_id', None)
            this.added_by = usernow.id
            DBSession.add(this)
            DBSession.flush()
            outputdict['success'] = True
            outputdict['data'] = "Successfully added new  user"
            outputdict['status'] = 'success'
            outputdict['system_owner_id'] = system_owner_branch_id
            outputdict['appointment_role_id'] = appointment_role_id
            return json.dumps(outputdict)
        else:
            this = SystemOwnerBranchUser.by_id(system_owner_branch_user_id)
            if not this: return 'false'
            this.system_owner_branch_id =system_owner_branch_id
            this.user_id = kwargs.get('user_id', None)
            this.appointment_role_id = kwargs.get('appointment_role_id', None)
            DBSession.flush()
            outputdict['success'] = True
            outputdict['data'] = "Successfully added edited branch user"
            outputdict['status'] = 'success'
            outputdict['appointment_role_id'] = appointment_role_id
            outputdict['system_owner_id'] = system_owner_branch_id
            return json.dumps(outputdict)

        outputdict['data'] = "Failed "
        outputdict['status'] = 'danger'
        outputdict['system_owner_id'] = system_owner_id
        outputdict['appointment_role_id'] = appointment_role_id
        return json.dumps(outputdict)

    @expose()
    def save_branch_role(self, *args, **kwargs):
        usernow = request.identity.get('user', None)
        appointment_role_id = kwargs.get('appointment_role_id', None)
        system_owner_id = kwargs.get('system_owner_id', None)
        branch_role_id = kwargs.get('branch_role_id', None)

        outputdict = {'success': False}
        if not branch_role_id:
            this = BranchRole()
            this.system_owner_branch_id = system_owner_id
            this.appointment_role_id = appointment_role_id
            this.added_by = usernow.id
            DBSession.add(this)
            DBSession.flush()

            outputdict['success'] = True
            outputdict['data'] = "Successfully added new branch role"
            outputdict['status'] = 'success'
            outputdict['system_owner_id'] = system_owner_id
            outputdict['appointment_role_id'] = appointment_role_id
            return json.dumps(outputdict)

        else:

            this = BranchRole.by_id(branch_role_id)
            if not this: return 'false'
            this.system_owner_branch_id = system_owner_id
            this.appointment_role_id = appointment_role_id
            DBSession.flush()
            outputdict['success'] = True
            outputdict['data'] = "Successfully added edited branch role"
            outputdict['status'] = 'success'
            outputdict['system_owner_id'] = system_owner_id
            outputdict['appointment_role_id'] = appointment_role_id
            return json.dumps(outputdict)

        outputdict['data'] = "Failed "
        outputdict['status'] = 'danger'
        outputdict['system_owner_id'] = system_owner_id
        return json.dumps(outputdict)

    @require(predicates.not_anonymous())
    @expose('rocket.templates.generic')
    def roles(self, *args, **kwargs):
        title = _("Appointment Roles")
        appointment_roles_table = self.get_appointment_roles(**kwargs)

        html = f"""
           <div class="row">
               <div class="col-md-12">
                   <div class="card">
                   <div class="card-header">
                       <div class="row d-flex">
                           <div class="col-md-6">
                               <h4 class="card-title">System Appointment Roles</h4>
                           </div>
                           <div class="col-md-6 text-right">
                               <button id="create_new_system_owner_branch" class="btn btn-primary ml-auto">Create Appointment Role</button>
                           </div>
                       </div>
                       <div class="row d-flex align-items-center">
                           <div class="col-md-4">
                               <input type="text" class="form-control search" name="searchphrase" placeholder="Search">
                           </div>
                           <div class="col-md-8">
                               <button class="btn btn-primary action_search">Search</button>
                               <button class="btn btn-primary">Reset</button>
                           </div>
                       </div>
                       <hr>
                   </div>
                   <div class="card-body">
                       <div class="table-responsive">
                           {appointment_roles_table}
                       </div>
                   </div>
                   </div>
               </div>
           </div>


        """
        javascript = """
        $(".appointment_role_edit").click(function(){
             var appointment_role_id = $(this).attr('appointment_role_id');
            var kwargs = {'appointment_role_id' : appointment_role_id};
                $.redirect('/appointment/roles_edit', kwargs);
             });
        """
        return dict(title=title, html=html, javascript=javascript)

    @require(predicates.not_anonymous())
    @expose('rocket.templates.generic')
    def roles_edit(self, *args, **kwargs):
        appointment_role_id = kwargs.get("appointment_role_id")
        if not appointment_role_id:
            redirect('/appointment/roles')
        tabs_appointment_role_users = self.get_appointment_role_users_htmltbl(**kwargs)
        tabs_appointment_role_day_of_week = self.get_appointment_role_day_of_week_htmltbl(**kwargs)
        tabs_appointment_branch_role = self.get_appointment_branch_role_htmltbl(**kwargs)

        appointment_role = DBSession.query(AppointmentRole). \
            filter(AppointmentRole.id == appointment_role_id). \
            first()

        title = f"""Edit Appointment Role - {appointment_role.name}"""
        html = f"""
        <div class="row">
                      <div class="col-md-12">
                          <div class="card">
                              <div class="card-header">
                                  <div class="row d-flex">
                                      <div class="col-md-6">
                                      <h4 class="card-title">Appointment Role - {appointment_role.name}</h4>
                                      </div>
                                    <div class="col-md-6 text-right">
                                        <button id="back_appointment_roles" class="btn btn-primary ml-auto">Back to Roles</button>
                                    </div>
                                  </div>
                                  <hr>
                              </div>
                          </div>
                      </div>
                  </div>
                    <div class="row">
                    <div class="col-md-12 ml-auto mr-auto">
                        <div class="col-md-12 ml-auto mr-auto">
                            <ul class="nav nav-pills nav-pills-primary justify-content-center" role="tablist">
                                <li class="nav-item">
                                    <a class="nav-link" data-toggle="tab" href="#tab_appointment_role_day_of_week" role="tablist">
                                      Role Day Of Week
                                    </a>
                                </li>
                            <li class="nav-item">
                                    <a class="nav-link" data-toggle="tab" href="#tab_appointment_role_branch" role="tablist">
                                        Branch Role
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link " data-toggle="tab" href="#tab_appointment_role_user" role="tablist">
                                     Users
                                    </a>
                                </li>

                            </ul>
                        </div>
                        <div class="tab-content tab-space tab-subcategories">
                            <div class="tab-pane" id="tab_appointment_role_day_of_week">
                           {tabs_appointment_role_day_of_week}
                            </div>
                            <div class="tab-pane" id="tab_appointment_role_branch">
                           {tabs_appointment_branch_role}
                            </div>
                          <div class="tab-pane" id="tab_appointment_role_user">
                           {tabs_appointment_role_users}
                            </div>
                        </div>
                    </div>
                </div>

        """
        javascript = """
         $('.nav-link').first().click();
         $("#back_appointment_roles").click(function(){
                   $.redirect('/appointment/roles');
             });
        """
        return dict(title=title, html=html, javascript=javascript)

    @expose()
    def get_appointment_roles(self, *args, **kwargs):
        dbase_query = AppointmentRole.get_all('id')
        outputlist = []
        for item in dbase_query:

            bln_have_appointment = IMG_ACTIVE
            if not item.bln_have_appointment:
                bln_have_appointment = IMG_INACTIVE

            outputlist.append({
                'name': "<div class='edit appointment_role_edit' appointment_role_id='{1}'>{0}</div>".format(item.name,item.id),
                'bln_have_appointment': bln_have_appointment,
            })
        dbcolumnlist = [
            'name',
            'bln_have_appointment',
        ]
        theadlist = [
            'Name',
            'Have Appointment',
        ]
        tdclasslist = [
            'action_link',
            'text-right',
        ]

        htmltbl = build_html_table(outputlist, dbcolumnlist, theadlist, "appointment_role_table", tdclasslist)
        html = f"""     {htmltbl} """
        javascript = """
               <script src=''>

             </script>

        """
        return html + javascript

    @expose()
    def get_appointment_role_users_htmltbl(self, *args, **kwargs):
        appointment_role_id = kwargs.get("appointment_role_id")
        dbase_query = SystemOwnerBranchUser.by_attr_all('appointment_role_id', appointment_role_id)
        outputlist = []
        for item in dbase_query:
            user = DBSession.query(User). \
                filter(User.id == item.user_id). \
                first()
            appointment_role = DBSession.query(AppointmentRole). \
                filter(AppointmentRole.id == item.appointment_role_id). \
                first()

            outputlist.append({
                'username': f"<div class='edit appointment_role_edit' appointment_role_id='{appointment_role_id}' system_owner_branch_user_id='{item.id}'>{user.username}</div>",
                'email': user.email,
                'appointment_role': appointment_role.name,
            })
        dbcolumnlist = [
            'username',
            'email',
            'appointment_role',
        ]
        theadlist = [
            'Branch Username',
            'User Email',
            'Appointment Role',
        ]

        tdclasslist = [
            'action_link',
            'text-center',
            'text-right',
        ]
        htmltbl = build_html_table(outputlist, dbcolumnlist, theadlist, "system_owner_branch_user_table", tdclasslist)
        html = f"""
                       <div class="row">
                           <div class="col-md-12">
                               <div class="card">
                               <div class="card-header">
                                   <div class="row d-flex">
                                       <div class="col-md-6">
                                           <h4 class="card-title">Appointment Role Users</h4>
                                       </div>
                                    <div class="col-md-6 text-right">
                                           <button id="create_new_appointment_role_user" appointment_role_id="{appointment_role_id}" class="btn btn-primary ml-auto">New Appointment Role User</button>
                                     </div>
                                   </div>
                                   <hr>
                               </div>
                               <div class="card-body">
                                   <div class="table-responsive">
                                       {htmltbl}
                                   </div>
                               </div>
                               </div>
                           </div>
                       </div>
                       """
        javascript = """
                  <script src=''>
           $("#create_new_appointment_role_user").click(function(){
           var kwargs = 'appointment_role_id='+$(this).attr('appointment_role_id');

               $('#dialogdiv').load('/appointment/get_modal_branch_role_user?',kwargs, function(data){
                   return false;
               });
           });
           $(".appointment_role_edit").click(function(){

             var appointment_role_id = $(this).attr('appointment_role_id');
             var system_owner_branch_user_id = $(this).attr('system_owner_branch_user_id');

             var kwargs = {'system_owner_branch_user_id' :system_owner_branch_user_id,'appointment_role_id':appointment_role_id};
               $('#dialogdiv').load('/appointment/get_modal_branch_role_user?', kwargs, function(data){
                   return false;
               });
           });
           </script>

           """
        return html + javascript

    @expose()
    def get_appointment_role_day_of_week_htmltbl(self, *args, **kwargs):

        appointment_role_id = kwargs.get("appointment_role_id")
        dbase_query = AppointmentRoleDayOfWeek.by_attr_all('appointment_role_id', appointment_role_id)

        outputlist = []
        for item in dbase_query:
            appointment_duration = DBSession.query(AppointmentDuration). \
                filter(AppointmentDuration.id == item.appointment_duration_id). \
                first()

            appointment_time = DBSession.query(AppointmentTime). \
                filter(AppointmentTime.id == item.appointment_time_id). \
                first()

            duration_type = TYPEUTIL.get_pretty_name("appointment_duration_type", appointment_duration.duration_type_id)
            day_of_week_type = TYPEUTIL.get_pretty_name("day_of_week_type", item.day_of_week_type_id)

            outputlist.append({
                'day_of_week': f"<div class='edit branch_day_of_week_edit' branch_day_of_week_id='{item.id}'>{day_of_week_type}</div>",
                'duration_in_minutes': appointment_duration.duration_in_minutes,
                'duration_type': duration_type,
                'start_time': appointment_time.start_time,
                'end_time': appointment_time.end_time,
                'timeout_in_minutes': appointment_time.timeout_in_minutes,
            })

        dbcolumnlist = [

            'day_of_week',
            'duration_type',
            'duration_in_minutes',
            'start_time',
            'end_time',
            'timeout_in_minutes'
        ]
        theadlist = [

            'Day Of Week',
            'Duration Type',
            'Duration Minutes',
            'Start Time',
            'End Time',
            'Timeout (Minutes)'
        ]
        tdclasslist = [
            'action_link',
            'text-center',
            'text-center',
            'text-center',
            'text-center',
            'text-right',
        ]

        htmltbl = build_html_table(outputlist, dbcolumnlist, theadlist, "branch_day_of_week_table", tdclasslist)
        html = f"""
                     <div class="row">
                         <div class="col-md-12">
                             <div class="card">
                             <div class="card-header">
                                 <div class="row d-flex">
                                     <div class="col-md-6">
                                         <h4 class="card-title">Branch Days Of Week</h4>
                                     </div>
                                  <div class="col-md-6 text-right">
                                         <button id="create_new_branch_day_of_week" appointment_role_id="{appointment_role_id}" class="btn btn-primary ml-auto">New Appointment Role Day Of Week</button>
                                   </div>
                                 </div>
                                 <hr>
                             </div>
                             <div class="card-body">
                                 <div class="table-responsive">
                                     {htmltbl}
                                 </div>
                             </div>
                             </div>
                         </div>
                     </div>
                     """
        javascript = """
                <script src=''>
         $("#create_new_branch_day_of_week").click(function(){
         var kwargs = 'appointment_role_id='+$(this).attr('appointment_role_id');

             $('#dialogdiv').load('/appointment/get_modal_appointment_role_day_of_week?',kwargs, function(data){
                 return false;
             });
         });
         $(".branch_day_of_week_edit").click(function(){
             var kwargs = 'branch_day_of_week_id='+$(this).attr('branch_day_of_week_id');
             $('#dialogdiv').load('/appointment/get_modal_appointment_role_day_of_week?', kwargs, function(data){
                 return false;
             });
         });
         </script>

         """
        return html + javascript

    @expose()
    def get_appointment_branch_role_htmltbl(self, *args, **kwargs):
        appointment_role_id = kwargs.get("appointment_role_id")
        dbase_query = BranchRole.by_attr_all('appointment_role_id', appointment_role_id)

        outputlist = []
        for item in dbase_query:
            system_owner_branch = DBSession.query(SystemOwnerBranch). \
                filter(SystemOwnerBranch.id == item.system_owner_branch_id). \
                first()

            entity_organisation = DBSession.query(EntityOrganisation). \
                filter(EntityOrganisation.id == system_owner_branch.system_owner_id). \
                first()
            if not entity_organisation:
                entity_organisation = DBSession.query(EntityOrganisation). \
                    filter(EntityOrganisation.id == system_owner_branch.system_owner_id). \
                    first()
            if not entity_organisation:
                continue

            entity_type = TYPEUTIL.get_pretty_name("entity_organisation_type",
                                                   entity_organisation.entity_organisation_type_id)
            outputlist.append({

                'name': f"<div class='edit system_owner_branch_view' system_owner_id='{item.id}'>{entity_organisation.name}</div>",
                'registration_number': entity_organisation.registration_number,
                'entity_type': entity_type,
                'date_created': item.added
            })
        dbcolumnlist = [
            'name',
            'registration_number',
            'entity_type',
            'date_created'
        ]
        theadlist = [
            'Name',
            'Registration Number',
            'Organisation Type',
            'Date Created'
        ]
        tdclasslist = [
            'action_link',
            'text-center',
            'text-center',
            'text-right',
        ]

        htmltbl = build_html_table(outputlist, dbcolumnlist, theadlist, "system_owner_branch_table", tdclasslist)
        html = f"""
                       <div class="row">
                           <div class="col-md-12">
                               <div class="card">
                               <div class="card-header">
                                   <div class="row d-flex">
                                       <div class="col-md-6">
                                           <h4 class="card-title">Branch Role</h4>
                                       </div>
                                    <div class="col-md-6 text-right">
                                           <button id="create_new_branch_role" appointment_role_id="{appointment_role_id}" class="btn btn-primary ml-auto">New Branch Role</button>
                                     </div>
                                   </div>
                                   <hr>
                               </div>
                               <div class="card-body">
                                   <div class="table-responsive">
                                       {htmltbl}
                                   </div>
                               </div>
                               </div>
                           </div>
                       </div>
                       """
        javascript = """
                  <script src=''>
           $("#create_new_branch_role").click(function(){
           var kwargs = 'appointment_role_id='+$(this).attr('appointment_role_id');
               $('#dialogdiv').load('/appointment/get_modal_new_branch_role?',kwargs, function(data){
                   return false;
               });
           });
           $(".branch_user_edit").click(function(){
               var kwargs = 'branch_role_id='+$(this).attr('branch_role_id');
               $('#dialogdiv').load('/appointment/get_modal_new_branch_role?', kwargs, function(data){
                   return false;
               });
           });
           </script>

           """
        return html + javascript

    @expose()
    def get_modal_new_branch_role(self, *args, **kwargs):
        appointment_role_id = kwargs.get('appointment_role_id')
        selectbox_system_owner = self.get_selectbox_entity_organisation_system_owner(**kwargs)

        html = f"""
        <div class="modal fade" id="dialog_branch_role" tabindex="-1" role="dialog" aria-labelledby="mysystem_owner_branch_userLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="col-md-6">
                            <h4 class="card-title">New Branch Role</h4>
                        </div>
                    </div>
                    <div class="modal-body">
                        <form id='form_branch_role'>
                          <input type="hidden" id="system_owner_id" name="appointment_role_id" class="form-control" value="{appointment_role_id}">
                            <div class="col-md-12">
                                <div class="form-group row">
                                    <label class="col-md-3 col-form-label" required for="user_id">Branch </label>
                                    <div class="col-md-9">
                                        {selectbox_system_owner}
                                    </div>
                                </div>
                            </div>

                        </form>
                    </div>
                    <div class="modal-footer">
                        <button id='save_branch_role' class="btn btn-primary">Save</button>
                        <button class="btn btn-outline-primary branch_role_back">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
        """
        javascript = """
        <script src=''>
        var form_id = '#form_branch_role'
        setFormValidation(form_id);
        $('#save_branch_role').click(function(){
             var valid = FormIsValid(form_id);
             if(valid){
                var formserial = $(form_id).serialize();

                console.log(formserial);
                $.post('/appointment/save_branch_role?', formserial, function(data){

                    var result = JSON.parse(data);
                      $('#dialog_branch_role').modal('hide');
                     if(result.success){
                      showNotification(result.status, result.data);
                     var kwargs = {'appointment_role_id' :result.appointment_role_id,};
                    $('#tab_appointment_role_branch').load('/appointment/get_appointment_branch_role_htmltbl', kwargs, function(data){
                       $('.nav-link[href="#tab_appointment_role_branch"]').trigger('click');
                        return false;
                    });
                         };
                    return false;
                });
             }
        });
        $('.branch_role_back').click(function(){
            $('#dialog_branch_role').modal('hide');
        });
        $('#dialog_branch_role').modal();
        </script>
     	"""
        return html + javascript

    @expose()
    def get_modal_branch_role_user(self, *args, **kwargs):
        system_owner_branch_user_id = kwargs.get('system_owner_branch_user_id', None)
        appointment_role_id = kwargs.get('appointment_role_id')

        system_owner_branch_id = None
        user_id = None
        hidden_input = ''

        if system_owner_branch_user_id:
            system_owner_branch_user = SystemOwnerBranchUser.by_id(system_owner_branch_user_id)
            user_id = system_owner_branch_user.user_id
            system_owner_branch_id = system_owner_branch_user.system_owner_branch_id

            hidden_input = get_hidden_input(**{'id': 'system_owner_branch_user_id', 'value': system_owner_branch_user_id})

        selectbox_user = self.get_selectbox_user(**{'selected': user_id})
        selectbox_system_owner_branch = self.get_selectbox_system_owner_branch(**{'selected': system_owner_branch_id})


        html = f"""
        <div class="modal fade" id="dialog_branch_role_user" tabindex="-1" role="dialog" aria-labelledby="mysystem_owner_branch_userLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="col-md-6">
                            <h4 class="card-title">New Branch Role User</h4>
                        </div>
                    </div>
                    <div class="modal-body">
                        <form id='form_branch_role_user'>
                            {hidden_input}
                          <input type="hidden" id="appointment_role_id" name="appointment_role_id" class="form-control" value="{appointment_role_id}">
                            <div class="col-md-12">
                                <div class="form-group row">
                                    <label class="col-md-3 col-form-label" required for="user_id">User</label>
                                    <div class="col-md-9">
                                        {selectbox_user}
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group row">
                                    <label class="col-md-3 col-form-label" required for="user_id">Branch</label>
                                    <div class="col-md-9">
                                        {selectbox_system_owner_branch}
                                    </div>
                                </div>
                            </div>

                        </form>
                    </div>
                    <div class="modal-footer">
                        <button id='save_branch_role_user' class="btn btn-primary">Save</button>
                        <button class="btn btn-outline-primary branch_role_user_back">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
        """
        javascript = """
        <script src=''>
        var form_id = '#form_branch_role_user'
        setFormValidation(form_id);
        $('#save_branch_role_user').click(function(){
             var valid = FormIsValid(form_id);
             if(valid){
                var formserial = $(form_id).serialize();
                $.post('/appointment/save_branch_user?', formserial, function(data){
                 $('#dialog_branch_role_user').modal('hide');
                    var result = JSON.parse(data);

                     if(result.success){
                      showNotification(result.status, result.data);
                     var kwargs = {'appointment_role_id' :result.appointment_role_id};
                    $('#tab_appointment_role_user').load('/appointment/get_appointment_role_users_htmltbl', kwargs, function(data){
                       $('.nav-link[href="#tab_appointment_role_user"]').trigger('click');
                        return false;
                    });
                         };
                    return false;
                });
             }
        });
        $('.branch_role_user_back').click(function(){
            $('#dialog_branch_role_user').modal('hide');
        });
        $('#dialog_branch_role_user').modal();
        </script>
     	"""
        return html + javascript

    @expose()
    def get_modal_appointment_role_day_of_week(self, *args, **kwargs):
        branch_day_of_week_id = kwargs.get('branch_day_of_week_id', None)
        appointment_role_id = kwargs.get('appointment_role_id', None)
        branch_day_of_week = None
        hidden_input = ''
        if branch_day_of_week_id:
            branch_day_of_week = BranchDayOfWeek.by_id(branch_day_of_week_id)
            hidden_input = get_hidden_input(**{'id': 'branch_day_of_week_id', 'value': branch_day_of_week_id})


        selectbox_appointment_duration = self.get_selectbox_appointment_duration(**kwargs)
        selectbox_day_of_week = self.get_selectbox_day_of_week(**kwargs)
        selectbox_appointment_time = self.get_selectbox_appointment_time(**kwargs)

        html = f"""
                <div class="modal fade" id="dialog_appointment_role_day_of_week" tabindex="-1" role="dialog" aria-labelledby="mybranch_day_of_weekLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered modal-lg">
                        <div class="modal-content">
                            <div class="modal-header">
                                <div class="col-md-12">
                                    <h4 class="card-title">New Appointment Role Day Of Week</h4>
                                </div>
                            </div>
                            <div class="modal-body">
                                <form id='form_appointment_role_day_of_week'>
                                {hidden_input}
                          <input type="hidden" id="appointment_role_id" name="appointment_role_id" class="form-control" value="{appointment_role_id}">
                        <div class="col-md-12">
        					<div class="form-group row">
        						<label class="col-md-3 col-form-label" required for="day_of_week">Day Of Week</label>
        						<div class="col-md-9">
        						{selectbox_day_of_week}
        						</div>
        					</div>
        				</div>
                        <div class="col-md-12">
        					<div class="form-group row">
        						<label class="col-md-3 col-form-label" required for="appointment_duration_id">Appointment Duration</label>
        						<div class="col-md-9">
        						{selectbox_appointment_duration}
        						</div>
        					</div>
        				</div>
                        <div class="col-md-12">
        					<div class="form-group row">
        						<label class="col-md-3 col-form-label" required for="appointment_time_id">Appointment Time</label>
        						<div class="col-md-9">
        						{selectbox_appointment_time}
        						</div>
        					</div>
        				</div>
                                </form>
                            </div>
                            <div class="modal-footer">
                                <button id='save_appointment_role_day_of_week' class="btn btn-primary">Save</button>
                                <button class="btn btn-outline-primary appointment_role_day_of_week_back">Cancel</button>
                            </div>
                        </div>
                    </div>
                </div>
                """
        javascript = """
        <script src=''>
            var form_id = '#form_appointment_role_day_of_week'
            setFormValidation(form_id);
            $('#save_appointment_role_day_of_week').click(function(){
                var valid = FormIsValid(form_id);
                if(valid){
                    var formserial = $(form_id).serialize();
                    $.post('/appointment/save_appointment_role_day_of_week?', formserial, function(data){
                        var result = JSON.parse(data);
                        $('#dialog_appointment_role_day_of_week').modal('hide');
                        if(result.success){
                            showNotification(result.status, result.data);
                            var kwargs = {'appointment_role_id' :result.appointment_role_id,};
                            $('#tab_appointment_role_day_of_week').load('/appointment/get_appointment_role_day_of_week_htmltbl', kwargs, function(data){
                                $('.nav-link[href="#tab_appointment_role_day_of_week"]').trigger('click');
                                return false;
                            });
                        };
                        return false;
                    });
                }
            });
            $('.appointment_role_day_of_week_back').click(function(){
                $('#dialog_appointment_role_day_of_week').modal('hide');
            });
            $('#dialog_appointment_role_day_of_week').modal();
        </script>
        """
        return html+javascript

    @expose()
    def save_appointment_role_day_of_week(self, *args, **kwargs):
        usernow = request.identity.get('user', None)
        branch_day_of_week_id = kwargs.get('branch_day_of_week_id', None)
        appointment_role_id = kwargs.get('appointment_role_id', None)
        outputdict = {'success': False}
        if not branch_day_of_week_id:
            this = AppointmentRoleDayOfWeek()
            this.appointment_role_id = appointment_role_id
            this.day_of_week_type_id = kwargs.get('day_of_week_type_id', None)
            this.appointment_duration_id = kwargs.get('appointment_duration_id', None)
            this.appointment_time_id = kwargs.get('appointment_time_id', None)
            this.added_by = usernow.id
            DBSession.add(this)
            DBSession.flush()

            outputdict['success'] = True
            outputdict['data'] = "Successfully added new appointment role day of week"
            outputdict['status'] = 'success'
            outputdict['appointment_role_id'] = appointment_role_id
            return json.dumps(outputdict)
        else:
            this = AppointmentRoleDayOfWeek.by_id(branch_day_of_week_id)
            if not this: return 'false'
            this.appointment_role_id = appointment_role_id
            this.day_of_week_type_id = kwargs.get('day_of_week_type_id', None)
            this.appointment_duration_id = kwargs.get('appointment_duration_id', None)
            this.appointment_time_id = kwargs.get('appointment_time_id', None)
            DBSession.flush()
            outputdict['success'] = True
            outputdict['data'] = "Successfully added edited appointment day of week "
            outputdict['status'] = 'success'
            outputdict['appointment_role_id'] = appointment_role_id
            return json.dumps(outputdict)

        outputdict['data'] = "Failed "
        outputdict['status'] = 'danger'
        outputdict['appointment_role_id'] = appointment_role_id
        return json.dumps(outputdict)
