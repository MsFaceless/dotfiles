# -*- coding: utf-8 -*-
"""
File: tg_decorators.py
Author: Camilla Buys
Company: Dotxml
email: camilla at dotxmltech dot com
Github: Not yet
"""

import time
import logging
from functools import wraps
from tg import request
from calabash.model import DBSession, Application, CurrentApplication, WalletApplicationLink

LOGGER = logging.getLogger(__name__)

from calabash.lib.html_utils import error_response

def safe_headers(func):
    @wraps(func)
    def check_safe_headers(*args, **kwargs):
        try:
            guid = request.headers.get('guid', None)
        except Exception as e:
            LOGGER.warning(f"Houston, we have a bit of a problem.\n{e}\n" + "_"*80)
            guid = None
            return func(*args, **kwargs) # TODO REMOVE THIS FOR PRODUCTION

        if not guid:
            return error_response('Validating headers failed.')

        valid = WalletApplicationLink.by_attr_first('guid', guid)
        if not valid:
            valid = Application.by_attr_first('guid', guid)
        if not valid:
            return error_response('Validating headers failed.')

        current = CurrentApplication.latest_entry()
        current.application_id = valid.id
        DBSession.flush()
        return func(*args, **kwargs)
    return check_safe_headers

def time_it(func):
    @wraps(func)
    def wrapper(*args, **kwargs):
        funcname = func.__code__.co_name
        start = time.time()
        result = func(*args, **kwargs)
        end = time.time()
        LOGGER.info(f"{funcname} ran in {end - start}")
        return result
    return wrapper
