# -*- coding: utf-8 -*-
"""Setup controller module"""

from tg import predicates, require
from tg import expose, redirect, validate, flash, url, request

from tg.i18n import ugettext as _
from tg.i18n import lazy_ugettext as l_

from rocket.model import *

from sqlalchemy import func, desc, asc

from rocket.lib.tg_utils import *
from rocket.lib.base import BaseController

from rocket.lib.type_utils import TypeDictionary as TypeDict

LIMIT = 20


class SetupController(BaseController):

    def __init__(self, *args, **kwargs):
        pass

    @require(predicates.not_anonymous())
    @expose('rocket.templates.generic')
    def system_documents(self, *args, **kwargs):
        html = self.get_active_system_document_html(*args, **kwargs)
        javascript = self.get_javascript_system_document_onload()
        title = "System_documents"
        return dict(title=title, html=html, javascript=javascript)

    @expose()
    def get_active_system_document_html(self, *args, **kwargs):
        usernow = request.identity['user']
        dbase_query = self.get_active_system_document_list(*args, **kwargs)
        outputlist = []
        for item in dbase_query:
            name = TypeDict().get_pretty_name("system_document_type", item.system_document_type_id)
            outputlist.append({
                'name': "<div class='edit tbl_system_document_edit' tbl_system_document_id='{1}'>{0}</div>".format(
                    item.name, item.id),
                'description': item.description,
                'system_document_type_id': name,
            })
        dbcolumnlist = [
            'name',
            'description',
            'system_document_type_id',
        ]
        theadlist = [
            'Name',
            'Description',
            'Document Type',
        ]
        tbl_system_document_table = build_html_table(outputlist, dbcolumnlist, theadlist, "tbl_system_document_table")
        html = f"""
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                    <div class="card-header">
                        <div class="row d-flex">
                            <div class="col-md-6">
                                <h4 class="card-title">System Documents</h4>
                            </div>
                            <div class="col-md-6 text-right">
                                <button id="create_new_system_document" class="btn btn-primary ml-auto">Create a new System Document</button>
                            </div>
                        </div>
                        <div class="row d-flex align-items-center">
                            <div class="col-md-4">
                                <input type="text" class="form-control search" name="searchphrase" placeholder="Search">
                            </div>
                            <div class="col-md-8">
                                <button class="btn btn-primary action_search">Search</button>
                                <button class="btn btn-primary">Reset</button>
                            </div>
                        </div>
                        <hr>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            {tbl_system_document_table}
                        </div>
                    </div>
                    </div>
                </div>
                <div id='dialogdiv'></div>
            """
        return html

    @expose()
    def get_javascript_system_document_onload(self, *args, **kwargs):
        javascript = """
            $("#create_new_system_document").click(function(){
                $('#dialogdiv').load('/setup/get_modal_new_system_document?', function(data){
                    return false;
                });
            });
            $(".tbl_system_document_edit").click(function(){
                var kwargs = 'tbl_system_document_id='+$(this).attr('tbl_system_document_id');
                $('#dialogdiv').load('/setup/get_modal_edit_system_document?'+kwargs, function(data){
                    return false;
                });
            });
            """
        return javascript

    def get_selectbox_system_document_type(self, *args, **kwargs):
        kwargs["id"] = "system_document_type_id"
        kwargs['outputdict'] = TypeDict().get_dict_of_types("system_document_type")
        return create_selectbox_html(**kwargs)

    @expose()
    def get_modal_new_system_document(self, *args, **kwargs):
        selectbox_system_document_type = self.get_selectbox_system_document_type()
        html = f"""
            <div class="modal fade" id="dialog_new_system_document" tabindex="-1" role="dialog" aria-labelledby="mytbl_system_documentLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <div class="col-md-6">
                                <h4 class="card-title">New System Document</h4>
                            </div>
                        </div>
                        <div class="modal-body">
                            <form id='form_new_system_document'>
                                    <div class="col-md-6">
    					<div class="form-group row">
    						<label class="col-md-3 col-form-label" required for="name">Name</label>
    						<div class="col-md-9">
    							<input id="name" type="text" name="name" class="form-control" required='true'>
    						</div>
    					</div>
    				</div>
                                    <div class="col-md-6">
    					<div class="form-group row">
    						<label class="col-md-3 col-form-label" required for="description">Description</label>
    						<div class="col-md-9">
    							<input id="description" type="text" name="description" class="form-control" required='true'>
    						</div>
    					</div>
    				</div>
                                    <div class="col-md-6">
    					<div class="form-group row">
    						<label class="col-md-3 col-form-label" required for="system_document_type_id">Document Type</label>
    						<div class="col-md-9">
    							{selectbox_system_document_type}
    						</div>
    					</div>
    				</div>
                            </form>
                        </div>
                        <div class="modal-footer">
                            <button id='save_new_system_document' class="btn btn-primary">Save</button>
                            <button class="btn btn-outline-primary tbl_system_document_back">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
            """
        javascript = """
            <script>
            setFormValidation('#form_new_system_document');
            $('#save_new_system_document').click(function(){
                 var valid = FormIsValid("#form_new_system_document");
                 if(valid){
                    var formserial = getFormData('#form_new_system_document');
                    var data = {data : JSON.stringify(formserial)};

                    $.post('/setup/save_new_system_document?', data, function(data){
                        var result = JSON.parse(data);
                        if(result.success === true){
                            $.redirect('/setup/system_documents');
                        };
                        return false;
                    });
                 }
            });
            $('.tbl_system_document_back').click(function(){
                $('#dialog_new_system_document').modal('hide');
            });
            $('#dialog_new_system_document').modal();
            </script>
         	"""
        return html + javascript

    @expose()
    def get_modal_edit_system_document(self, *args, **kwargs):
        tbl_system_document_id = kwargs.get('tbl_system_document_id', None)
        if not tbl_system_document_id:
            return ''
        this = self.get_system_document_by_id(*args, **kwargs)
        if not this:
            return ''
        checked = 'checked' if this.active else ''
        html = f"""
            <div class="modal fade" id="dialog_edit_system_document" tabindex="-1" role="dialog" aria-labelledby="mytbl_system_documentLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <div class="col-md-6">
                                <h4 class="card-title">Edit System Document</h4>
                            </div>
                        </div>
                        <div class="modal-body">
                            <form id='form_edit_system_document'>
                                <div style='display: none' class="col-md-6">
    					<div class="form-group row">
    						<label class="col-md-3 col-form-label" required for="tbl_system_document_id">Id</label>
    						<div class="col-md-9">
    							<input id="id" type="text" name="tbl_system_document_id" value="{this.id}" class="form-control" required='true'>
    						</div>
    					</div>
    				</div>
                                <div class="col-md-6">
    					<div class="form-group row">
    						<label class="col-md-3 col-form-label" required for="name">Name</label>
    						<div class="col-md-9">
    							<input id="name" type="text" name="name" value="{this.name}" class="form-control" required='true'>
    						</div>
    					</div>
    				</div>
                                <div class="col-md-6">
    					<div class="form-group row">
    						<label class="col-md-3 col-form-label" required for="description">Description</label>
    						<div class="col-md-9">
    							<input id="description" type="text" name="description" value="{this.description}" class="form-control" required='true'>
    						</div>
    					</div>
    				</div>
                                <div class="col-md-6">
    					<div class="form-group row">
    						<label class="col-md-3 col-form-label" required for="system_document_type_id">Document Type</label>
    						<div class="col-md-9">
    							<input id="system_document_type_id" type="text" name="system_document_type_id" value="{this.system_document_type_id}" class="form-control" required='true'>
    						</div>
    					</div>
    				</div>
                                <div class="form-group row">
                                  <label class="col-4 col-form-label" for="active" required>Active</label>
                                  <div class="col-8"><div class="form-check">
                                    <input class="form-check-input" type="checkbox" name="active" id="active" {checked}/></div>
                                  </div>
                                </div>
                            </form>
                        </div>
                        <div class="modal-footer">
                            <button id='save_edit_system_document' class="btn btn-primary">Save</button>
                            <button class="btn btn-outline-primary tbl_system_document_back">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
            """
        javascript = """
            <script>
            setFormValidation('#form_edit_system_document');
            $('#save_edit_system_document').click(function(){
                 var valid = FormIsValid("#form_edit_system_document");
                 if(valid){
                    var formserial = getFormData('#form_edit_system_document');
                    var data = {data : JSON.stringify(formserial)};

                    $.post('/setup/save_edit_system_document?', data, function(data){
                        var result = JSON.parse(data);
                        if(result.success === true){
                            $.redirect('/setup/system_documents');
                        };
                        return false;
                    });
                 }
            });
            $('.tbl_system_document_back').click(function(){
                $('#dialog_edit_system_document').modal('hide');
            });
            $('#dialog_edit_system_document').modal();
            </script>
         	"""
        return html + javascript

    @expose()
    def save_new_system_document(self, *args, **kwargs):
        data = json.loads(kwargs.get('data', json.dumps({})))
        if not data:
            return json.dumps({'success': False, 'data': 'No data provided'})
        usernow = request.identity['user']
        this = SystemDocument()
        this.name = data.get('name', None)
        this.description = data.get('description', None)
        this.system_document_type_id = data.get('system_document_type_id', None)
        this.added_by = usernow.id
        DBSession.add(this)
        DBSession.flush()
        return json.dumps({'success': True, 'data': this.id})

    @expose()
    def save_edit_system_document(self, *args, **kwargs):
        data = json.loads(kwargs.get('data', json.dumps({})))
        if not data:
            return json.dumps({'success': False, 'data': 'No data provided'})
        usernow = request.identity['user']
        this = self.get_system_document_by_id(**data)
        if not this:
            return json.dumps({'success': False, 'data': 'No tbl_system_document found for id provided'})
        this.name = data.get('name', None)
        this.description = data.get('description', None)
        this.system_document_type_id = data.get('system_document_type_id', None)
        if not data.get('active', None):
            this.active = False
        DBSession.flush()
        return json.dumps({'success': True, 'data': this.id})

    @expose()
    def get_system_document_by_id(self, *args, **kwargs):
        return DBSession.query(SystemDocument). \
            filter(SystemDocument.id == kwargs.get('tbl_system_document_id', None)). \
            first()

    @expose()
    def get_active_system_document_list(self, *args, **kwargs):
        searchphrase = kwargs.get('searchphrase', None)

        name = kwargs.get('name', None)
        description = kwargs.get('description', None)
        tbl_system_document_system_document_type_id = kwargs.get('tbl_system_document_system_document_type_id', None)

        if name:
            searchphrase = "%" + kwargs['name'] + "%"
            dbase_query = DBSession.query(SystemDocument). \
                filter(SystemDocument.name.like(searchphrase)). \
                filter(SystemDocument.active == 1). \
                order_by(asc(SystemDocument.name)).limit(LIMIT)
        if description:
            searchphrase = "%" + kwargs['description'] + "%"
            dbase_query = DBSession.query(SystemDocument). \
                filter(SystemDocument.description.like(searchphrase)). \
                filter(SystemDocument.active == 1). \
                order_by(asc(SystemDocument.description)).limit(LIMIT)
        if tbl_system_document_system_document_type_id:
            dbase_query = DBSession.query(SystemDocument). \
                filter(
                SystemDocument.tbl_system_document_system_document_type_id == tbl_system_document_system_document_type_id). \
                filter(SystemDocument.active == 1). \
                order_by(asc(SystemDocument.tbl_system_document_id)).limit(LIMIT)
        else:
            dbase_query = DBSession.query(SystemDocument). \
                filter(SystemDocument.active == 1). \
                order_by(asc(SystemDocument.id)). \
                limit(LIMIT)
        return dbase_query

    @require(predicates.not_anonymous())
    @expose('rocket.templates.generic')
    def currency_rates(self, *args, **kwargs):
        html = self.get_active_currency_rates_html(*args, **kwargs)
        javascript = self.get_javascript_currency_rates_onload()
        title = _("Currencies & Rates")
        return dict(title=title, html=html, javascript=javascript)

    @expose()
    def get_active_currency_rates_html(self, *args, **kwargs):
        html = f"""
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                <div class="card-header">
                    <div class="row d-flex">
                        <div class="col-md-6">
                            <h4 class="card-title">{_('Currencies & Rates')}</h4>
                        </div>
                    </div>
                    <hr>
                </div>
                <div class="card-body">
                </div>
            </div>
        </div>
        """
        return html

    @expose()
    def get_javascript_currency_rates_onload(self, *args, **kwargs):
        javascript = """
        """
        return javascript

    @require(predicates.not_anonymous())
    @expose('rocket.templates.generic')
    def intermediaries(self, *args, **kwargs):
        html = self.get_active_intermediaries_html(*args, **kwargs)
        javascript = self.get_javascript_intermediaries_onload()
        title = _("Intermediaries")
        return dict(title=title, html=html, javascript=javascript)

    @expose()
    def get_active_intermediaries_html(self, *args, **kwargs):
        html = f"""
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                <div class="card-header">
                    <div class="row d-flex">
                        <div class="col-md-6">
                            <h4 class="card-title">{_('Intermediaries')}</h4>
                        </div>
                    </div>
                    <hr>
                </div>
                <div class="card-body">
                </div>
            </div>
        </div>
        """
        return html

    @expose()
    def get_javascript_intermediaries_onload(self, *args, **kwargs):
        javascript = """
        """
        return javascript

    @require(predicates.not_anonymous())
    @expose('rocket.templates.generic')
    def banks(self, *args, **kwargs):
        html = self.get_active_banks_html(*args, **kwargs)
        javascript = self.get_javascript_banks_onload()
        title = _("Banks")
        return dict(title=title, html=html, javascript=javascript)

    @expose()
    def get_active_banks_html(self, *args, **kwargs):
        html = f"""
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                <div class="card-header">
                    <div class="row d-flex">
                        <div class="col-md-6">
                            <h4 class="card-title">{_('Banks')}</h4>
                        </div>
                    </div>
                    <hr>
                </div>
                <div class="card-body">
                </div>
            </div>
        </div>
        """
        return html

    @expose()
    def get_javascript_banks_onload(self, *args, **kwargs):
        javascript = """
        """
        return javascript

    @require(predicates.not_anonymous())
    @expose('rocket.templates.generic')
    def location(self, *args, **kwargs):
        html = self.get_active_location_html(*args, **kwargs)
        javascript = self.get_javascript_location_onload()
        title = _("Region / District / Centre")
        return dict(title=title, html=html, javascript=javascript)

    @expose()
    def get_active_location_html(self, *args, **kwargs):
        html = f"""
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                <div class="card-header">
                    <div class="row d-flex">
                        <div class="col-md-6">
                            <h4 class="card-title">{_('Region / District / Centre')}</h4>
                        </div>
                    </div>
                    <hr>
                </div>
                <div class="card-body">
                </div>
            </div>
        </div>
        """
        return html

    @expose()
    def get_javascript_location_onload(self, *args, **kwargs):
        javascript = """
        """
        return javascript

###############################################################################
# Loaders Questions and Answers
###############################################################################

    @require(predicates.not_anonymous())
    @expose('rocket.templates.generic')
    def loaders(self, *args, **kwargs):
        html = self.get_product_loaders_html(*args, **kwargs)
        javascript = self.get_javascript_product_loaders_onload()
        title = _("Product Loaders")
        return dict(title=title, html=html, javascript=javascript)

    @expose()
    def get_product_loaders_html(self, *args, **kwargs):
        outputlist = []
        dbase_query = self.get_loader_questions_list(**kwargs)
        td = TypeDict()
        for item in dbase_query:
            loader_question_premium_effect_type = td.get_pretty_name('loader_question_premium_effect_type', item.loader_question_premium_effect_type_id)
            outputlist.append({
                'loader_name': f"<div class='edit loader_edit' loader_id='{item.id}'>{item.text}</div>",
                'is_active': item.active,
                'loader_question_premium_effect_type': loader_question_premium_effect_type
            })
        dbcolumnlist = [
            'loader_name',
            'loader_question_premium_effect_type',
            'is_active',
        ]
        theadlist = [
            'Loader Name',
            'Question Premium Effect Type',
            'Is Active',
        ]
        tdclasslist = [
            'action_link',
            'text-center',
            'text-right',
        ]
        tbl_loaderedit_table = build_html_table(outputlist, dbcolumnlist, theadlist, "loader_table", tdclasslist)

        html = f"""
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                <div class="card-header">
                    <div class="row d-flex">
                        <div class="col-md-6">
                            <h4 class="card-title">{_('Product Loaders')}</h4>
                        </div>
                        <div class="col-md-6 text-right">
                            <button id="create_new_tbl_product_loader" class="btn btn-primary ml-auto">{_('New Product Loader')}</button>
                        </div>
                    </div>
                    <div class="row d-flex align-items-center">
                        <div class="col-md-4">
                            <input type="text" class="form-control search" name="searchphrase" placeholder="Search">
                        </div>
                        <div class="col-md-8">
                            <button class="btn btn-primary action_search">{_('Search')}</button>
                            <button class="btn btn-primary">Reset</button>
                        </div>
                    </div>
                    <hr>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                     {tbl_loaderedit_table}
                    </div>
                </div>
                </div>
            </div>
            <div id='dialogdiv'></div>
        """
        return html

    @expose()
    def get_javascript_product_loaders_onload(self, *args, **kwargs):
        javascript = """
          $(".loader_edit").click(function(){
            var data = {loader_id : $(this).attr('loader_id')};
            $.redirect('/setup/get_loader_edit', data);
        });
          $("#create_new_tbl_product_loader").click(function(){
            $('#dialogdiv').load('/setup/get_modal_new_product_loader?', function(data){
                return false;
            });
        });
        """
        return javascript

    @expose()
    def get_modal_new_product_loader(self, *args, **kwargs):
        dropdown_question_premium_effect = self.get_selectbox_question_premium_effect()
        html = f"""
           <div class="modal fade" id="dialog_new_loader" tabindex="-1" role="dialog" aria-labelledby="myloaderLabel" aria-hidden="true">
               <div class="modal-dialog modal-dialog-centered modal-lg">
                   <div class="modal-content">
                       <div class="modal-header">
                           <div class="col-md-6">
                               <h4 class="card-title">New Loader</h4>
                           </div>
                       </div>
                       <div class="modal-body">
                           <form id='form_new_loader' class="d-flex flex-wrap">
                               <div class="col-md-12">
                                   <div class="form-group row">
                                       <label class="col-md-3 col-form-label" required for="loader_name">Loader Name</label>
                                       <div class="col-md-9">
                                           <input id="loader_name" type="text" name="loader_name" maxlength='100' class="form-control" required='true'>
                                       </div>
                                   </div>
                               </div>
                               <div class="col-md-12">
                                   <div class="form-group row">
                                       <label class="col-md-3 col-form-label" for="loader_question_premium_effect_type_id">{_('Question Premium Effect Type')}</label>
                                         <div class="col-md-9">
                                          {dropdown_question_premium_effect}
                                        </div>
                                   </div>
                               </div>

                           </form>
                       </div>
                       <div class="modal-footer">
                           <button id='save_new_loader' class="btn btn-primary">Save</button>
                       <button class="btn btn-outline-primary tbl_product_loader_back">Cancel</button>
                       </div>
                   </div>
               </div>
           </div>
           """
        javascript = """
       <script>
       setFormValidation('#form_new_loader');
        $('#save_new_loader').click(function(){
             var valid = FormIsValid("#form_new_loader");
             if(valid){
                var formserial = $('#form_new_loader').serialize();
                $.post('/setup/save_new_loader?', formserial, function(data){
                    var result = JSON.parse(data);
                    if(result.success === true){
                      $.redirect(result.redirect, {'loader_id' : result.loader_id});
                    };
                    return false;
                });
             }
        });
       $('.tbl_product_loader_back').click(function(){
            $('#dialog_new_loader').modal('hide');
        });
       $('#dialog_new_loader').modal();
         </script>

        	"""
        return html + javascript


    @expose()
    def save_new_loader(self, *args, **kwargs):
        usernow = request.identity['user']

        this = LoaderQuestion()
        this.text = kwargs.get('loader_name', None)
        this.loader_question_premium_effect_type_id = kwargs.get('loader_question_premium_effect_type_id')
        this.added_by = usernow.id
        DBSession.add(this)
        DBSession.flush()

        redirect_url = '/setup/get_loader_edit'

        return json.dumps({'success' : True, 'loader_id' : this.id, 'redirect' : redirect_url})


    def get_selectbox_question_premium_effect(self, selected=None, *args, **kwargs):
        kwargs['id'] = 'loader_question_premium_effect_type_id'
        kwargs['selected'] =selected
        kwargs['outputdict'] = TypeDict().get_dict_of_types("loader_question_premium_effect_type")
        return create_selectbox_html(**kwargs)

    @expose()
    def get_loader_questions_list(self, *args, **kwargs):
        usernow = request.identity.get('user')
        searchphrase = kwargs.get('searchphrase', None)
        if searchphrase:
            searchterm = f'%{searchphrase}%'
            dbase_query = DBSession.query(LoaderQuestion). \
                filter(LoaderQuestion.text.like(searchterm)). \
                filter(LoaderQuestion.active == kwargs.get('active', True)). \
                order_by(asc(LoaderQuestion.text)). \
                limit(LIMIT)
        else:
            dbase_query = DBSession.query(LoaderQuestion). \
                filter(LoaderQuestion.active == kwargs.get('active', True)). \
                order_by(asc(LoaderQuestion.text)). \
                limit(LIMIT)
        return dbase_query


    @require(predicates.not_anonymous())
    @expose('rocket.templates.generic')
    def get_loader_edit(self, *args, **kwargs):

        loader_id = kwargs.get('loader_id', None)
        if not loader_id: redirect('/setup/loaders')
        html = self.get_edit_loader_html(*args, **kwargs)
        javascript = self.get_javascript_loader_onload()
        title = self.get_loader_title_html(loader_id)

        return dict(title=title, html=html, javascript=javascript)


    def get_loader_title_html(self, loader_id=None, *args, **kwargs):
        if not loader_id: return ''
        loader = LoaderQuestion.by_id(loader_id)
        if not loader: return ''
        return f"Edit: {loader.text}"


    @expose('rocket.templates.generic')
    def get_edit_loader_html(self, *args, **kwargs):
        loader_id = kwargs.get('loader_id', None)
        loader = LoaderQuestion.by_id(loader_id)
        checked = 'checked' if loader.active else ''
        td = TypeDict()

        dropdown_question_premium_effect = self.get_selectbox_question_premium_effect(loader.loader_question_premium_effect_type_id)
        selected_type = td.get_pretty_name('loader_question_premium_effect_type', loader.loader_question_premium_effect_type_id)

        detail_html = self.get_loader_question_answer_tblhtml(**kwargs)

        html = f"""
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header d-flex">
                        <div class="col-md-6">
                            <h4 class="card-title">Edit '{loader.text}'</h4>
                        </div>
                        <div class="col-md-6 text-right">
                            <button class="btn btn-primary ml-auto action_back loader_back">Back to Loader List</button>
                        </div>
                    </div>
                    <div class="card-body">
                        <form id='form_edit_loader' class="d-flex flex-wrap">
                            <div style='display: none' class="col-md-6">
                                <div class="form-group row">
                                    <label class="col-md-3 col-form-label" required for="loader_id">Id</label>
                                    <div class="col-md-9">
                                        <input id="id" type="text" name="loader_id" value="{loader.id}" class="form-control"
                                            required='true'>
                                      <input id="selected_type" type="text" name="selected_type" value="{selected_type}" class="form-control"
                                            required='true'>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group row">
                                    <label class="col-md-6 col-form-label" required for="loader_name">Loader Name</label>
                                    <div class="col-md-6">
                                        <input id="loader_name" type="text" maxlength='100' name="loader_name" value="{loader.text}"
                                            class="form-control" required='true'>
                                    </div>
                                </div>
                            </div>

                           <div class="col-md-6">
                                <div class="form-group row">
                                    <label class="col-md-6 col-form-label" required for="loader_question_premium_effect_type_id">Question Premium Effect Type</label>
                                    <div class="col-md-6">
                                        {dropdown_question_premium_effect}
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group row">
                                    <label class="col-md-3 col-form-label">Active</label>
                                    <div class="form-check">
                                        <label class="form-check-label">
                                            <input class="form-check-input" type="checkbox" name='active' {checked}>
                                            <span class="form-check-sign"></span>
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
          <div id="div_loader_detail" class="row">
             {detail_html}
          </div>
          <div id='dialogdiv'>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-body">
                        <button id='save_edit_loader' class="btn btn-primary">Save</button>
                        <button class="btn btn-outline-primary loader_back">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
        """
        return html

    @expose()
    def get_loader_question_answer_tblhtml(self, *args, **kwargs):
        loader_id = kwargs.get('loader_id', None)
        outputlist = []
        dbase_query = []
        td = TypeDict()
        for item in dbase_query:

            outputlist.append({
                'answer_text': f"<div class='edit loader_edit' loader_id='{item.id}'>{item.text}</div>",
                'value': item.active,
                'is_active': item.active,

            })
        if (''):
            print()

        dbcolumnlist = [
            'answer_text',
            'value',
            'is_active',
        ]
        theadlist = [
            'Answer',
            'Type',
            'Is Active',
        ]
        tdclasslist = [
            'action_link',
            'text-center',
            'text-right',
        ]
        tbl_loaderedit_table = build_html_table(outputlist, dbcolumnlist, theadlist, "loader_table", tdclasslist)
        html = f"""
               <div class="col-md-12">
            <div class="card mh_260">
                <div class="card-header">
                    <div class="row d-flex">
                        <div class="col-md-6">
                            <h4 class="card-title">Loader Detail</h4>
                        </div>
                        <div class="col-md-6 text-right">
                            <button id="create_new_loaderdetail" class="btn btn-primary ml-auto">New Loader Detail</button>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div style='display: none' class="col-md-12">
                        <div class="form-group row">
                            <label class="col-md-3 col-form-label" required for="loader_id">Id</label>
                            <div class="col-md-9">
                                <input id="loader_id" type="text" name="loader_id" value="{loader_id}" class="form-control" required='true'>
                            </div>
                        </div>
                    </div>
                    <div class="table-responsive">
                        {tbl_loaderedit_table}
                    </div>
                </div>
            </div>
        </div>
        <div id='dialogdiv'></div>
           """
        return html

    @expose()
    def get_javascript_loader_onload(self, *args, **kwargs):
        javascript = """
            $("#create_new_loaderdetail").click(function(){
                var kwargs = {'loader_id': $('#loader_id').attr('value'), 'selected_type': $('#selected_type').attr('value'),
                }
              console.log(kwargs);
                $('#dialogdiv').load('/setup/get_modal_new_loaderdetail?', kwargs, function(data){
                    return false;
                });
            });
        """
        return javascript

    @expose()
    def get_modal_new_loaderdetail(self, *args, **kwargs):
        loader_id = kwargs.get('loader_id', None)
        selected_type= kwargs.get('selected_type', None)
        input_field= selected_type.lower()
        html = f"""
        <div class="modal fade" id="dialog_new_loaderdetail" tabindex="-1" role="dialog" aria-labelledby="myloaderdetailLabel"
            aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="col-md-6">
                            <h4 class="card-title">New Loader Detail</h4>
                        </div>
                    </div>
                    <div class="modal-body">
                        <form id='form_new_loaderdetail'>
                            <div class="col-md-12 hidden">
                                <div class="form-group row">
                                    <label class="col-md-3 col-form-label" required for="loader_id">Loader _Id</label>
                                    <div class="col-md-9">
                                        <input id="loader_id" type="text" name="loader_id" class="form-control" required='true' value='{loader_id}'>
                                        <input id="selected_type" type="text" name="selected_type" class="form-control" required='true' value='{selected_type}'>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                    <div class="form-group row">
                                      <label class="col-md-4 col-form-label" required for="answer_text">Answer</label>
                                      <div class="col-md-8">
                                         <input id="answer_text" type="text" name="answer_text" class="form-control" required='true'>
                                       </div>
                                    </div>
                             </div>

                               <div class="col-md-12">
                                    <div id="hide_field" >
                                      <div class="form-group row">
                                         <label class="col-md-4 col-form-label" for="">{selected_type}</label>
                                            <div class="col-md-8">
                                              <input id="{input_field}" type="text" name="{input_field}" class="form-control" required='true'>
                                            </div>
                                     </div>
                                    </div>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button id='save_new_loaderdetail' class="btn btn-primary">Save</button>
                        <button class="btn btn-outline-primary loaderdetail_back">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
        """
        javascript = """
        <script>
        $(document).ready(function(){
            if($('#selected_type').attr('value') =='None')
            {
              $("#hide_field").hide();
            }
            setFormValidation('#form_new_loaderdetail');
            $('#save_new_loaderdetail').click(function(){
                 var valid = FormIsValid("#form_new_loaderdetail");
                 if(valid){
                    var formserial = $('#form_new_loaderdetail').serialize();
                    $.post('/setup/save_new_loaderdetail?', formserial, function(data){
                        var result = JSON.parse(data);
                        if(result.success === true){
                           $.redirect(result.redirect, {'loader_id' : result.loader_id});
                        };
                        return false;
                    });
                 }
            });
            $('.loaderdetail_back').click(function(){
                $('#dialog_new_loaderdetail').modal('hide');
            });
            $('#dialog_new_loaderdetail').modal();
        });
        </script>
     	"""
        return html + javascript

    @expose()
    def save_new_loaderdetail(self, *args, **kwargs):

        dict_loader_question_answer = {
            'loader_question_id': kwargs.get('loader_id'),
            'answer_text': kwargs.get("answer_text"),
        }
        loader_question_answer_id = self.save_new_loader_question_answer(**dict_loader_question_answer)

        percentage = kwargs.get('percentage', None)
        if percentage:
            dict_percentage = {
                'loader_question_answer_id' : loader_question_answer_id,
                'percentage' : kwargs.get('percentage'),
            }
            self.save_new_tbl_loader_question_answer_percentage(**dict_percentage)
        amount = kwargs.get('amount', None)
        if amount:
            dict_amount = {
                'loader_question_answer_id': loader_question_answer_id,
                'amount' : kwargs.get("amount"),
            }
            self.save_new_loader_question_answer_amount(**dict_amount)

        loader_id= kwargs.get("loader_id")
        redirect_url = '/setup/get_loader_edit'

        return json.dumps({'success' : True, 'loader_id' : loader_id, 'redirect' : redirect_url})

    @expose()
    def save_new_loader_question_answer(self, *args, **kwargs):
        usernow = request.identity['user']
        this = LoaderQuestionAnswer()
        this.loader_question_id = kwargs.get('loader_question_id', None)
        this.answer_text = kwargs.get('answer_text', None)
        this.added_by = usernow.id
        DBSession.add(this)
        DBSession.flush()
        return this.id

    @expose()
    def save_new_loader_question_answer_amount(self, *args, **kwargs):
        usernow = request.identity['user']
        this = LoaderQuestionAnswerAmount()
        this.loader_question_answer_id = kwargs.get('loader_question_answer_id', None)
        this.amount = kwargs.get('amount', None)
        this.added_by = usernow.id
        DBSession.add(this)
        DBSession.flush()
        return this.id

    @expose()
    def save_new_tbl_loader_question_answer_percentage(self, *args, **kwargs):
        usernow = request.identity['user']
        this = LoaderQuestionAnswerPercentage()
        this.loader_question_answer_id = kwargs.get('loader_question_answer_id', None)
        this.percentage = kwargs.get('percentage', None)
        this.added_by = usernow.id
        DBSession.add(this)
        DBSession.flush()
        return this.id


###############################################################################
# Premium Rates
###############################################################################

    @require(predicates.not_anonymous())
    @expose('rocket.templates.generic')
    def premium_rates(self, *args, **kwargs):
        html = self.get_product_premium_rate_html(*args, **kwargs)
        javascript = self.get_javascript_tbl_product_premium_rate_onload()
        title = "Product Premium Rate"
        return dict(title=title, html=html, javascript=javascript)

    @expose()
    def get_product_premium_rate_html(self, *args, **kwargs):
        usernow = request.identity['user']
        dbase_query = self.get_product_premium_rate_list(*args, **kwargs)
        outputlist = []
        for item in dbase_query:
            outputlist.append({
                'code' : "<div class='edit tbl_product_premium_rate_edit' tbl_product_premium_rate_id='{1}'>{0}</div>".format(item.code, item.id),
                'name' : item.name,
                'base_value' : item.base_value, })

        dbcolumnlist=[
                'code',
                'name',
                'base_value',
                    ]
        theadlist=[
                'Code',
                'Name',
                'Base_Value',
                ]
        tbl_product_premium_rate_table = build_html_table(outputlist, dbcolumnlist, theadlist, "tbl_product_premium_rate_table")
        html = f"""
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                <div class="card-header">
                    <div class="row d-flex">
                        <div class="col-md-6">
                            <h4 class="card-title">{_('Product Premium Rates')}</h4>
                        </div>
                        <div class="col-md-6 text-right">
                            <button id="create_new_tbl_product_premium_rate" class="btn btn-primary ml-auto">{_('Create a new Product Premium Rate')}</button>
                        </div>
                    </div>
                    <div class="row d-flex align-items-center">
                        <div class="col-md-4">
                            <input type="text" class="form-control search" name="searchphrase" placeholder="Search">
                        </div>
                        <div class="col-md-8">
                            <button class="btn btn-primary action_search">Search</button>
                            <button class="btn btn-primary">Reset</button>
                        </div>
                    </div>
                    <hr>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        {tbl_product_premium_rate_table}
                    </div>
                </div>
                </div>
            </div>
            <div id='dialogdiv'></div>
        """
        return html

    @expose()
    def get_javascript_tbl_product_premium_rate_onload(self, *args, **kwargs):
        javascript = """
        $("#create_new_tbl_product_premium_rate").click(function(){
            $('#dialogdiv').load('/setup/get_modal_new_tbl_product_premium_rate?', function(data){
                return false;
            });
        });
       $(".tbl_product_premium_rate_edit").click(function(){
            var data = {product_premium_rate_id : $(this).attr('tbl_product_premium_rate_id')};
            $.redirect('/setup/get_product_premium_edit', data);
        });
        """
        return javascript

    @expose()
    def get_modal_new_tbl_product_premium_rate(self, *args, **kwargs):
        html = """
        <div class="modal fade" id="dialog_new_tbl_product_premium_rate" tabindex="-1" role="dialog" aria-labelledby="mytbl_product_premium_rateLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="col-md-6">
                            <h4 class="card-title">New Product Premium Rate</h4>
                        </div>
                    </div>
                    <div class="modal-body">
                        <form id='form_new_tbl_product_premium_rate'>
                                <div class="col-md-12">
					<div class="form-group row">
						<label class="col-md-4 col-form-label" required for="code">Code</label>
						<div class="col-md-8">
							<input id="code" type="text" name="code" class="form-control" required='true'>
						</div>
					</div>
				</div>
                                <div class="col-md-12">
					<div class="form-group row">
						<label class="col-md-4 col-form-label" required for="name">Name</label>
						<div class="col-md-8">
							<input id="name" type="text" name="name" class="form-control" required='true'>
						</div>
					</div>
				</div>
                                <div class="col-md-12">
					<div class="form-group row">
						<label class="col-md-4 col-form-label" required for="base_value">Base Value</label>
						<div class="col-md-8">
							<input id="base_value" type="text" name="base_value" class="form-control" required='true'>
						</div>
					</div>
				</div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button id='save_new_tbl_product_premium_rate' class="btn btn-primary">Save</button>
                        <button class="btn btn-outline-primary tbl_product_premium_rate_back">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
        """
        javascript = """
        <script>
        setFormValidation('#form_new_tbl_product_premium_rate');
        $('#save_new_tbl_product_premium_rate').click(function(){
             var valid = FormIsValid("#form_new_tbl_product_premium_rate");
             if(valid){
                var formserial = $('#form_new_tbl_product_premium_rate').serialize();

                $.post('/setup/save_new_tbl_product_premium_rate?', formserial, function(data){
                    var result = JSON.parse(data);
                    if(result.success === true){
                      console.log(result);
                      $.redirect(result.redirect, {'product_premium_rate_id' : result.product_premium_rate_id});
                      };
                  return false;
                });
             }
        });
        $('.tbl_product_premium_rate_back').click(function(){
            $('#dialog_new_tbl_product_premium_rate').modal('hide');
        });
        $('#dialog_new_tbl_product_premium_rate').modal();
        </script>
     	"""
        return html + javascript


    @expose()
    def save_new_tbl_product_premium_rate(self, *args, **kwargs):
        if not kwargs: return json.dumps({'success' : False, 'data' : 'No data provided'})
        usernow = request.identity['user']
        this = ProductPremiumRate()
        this.code = kwargs.get('code', None)
        this.name = kwargs.get('name', None)
        this.base_value = kwargs.get('base_value', None)
        this.added_by = usernow.id
        DBSession.add(this)
        DBSession.flush()

        redirect_url = '/setup/get_product_premium_edit'
        return json.dumps({'success': True, 'product_premium_rate_id': this.id, 'redirect': redirect_url})

    @expose()
    def save_edit_tbl_product_premium_rate(self, *args, **kwargs):
        data = json.loads(kwargs.get('data', json.dumps({})))
        if not data: return json.dumps({'success' : False, 'data' : 'No data provided'})
        usernow = request.identity['user']
        this = self.get_tbl_product_premium_rate_by_id(**data)
        if not this: return json.dumps({'success' : False, 'data' : 'No tbl_product_premium_rate found for id provided'})
        this.code = data.get('code', None)
        this.name = data.get('name', None)
        this.base_value = data.get('base_value', None)
        if not data.get('active', None): this.active = False
        DBSession.flush()
        return json.dumps({'success' : True, 'data' : this.id})

    @expose()
    def get_product_premium_rate_list(self, *args, **kwargs):
        searchphrase = kwargs.get('searchphrase', None)

        code = kwargs.get('code', None)
        name = kwargs.get('name', None)
        base_value = kwargs.get('base_value', None)

        if code:
            searchphrase = "%" + kwargs['code'] + "%"
            dbase_query = DBSession.query(ProductPremiumRate). \
                filter(ProductPremiumRate.code.like(searchphrase)). \
                filter(ProductPremiumRate.active == 1). \
                order_by(asc(ProductPremiumRate.code)).limit(LIMIT)
        if name:
            searchphrase = "%" + kwargs['name'] + "%"
            dbase_query = DBSession.query(ProductPremiumRate). \
                filter(ProductPremiumRate.name.like(searchphrase)). \
                filter(ProductPremiumRate.active == 1). \
                order_by(asc(ProductPremiumRate.name)).limit(LIMIT)
        if base_value:
            searchphrase = "%" + kwargs['base_value'] + "%"
            dbase_query = DBSession.query(ProductPremiumRate). \
                filter(ProductPremiumRate.base_value.like(searchphrase)). \
                filter(ProductPremiumRate.active == 1). \
                order_by(asc(ProductPremiumRate.base_value)).limit(LIMIT)
        else:
            dbase_query = DBSession.query(ProductPremiumRate). \
                filter(ProductPremiumRate.active == 1). \
                order_by(asc(ProductPremiumRate.id)). \
                limit(LIMIT)
        return dbase_query

    @require(predicates.not_anonymous())
    @expose('rocket.templates.generic')
    def get_product_premium_edit(self, *args, **kwargs):
        product_premium_rate_id = kwargs.get('product_premium_rate_id', None)
        if not product_premium_rate_id: redirect('/setup/premium_rates')
        html = self.get_edit_product_premium_rate_html(*args, **kwargs)
        javascript = self.get_javascript_product_premium_rate_edit_onload()
        title = self.get_product_premium_rate_title_html(product_premium_rate_id)

        return dict(title=title, html=html, javascript=javascript)

    def get_product_premium_rate_title_html(self, product_premium_rate_id=None, *args, **kwargs):
        if not product_premium_rate_id: return ''
        product_premium_rate = ProductPremiumRate.by_id(product_premium_rate_id)
        if not product_premium_rate: return ''
        return f"Edit: {product_premium_rate.name}"

    @expose('rocket.templates.generic')
    def get_edit_product_premium_rate_html(self, *args, **kwargs):
        product_premium_rate_id = kwargs.get('product_premium_rate_id', None)
        product_premium_rate = ProductPremiumRate.by_id(product_premium_rate_id)
        checked = 'checked' if product_premium_rate.active else ''

        product_premium_rate_line_item_table = self.get_premium_rate_line_item_html(**kwargs)

        html = f"""
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header d-flex">
                        <div class="col-md-6">
                            <h4 class="card-title">Edit '{product_premium_rate.name}'</h4>
                        </div>
                        <div class="col-md-6 text-right">
                            <button class="btn btn-primary ml-auto action_back loader_back">Back to Product Premium Rate List</button>
                        </div>
                    </div>
                    <div class="card-body">
                        <form id='form_edit_loader' class="d-flex flex-wrap">
                            <div style='display: none' class="col-md-6">
                                <div class="form-group row">
                                    <label class="col-md-3 col-form-label" required for="product_premium_rate_id">Id</label>
                                    <div class="col-md-9">
                                        <input id="product_premium_rate_id" type="text" name="product_premium_rate_id" value="{product_premium_rate.id}" class="form-control"
                                            required='true'>

                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group row">
                                    <label class="col-md-6 col-form-label" required for="name">{_('Product Premium Rate Name')}</label>
                                    <div class="col-md-6">
                                        <input id="name" type="text" maxlength='100' name="name" value="{product_premium_rate.name}"
                                            class="form-control" required='true'>
                                    </div>
                                </div>
                            </div>
                             <div class="col-md-6">
                                <div class="form-group row">
                                    <label class="col-md-6 col-form-label" required for="code">{_('Product Premium Rate Code')}</label>
                                    <div class="col-md-6">
                                        <input id="code" type="text" maxlength='100' name="code" value="{product_premium_rate.code}"
                                            class="form-control" required='true'>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group row">
                                    <label class="col-md-6 col-form-label" required for="base_value">{_('Base Value')}</label>
                                    <div class="col-md-6">
                                        <input id="base_value" type="text" maxlength='1000'  max="1000" name="base_value" value="{product_premium_rate.base_value}"
                                            class="form-control" required='true'>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group row">
                                    <label class="col-md-6 col-form-label">Active</label>
                                    <div class="form-check">
                                        <label class="form-check-label">
                                            <input class="form-check-input" type="checkbox" name='active' {checked}>
                                            <span class="form-check-sign"></span>
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        {product_premium_rate_line_item_table}
        <div id='dialogdiv'></div>

        <div class="col-md-12">
                <div class="card">
                    <div class="card-body">
                        <button id='save_edit_loader' class="btn btn-primary">Save</button>
                        <button class="btn btn-outline-primary loader_back">Cancel</button>
                    </div>
                </div>
            </div>


        """
        return html

    @expose()
    def get_premium_rate_line_item_html(self, *args, **kwargs):
        usernow = request.identity['user']
        dbase_query = self.get_premium_rate_line_item_list(*args, **kwargs)
        outputlist = []
        for item in dbase_query:
            outputlist.append({
                'product_premium_rate_id' : "<div class='edit tbl_product_premium_rate_line_item_edit' tbl_product_premium_rate_line_item_id='{1}'>{0}</div>".format(item.product_premium_rate_id, item.id),
                'gender_id' : item.gender_id,
                'maximum_age' : item.maximum_age,
                'minimum_age' : item.minimum_age,
                'rate_factor' : item.rate_factor,
                             })
        dbcolumnlist=[
                #'product_premium_rate_id',
                'gender_id',
                'maximum_age',
                'minimum_age',
                'rate_factor',
                    ]
        theadlist=[
               # 'Product_Premium_Rate_Id',
                'Gender',
                'Maximum Age',
                'Minimum Age',
                'Rate Factor',
                ]
        tdclasslist = [
            'action_link',
            '',
            '',
            'text-right',
        ]
        tbl_product_premium_rate_line_itemtable = build_html_table(outputlist, dbcolumnlist, theadlist, "tbl_product_premium_rate_line_item_table", tdclasslist)
        html = f"""
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                <div class="card-header">
                    <div class="row d-flex">
                        <div class="col-md-6">
                            <h4 class="card-title">{_('Product Premium Rate Line Item')}</h4>
                        </div>
                        <div class="col-md-6 text-right">
                            <button id="create_new_tbl_product_premium_rate_line_item" class="btn btn-primary ml-auto">New Product Premium_Rate_Line</button>
                        </div>
                    </div>

                    <hr>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        {tbl_product_premium_rate_line_itemtable}
                    </div>
                </div>
                </div>
            </div>
        """
        return html

    @expose()
    def get_premium_rate_line_item_list(self, *args, **kwargs):
        searchphrase = kwargs.get('searchphrase', None)
        product_premium_rate_id = kwargs.get('product_premium_rate_id', None)
        gender_id = kwargs.get('tbl_product_premium_rate_line_item_gender_id', None)
        maximum_age = kwargs.get('maximum_age', None)
        minimum_age = kwargs.get('minimum_age', None)
        rate_factor = kwargs.get('rate_factor', None)
        if searchphrase:
            dbase_query = DBSession.query(ProductPremiumRateLineItem). \
		    filter(ProductPremiumRateLineItem.product_premium_rate_id==product_premium_rate_id). \
                    filter(ProductPremiumRateLineItem.active==1). \
		    order_by(asc(ProductPremiumRateLineItem.product_premium_rate_id)). \
                    limit(LIMIT)
        else:
            dbase_query = DBSession.query(ProductPremiumRateLineItem). \
		    filter(ProductPremiumRateLineItem.product_premium_rate_id==product_premium_rate_id). \
                    filter(ProductPremiumRateLineItem.active==1). \
		    order_by(asc(ProductPremiumRateLineItem.product_premium_rate_id)). \
                    limit(LIMIT)
        return dbase_query

    @expose()
    def get_javascript_product_premium_rate_edit_onload(self, *args, **kwargs):
        javascript = """

      $("#create_new_tbl_product_premium_rate_line_item").click(function(){
       var kwargs = {'product_premium_rate_id': $('#product_premium_rate_id').attr('value')};
       console.log(kwargs);
       $('#dialogdiv').load('/setup/get_modal_new_tbl_product_premium_rate_line_item?', kwargs, function(data){
          return false;
           });
        });

        """
        return javascript

    @expose()
    def get_modal_new_tbl_product_premium_rate_line_item(self, *args, **kwargs):
        product_premium_rate_id = kwargs.get('product_premium_rate_id')
        dropdown_gender = self.get_selectbox_gender()
        html = f"""
            <div class="modal fade" id="dialog_edit_tbl_product_premium_rate" tabindex="-1" role="dialog" aria-labelledby="mytbl_product_premium_rateLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <div class="col-md-12">
                                <h4 class="card-title">New Product Premium Rate</h4>
                            </div>
                        </div>
                <div class="modal-body">
                 <form id='form_new_tbl_product_premium_rate_line_item'>
                     <div style='display: none' class="col-md-6">
                 <div class="form-group row">
                        <label class="col-md-3 col-form-label" required for="product_premium_rate_id">Id</label>
                         <div class="col-md-9">
                              <input id="product_premium_rate_id" type="text" name="product_premium_rate_id" value="{product_premium_rate_id}" class="form-control" required='true'>
                        </div>
                    </div>
                </div>
                   <div class="col-md-12">
					<div class="form-group row">
						<label class="col-md-6 col-form-label" required for="gender_id">Gender </label>
						<div class="col-md-6">
						{dropdown_gender}
						</div>
					</div>
				</div>
                 <div class="col-md-12">
					<div class="form-group row">
						<label class="col-md-6 col-form-label" required for="maximum_age">Maximum Age</label>
						<div class="col-md-6">
							<input id="maximum_age" type="number"  min="1"  name="maximum_age" class="form-control" required='true'>
						</div>
					</div>
				</div>
                    <div class="col-md-12">
					<div class="form-group row">
						<label class="col-md-6 col-form-label" required for="minimum_age">Minimum Age</label>
						<div class="col-md-6">
							<input id="minimum_age" type="text" name="minimum_age" class="form-control" required='true'>
						</div>
					</div>
				</div>
              <div class="col-md-12">
					<div class="form-group row">
						<label class="col-md-6 col-form-label" required for="rate_factor">Rate Factor</label>
						<div class="col-md-6">
							<input id="rate_factor" type="text" name="rate_factor" class="form-control" required='true'>
						</div>
					</div>
				 </div>
                        </form>
                        </div>
                        <div class="modal-footer">
                              <button id='save_new_tbl_product_premium_rate_line_item' class="btn btn-primary">Save</button>
                        <button class="btn btn-outline-primary tbl_product_premium_rate_line_item_back">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
            """
        javascript = """
            <script>
              setFormValidation('#form_new_tbl_product_premium_rate_line_item');
              $('#save_new_tbl_product_premium_rate_line_item').click(function(){
                 var valid = FormIsValid("#form_new_tbl_product_premium_rate_line_item");
                 if(valid){
                    var formserial = $('#form_new_tbl_product_premium_rate_line_item').serialize();
                    $.post('/setup/save_new_tbl_product_premium_rate_line_item?', formserial, function(data){
                        var result = JSON.parse(data);
                        if(result.success === true){
                           $.redirect(result.redirect, {'product_premium_rate_id' : result.product_premium_rate_id});
                        };
                        return false;
                    });
                 }
            });
           $('.tbl_product_premium_rate_line_item_back').click(function(){
               $('#dialog_edit_tbl_product_premium_rate').modal('hide');
             });
             $('#dialog_edit_tbl_product_premium_rate').modal();
            </script>
         	"""
        return html + javascript

    @expose()
    def save_new_tbl_product_premium_rate_line_item(self, *args, **kwargs):
        #Place Holder for Gender
        gender_id =1
        usernow = request.identity['user']
        this = ProductPremiumRateLineItem()
        this.product_premium_rate_id = kwargs.get('product_premium_rate_id', None)
        #this.gender_id = kwargs.get('gender_id', None)
        this.gender_id = gender_id
        this.maximum_age = kwargs.get('maximum_age', None)
        this.minimum_age = kwargs.get('minimum_age', None)
        this.rate_factor = kwargs.get('rate_factor', None)
        this.added_by = usernow.id
        DBSession.add(this)
        DBSession.flush()

        product_premium_rate_id = kwargs.get("product_premium_rate_id")
        redirect_url = '/setup/get_product_premium_edit'

        return json.dumps({'success': True, 'product_premium_rate_id': product_premium_rate_id, 'redirect': redirect_url})

    def get_selectbox_gender(self, *args, **kwargs):
        gender = []
        kwargs['outputlist'] = [{'name': m.name, 'id': m.id} for m in gender]
        return create_selectbox_html(**kwargs)

    @expose()
    def get_tbl_product_premium_rate_by_id(self, *args, **kwargs):
        return DBSession.query(ProductPremiumRate). \
            filter(ProductPremiumRate.id == kwargs.get('tbl_product_premium_rate_id', None)). \
            first()

###############################################################################
# Product Cover Exclusion
###############################################################################
    @require(predicates.not_anonymous())
    @expose('rocket.templates.generic')
    def cover_exclusions(self, *args, **kwargs):
        html = self.get_active_cover_exclusions_html(*args, **kwargs)
        javascript = self.get_javascript_cover_exclusions_onload()
        title = _("Cover & Exclusions")
        return dict(title=title, html=html, javascript=javascript)

    @expose()
    def get_active_cover_exclusions_html(self, *args, **kwargs):
        detailtable= self.get_product_benefit_cover_and_exclusion_html(**kwargs)

        html = f"""
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                <div class="card-header">
                    <div class="row d-flex">
                        <div class="col-md-6">
                            <h4 class="card-title">{_('Cover & Exclusions')}</h4>
                        </div>
                    </div>
                    <hr>
                </div>
                <div class="card-body">
                    {detailtable}
                </div>
            </div>
        </div>
        <div id='dialogdiv'></div>
        """
        return html

    @expose()
    def get_javascript_cover_exclusions_onload(self, *args, **kwargs):
        javascript = """
         $('.product_benefit_cover').click(function(){
            var kwargs = 'product_cover_and_exclusion_type_id='+$(this).attr('product_cover_and_exclusion_type_id');
            var checked = $(this).prop("checked")
            if(checked == true){
                console.log('its checked', kwargs)
                $.post('/setup/save_new_product_benefit_cover_link?', kwargs, function(data){
                    return false;
                });
            }else{
                $.post('/setup/save_delete_product_benefit_cover_link?', kwargs, function(data){
                    return false;
                });

                console.log('not checked', kwargs)
            };

         });

         /*
         $(is_benefit_cover).click(function(){
            var checked = $(this).prop("checked")
            if(checked == true){
                var data = 'product_cover_and_exclusion_id='+$(this).attr('product_cover_and_exclusion_id');
                $.post('/setup/save_new_tbl_product_premium_rate_line_item?', data, function(data){
                    var result = JSON.parse(data);
                    if(result.success === true){
                     //  $.redirect(result.redirect, {'product_premium_rate_id' : result.product_premium_rate_id});
                    };
                    return false;
                });
            } else if(checked == false){
                  console.log("False");
            }
        });
        */
        """
        return javascript

    @expose()
    def get_product_benefit_cover_and_exclusion_html(self, *args, **kwargs):
        usernow = request.identity['user']
        #
        # loaderlist = ProductCoverAndExclusionType.get_all('name')
        # linklist = ProductBenefitCoverLink.get_all('product_cover_and_exclusion_type_id')
        #
        #
        # idlist = [int(x.product_cover_and_exclusion_type_id) for x in linklist]
        #

        td = TypeDict()

        dbase_query = td.get_dict_of_types('product_cover_and_exclusion_type')
        print(dbase_query)


        #dbase_query = self.get_product_cover_and_exclusion_list(*args, **kwargs)

        linklist = ProductBenefitCoverLink.get_all('product_cover_and_exclusion_type_id')
        idlist = [int(x.product_cover_and_exclusion_type_id) for x in linklist]
        print(idlist)

        #
        # loaderlist = ProductCoverAndExclusionType.get_all('name')
        # linklist = []
        # print("Product Cover Exclusion Type", loaderlist)
        # for loader in loaderlist:
        #     print(loader.id)
        #     templinklist = ProductBenefitCoverLink.by_attr_all('product_cover_and_exclusion_type_id', loader.id)
        #     linklist.append({
        #         'linklist': templinklist,
        #         'idlist': [int(x.product_cover_and_exclusion_type_id) for x in templinklist]
        #     })
        # print(linklist)
        #
        # print("---------------------------------------------------------------")

        outputlist = []
        #  'product_benefit_cover':   f"""  <input class="form-check-input user_role" name="is_benefit_cover" id="is_benefit_cover" type="checkbox" >""",

        for id, name in dbase_query.items():

            checked_benefit_cover = ''
            if id in idlist:
                checked_benefit_cover = "checked"

            outputlist.append({
                'name':    "<div class='edit tbl_product_premium_rate_edit' product_cover_and_exclusion_id='{1}'>{0}</div>".format(name, id),
                'product_benefit_cover':   f"""<input class="form-check-input product_benefit_cover" product_cover_and_exclusion_type_id='{id}' name="is_benefit_cover" id="is_benefit_cover" type="checkbox" {checked_benefit_cover}>""",
                'product_benefit_exclusion': f"""  <input class="form-check-input product_benefit_exclusion" name="is_benefit_exclusion" id="is_benefit_exclusion" type="checkbox">""",
            })
        theadlist = [
            'Name',
            'Product Benefit Cover',
            'Product Benefit Exclusion'
        ]
        dbcolumnlist = [
            'name',
            'product_benefit_cover',
            'product_benefit_exclusion'
        ]
        tdclasslist = [
            'action_link',
            'text-center',
            'text-center',
        ]
        return build_html_table(outputlist, dbcolumnlist, theadlist, "tbl_entity_table",tdclasslist)

    @expose()
    def get_product_cover_and_exclusion_list(self, *args, **kwargs):
        searchphrase = kwargs.get('searchphrase', None)
        #product_cover_and_exclusion_type_id = kwargs.get('product_cover_and_exclusion_type_id', None)
        product_cover_and_exclusion_type_id=1
        if searchphrase:
            dbase_query = DBSession.query(ProductCoverAndExclusionType). \
		    filter(ProductCoverAndExclusionType.id==product_cover_and_exclusion_type_id). \
                    filter(ProductCoverAndExclusionType.active==1). \
		    order_by(asc(ProductCoverAndExclusionType.product_premium_rate_id)). \
                    limit(LIMIT)
        else:
            dbase_query = DBSession.query(ProductCoverAndExclusionType). \
            filter(ProductCoverAndExclusionType.active==1). \
		    order_by(asc(ProductCoverAndExclusionType.id)). \
                    limit(LIMIT)
        return dbase_query

    @expose()
    def save_delete_product_benefit_cover_link(self, *args, **kwargs):
        usernow = request.identity['user']
        this = DBSession.query(ProductBenefitCoverLink). \
                filter(ProductBenefitCoverLink.product_cover_and_exclusion_type_id==kwargs.get('product_cover_and_exclusion_type_id', None)). \
                first()
        DBSession.delete(this)
        DBSession.flush()
        return 'true'

    @expose()
    def save_new_product_benefit_cover_link(self, *args, **kwargs):
        usernow = request.identity['user']
        this = ProductBenefitCoverLink()
        this.product_cover_and_exclusion_type_id = kwargs.get('product_cover_and_exclusion_type_id', None)
        this.added_by = usernow.id
        DBSession.add(this)
        DBSession.flush()
        return 'true'
